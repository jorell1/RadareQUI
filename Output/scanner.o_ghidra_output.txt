uint64_t sym.get_num(int64_t arg7, undefined8 placeholder_1, undefined8 placeholder_2, undefined8 placeholder_3,
                    undefined8 placeholder_4, undefined8 placeholder_5, undefined8 placeholder_6,
                    undefined8 placeholder_7, int64_t arg1)
{
    uint8_t *puVar1;
    uint16_t uVar2;
    uint8_t uVar3;
    int64_t *piVar4;
    int64_t iVar5;
    undefined8 uVar6;
    uint64_t uVar7;
    char *pcVar8;
    int32_t iVar9;
    int32_t extraout_EDX;
    int32_t extraout_EDX_00;
    char *pcVar10;
    char *pcVar11;
    char *pcVar12;
    int32_t iVar13;
    int64_t iVar14;
    uint32_t uVar15;
    int32_t *unaff_R14;
    uint64_t uVar16;
    int64_t in_FS_OFFSET;
    uint8_t *puStack144;
    uint8_t *puStack128;
    int64_t iStack120;
    int64_t iStack104;
    int64_t iStack96;
    uint64_t uStack88;
    int32_t *piStack80;
    undefined *puStack72;
    int32_t iStack56;
    undefined4 uStack52;
    int64_t iStack48;
    
    // [01] -r-x section size 2704 named .text
    iStack48 = *(int64_t *)(in_FS_OFFSET + 0x28);
    uStack88 = SEXT48("\x02"._0_4_);
    iStack96 = uStack88 * 0x28;
    piStack80 = (int32_t *)(_reloc.token + iStack96);
    *(undefined *)piStack80 = 0;
    piStack80[2] = 1;
    piVar4 = (int64_t *)func_0x080078af();
    iVar14 = *piVar4;
    iVar5 = 0;
    do {
        uVar3 = *(uint8_t *)(arg1 + iVar5);
        iVar13 = (int32_t)iVar5;
        iVar5 = iVar5 + 1;
    } while ((*(uint8_t *)(iVar14 + 1 + (uint64_t)uVar3 * 2) & 8) != 0);
    if (uVar3 == 0x2e) {
        piStack80[2] = 2;
        iVar5 = (int64_t)(iVar13 + 1);
        do {
            puVar1 = (uint8_t *)(arg1 + iVar5);
            iVar13 = (int32_t)iVar5;
            iVar5 = iVar5 + 1;
        } while ((*(uint8_t *)(iVar14 + 1 + (uint64_t)*puVar1 * 2) & 8) != 0);
        if ((*puVar1 & 0xdf) == 0x45) goto code_r0x0800013c;
code_r0x0800016d:
        *(undefined8 *)(piStack80 + 6) = 0;
        uVar6 = func_0x080078af(arg1, &iStack56);
        *(undefined8 *)(piStack80 + 4) = uVar6;
        uVar7 = (uint64_t)(uint32_t)(iStack56 - (int32_t)arg1);
code_r0x0800018b:
        if (iStack48 == *(int64_t *)(in_FS_OFFSET + 0x28)) {
            return uVar7;
        }
        func_0x080078af();
        unaff_R14 = &iStack56;
        iVar9 = extraout_EDX;
    } else {
        if ((uVar3 & 0xdf) != 0x45) {
            piStack80 = (int32_t *)func_0x080078af();
            *piStack80 = 0;
            uVar6 = func_0x080078af(arg1, &iStack56, 0);
            if (*piStack80 != 0) {
                func_0x080078af(uStack88 & 0xffffffff, "integer overflow; changing to floating point");
                piStack80 = (int32_t *)(_reloc.token + (int64_t)"\x02"._0_4_ * 0x28);
                piStack80[2] = 2;
                goto code_r0x0800016d;
            }
            uVar7 = CONCAT44(uStack52, iStack56) - arg1;
            if (iStack56 == (int32_t)arg1) {
                uVar7 = 1;
            }
            *(undefined8 *)(_reloc.token + 0x10 + iStack96) = uVar6;
            goto code_r0x0800018b;
        }
code_r0x0800013c:
        iVar9 = iVar13 + 1;
        piStack80[2] = 2;
        uVar3 = *(uint8_t *)(arg1 + iVar9);
        if ((uVar3 - 0x2b & 0xfd) == 0) {
            iVar9 = iVar13 + 2;
            uVar3 = *(uint8_t *)(arg1 + iVar9);
        }
        if ((*(uint8_t *)(iVar14 + 1 + (uint64_t)uVar3 * 2) & 8) != 0) goto code_r0x0800016d;
    }
    piStack80[8] = piStack80[8] + iVar9;
    pcVar12 = "\x02";
    piVar4 = (int64_t *)(uStack88 & 0xffffffff);
    func_0x080078af();
    uVar7 = SEXT48(extraout_EDX_00);
    iStack120 = *(int64_t *)(in_FS_OFFSET + 0x28);
    pcVar8 = (char *)(*piVar4 + uVar7);
    pcVar11 = pcVar8;
    do {
        pcVar10 = pcVar11;
        pcVar11 = pcVar10 + 1;
        if (pcVar10[1] == '`') break;
    } while (pcVar10[1] != '\0');
    iStack104 = arg1;
    puStack72 = (undefined *)unaff_R14;
    uVar6 = func_0x080078af(pcVar11 + -(int64_t)pcVar8, "command string");
    func_0x080078af(uVar6, pcVar8 + 1, pcVar11 + -(int64_t)pcVar8);
    if (*pcVar11 == '\0') {
        iVar14 = 0;
code_r0x080002ac:
        func_0x080078af(uVar6, &puStack128);
        func_0x080078af(uVar6);
        puStack144 = (uint8_t *)0x0;
        uVar3 = *puStack128;
        if (uVar3 == 0) {
            *(undefined *)(*piVar4 + uVar7) = 0;
            func_0x080078af();
            goto code_r0x0800037e;
        }
code_r0x080002e1:
        iVar5 = 1;
        uVar16 = uVar7;
        do {
            if ((puStack128[iVar5] != 0) || (uVar3 != 10)) {
                uVar15 = (int32_t)uVar7 + 1;
                uVar7 = (uint64_t)uVar15;
                *(uint8_t *)(*piVar4 + uVar16) = uVar3;
                uVar16 = SEXT48((int32_t)uVar15);
            }
            if (*(uint64_t *)pcVar12 == uVar16) {
                func_0x080078af();
            }
            uVar3 = puStack128[iVar5];
            iVar5 = iVar5 + 1;
        } while (uVar3 != 0);
        *(undefined *)(*piVar4 + uVar16) = 0;
        func_0x080078af();
        uVar7 = uVar16;
        if (puStack144 == (uint8_t *)0x0) goto code_r0x0800037e;
    } else {
        iVar5 = func_0x080078af(pcVar10 + 2);
        iVar14 = iVar5 + 1;
        if (iVar5 == 0) goto code_r0x080002ac;
        puStack144 = (uint8_t *)func_0x080078af(iVar14, "input line copy");
        func_0x080078af(puStack144, pcVar10 + 2);
        func_0x080078af(uVar6, &puStack128);
        func_0x080078af(uVar6);
        uVar3 = *puStack128;
        if (uVar3 != 0) goto code_r0x080002e1;
        *(undefined *)(*piVar4 + uVar7) = 0;
        func_0x080078af(puStack128);
    }
    uVar16 = *(uint64_t *)pcVar12;
    while (uVar16 < iVar14 + uVar7) {
        func_0x080078af();
        uVar16 = *(uint64_t *)pcVar12;
    }
    func_0x080078af(*piVar4 + uVar7, puStack144);
    func_0x080078af();
    puStack128 = puStack144;
code_r0x0800037e:
    reloc.screen_ok = (code)0x0;
    if (iStack120 == *(int64_t *)(in_FS_OFFSET + 0x28)) {
        reloc.screen_ok = (code)0x0;
        return 0;
    }
    func_0x080078af();
    if (puStack128 == (uint8_t *)0x0) {
        return 0;
    }
    uVar3 = *puStack128;
    if (uVar3 != 0) {
        piVar4 = (int64_t *)func_0x080078af();
        uVar2 = *(uint16_t *)(*piVar4 + (uint64_t)uVar3 * 2);
        if ((uVar2 & 0x800) == 0) {
            while ((((uint8_t)~uVar3 >> 7 & uVar3 != 0x5f) == 0 || ((uVar2 & 8) != 0))) {
                uVar3 = puStack128[1];
                puStack128 = puStack128 + 1;
                if (uVar3 == 0) {
                    return 1;
                }
                uVar2 = *(uint16_t *)(*piVar4 + (uint64_t)uVar3 * 2);
            }
            return 0;
        }
    }
    return 0;
}


// WARNING: Control flow encountered bad instruction data
// WARNING: Removing unreachable block (ram,0x08000b4d)

uint32_t sym.scanner(int64_t arg1, int64_t arg2, undefined8 placeholder_2, int64_t arg4)
{
    uint8_t *puVar1;
    int64_t iVar2;
    char cVar3;
    uint16_t uVar4;
    int64_t iVar5;
    int64_t iVar6;
    undefined *puVar7;
    char cVar8;
    uint8_t uVar9;
    uint32_t uVar10;
    undefined4 uVar11;
    int32_t iVar12;
    int32_t iVar13;
    int64_t *piVar14;
    uint64_t uVar15;
    undefined2 uVar16;
    uint32_t uVar17;
    uint64_t arg3;
    int64_t iVar18;
    undefined4 *arg1_00;
    undefined *puVar19;
    uint32_t uVar20;
    uint32_t uVar21;
    undefined4 *puVar22;
    int64_t in_FS_OFFSET;
    uint8_t uVar23;
    int64_t extraout_XMM0_Qa;
    int64_t extraout_XMM0_Qa_00;
    int64_t extraout_XMM0_Qa_01;
    int64_t iVar24;
    undefined8 in_XMM1_Qa;
    undefined8 in_XMM2_Qa;
    undefined8 in_XMM3_Qa;
    undefined8 in_XMM4_Qa;
    undefined8 in_XMM5_Qa;
    undefined8 in_XMM6_Qa;
    undefined8 in_XMM7_Qa;
    unkbyte10 Var25;
    char cStack65;
    
    uVar23 = 0;
    arg1_00 = *(undefined4 **)arg1;
    iVar5 = *(int64_t *)(in_FS_OFFSET + 0x28);
    _segment.ehdr = 0;
    "\x02"._0_4_ = 0;
    if (*(char *)arg1_00 == '\0') {
        uVar21 = 0;
        arg3 = 0;
        puVar19 = _reloc.token;
        arg1_00 = (undefined4 *)arg1;
    } else {
        piVar14 = (int64_t *)func_0x080078af();
        uVar21 = 0;
        arg3 = 0;
        iVar18 = 0;
        puVar22 = arg1_00;
        iVar24 = extraout_XMM0_Qa;
        do {
            puVar19 = (undefined *)arg4;
            if (_reloc.token_table_size <= (int32_t)(uVar21 + 1)) {
                iVar24 = func_0x080078af();
                puVar19 = (undefined *)arg4;
                uVar21 = "\x02"._0_4_;
            }
            arg4 = (int64_t)_reloc.token;
            iVar6 = *piVar14;
            uVar20 = (uint32_t)arg3;
            if ((*(uint8_t *)(iVar6 + 1 + (uint64_t)*(uint8_t *)arg1_00 * 2) & 0x20) != 0) {
                arg3 = (uint64_t)(uVar20 + 1);
                iVar18 = (int64_t)(int32_t)(uVar20 + 1);
                arg1_00 = (undefined4 *)((int64_t)puVar22 + iVar18);
                arg4 = (int64_t)puVar19;
                goto code_r0x0800064e;
            }
            iVar2 = (int64_t)(int32_t)uVar21 * 0x28;
            puVar19 = _reloc.token + iVar2;
            *(uint32_t *)(puVar19 + 0x20) = uVar20;
            *(undefined4 *)(puVar19 + 0x24) = 1;
            *puVar19 = 1;
            uVar9 = *(uint8_t *)arg1_00;
            if (uVar9 == 0x60) {
                iVar24 = sym.substitute(arg1, arg2, arg3);
                puVar22 = *(undefined4 **)arg1;
                iVar18 = (int64_t)(int32_t)uVar20;
                arg1_00 = (undefined4 *)((int64_t)puVar22 + iVar18);
                uVar21 = "\x02"._0_4_;
                goto code_r0x0800064e;
            }
            uVar4 = *(uint16_t *)(iVar6 + (uint64_t)uVar9 * 2);
            if (((uint8_t)(uVar9 == 0x5f | uVar9 >> 7) != 0) || ((uVar4 & 0x400) != 0)) {
                uVar9 = *(uint8_t *)((int64_t)puVar22 + (int64_t)(int32_t)uVar20 + 1);
                if (((*(uint8_t *)(iVar6 + (uint64_t)uVar9 * 2) & 8) != 0) ||
                   (uVar9 = uVar9 >> 7 | uVar9 == 0x5f, arg4 = ZEXT18(uVar9), uVar9 != 0)) {
                    uVar15 = SEXT48((int32_t)(uVar20 + 1));
                    do {
                        do {
                            arg3 = uVar15 & 0xffffffff;
                            *(uint32_t *)(puVar19 + 0x24) = (1 - uVar20) + (int32_t)uVar15;
                            uVar9 = *(uint8_t *)((int64_t)puVar22 + uVar15 + 1);
                            uVar15 = uVar15 + 1;
                        } while ((*(uint8_t *)(iVar6 + (uint64_t)uVar9 * 2) & 8) != 0);
                        arg4 = ZEXT18(uVar9 == 0x5f);
                    } while ((uint8_t)(uVar9 >> 7 | uVar9 == 0x5f) != 0);
                }
                goto code_r0x08000639;
            }
            if ((uVar4 & 0x800) != 0) {
code_r0x080007c8:
                *puVar19 = 0;
                uVar11 = sym.get_num(iVar24, in_XMM1_Qa, in_XMM2_Qa, in_XMM3_Qa, in_XMM4_Qa, in_XMM5_Qa, in_XMM6_Qa, 
                                     in_XMM7_Qa, (int64_t)arg1_00);
                puVar7 = _reloc.token;
                *(undefined4 *)(puVar19 + 0x24) = uVar11;
                arg3 = (uint64_t)(uVar20 + *(int32_t *)(puVar7 + (int64_t)(int32_t)"\x02"._0_4_ * 0x28 + 0x24));
                iVar24 = extraout_XMM0_Qa_00;
                uVar21 = "\x02"._0_4_;
                goto code_r0x0800063c;
            }
            if (uVar9 == 0x2e) {
                if ((*(uint8_t *)(iVar6 + 1 + (uint64_t)*(uint8_t *)((int64_t)puVar22 + iVar18 + 1) * 2) & 8) != 0)
                goto code_r0x080007c8;
                goto code_r0x08000639;
            }
            if (uVar9 == 0x7b) {
                *puVar19 = 0;
                arg4 = (int64_t)(puVar19 + 0x18);
                iVar18 = (int64_t)(int32_t)(uVar20 + 1);
                *(undefined4 *)(puVar19 + 8) = 2;
                arg1_00 = (undefined4 *)((int64_t)puVar22 + iVar18);
                iVar13 = func_0x080078af(arg1_00, "%lf , %lf %c", puVar19 + 0x10);
                iVar24 = extraout_XMM0_Qa_01;
                if (iVar13 < 1) {
                    _segment.ehdr = _segment.ehdr + 1;
                    "\x02"._0_4_ = uVar21 + 1;
                    _reloc.token[(int64_t)(int32_t)uVar21 * 0x28] = 1;
                    arg3 = (uint64_t)(uVar20 + 1);
                    uVar21 = uVar21 + 1;
                    goto code_r0x0800064e;
                }
                if ((iVar13 == 3) && (cStack65 == '}')) {
                    puVar19 = _reloc.token + iVar2;
                    *(int32_t *)(puVar19 + 0x24) = *(int32_t *)(puVar19 + 0x24) + 2;
                    uVar15 = (int64_t)(int32_t)(uVar20 + 2);
                    while (arg3 = uVar15 & 0xffffffff, *(char *)((int64_t)puVar22 + uVar15) != '}') {
                        *(int32_t *)(puVar19 + 0x24) = *(int32_t *)(puVar19 + 0x24) + 1;
                        _uVar9 = (char *)((int64_t)puVar22 + uVar15);
                        uVar15 = uVar15 + 1;
                        if (*_uVar9 == '\0') {
                            func_0x080078af(uVar21, "no matching \'}\'");
                            goto code_r0x08000aba;
                        }
                    }
                    goto code_r0x08000639;
                }
code_r0x08000aba:
                arg1_00 = (undefined4 *)(uint64_t)uVar21;
                func_0x080078af();
                goto code_r0x08000acb;
            }
            if ((uVar9 == 0x27) || (uVar9 == 0x22)) {
                *(undefined4 *)(puVar19 + 0x24) = 2;
                uVar20 = uVar20 + 1;
                cVar3 = *(char *)arg1_00;
                iVar18 = (int64_t)(int32_t)uVar20;
                _uVar9 = (char *)((int64_t)puVar22 + iVar18);
                cVar8 = *_uVar9;
                if (cVar3 != cVar8) {
                    do {
                        while( true ) {
                            if (cVar8 == '\0') {
                                *_uVar9 = cVar3;
                                arg3 = (uint64_t)(uVar20 + 1);
                                *(undefined *)((int64_t)puVar22 + iVar18 + 1) = 0;
                                uVar21 = "\x02"._0_4_;
                                goto code_r0x0800063c;
                            }
                            iVar13 = (int32_t)arg3;
                            if (cVar3 == '\"') break;
                            puVar19 = _reloc.token + (int64_t)(int32_t)"\x02"._0_4_ * 0x28;
                            iVar12 = *(int32_t *)(puVar19 + 0x24);
                            if (((cVar3 != '\'') || (*(char *)((int64_t)puVar22 + iVar18 + 1) != '\'')) ||
                               (*(char *)((int64_t)puVar22 + iVar18 + 2) != '\'')) goto code_r0x0800087b;
                            arg3 = (uint64_t)(iVar13 + 3);
                            *(int32_t *)(puVar19 + 0x24) = iVar12 + 3;
                            uVar20 = iVar13 + 4;
code_r0x08000888:
                            iVar18 = (int64_t)(int32_t)uVar20;
                            _uVar9 = (char *)((int64_t)puVar22 + iVar18);
                            cVar8 = *_uVar9;
                            uVar21 = "\x02"._0_4_;
                            if (cVar3 == cVar8) goto code_r0x08000910;
                        }
                        if (cVar8 != '\\') {
                            if (cVar8 == '`') {
                                iVar24 = sym.substitute(arg1, arg2, (uint64_t)uVar20);
                                puVar22 = *(undefined4 **)arg1;
                                goto code_r0x08000888;
                            }
                            puVar19 = _reloc.token + (int64_t)(int32_t)"\x02"._0_4_ * 0x28;
                            iVar12 = *(int32_t *)(puVar19 + 0x24);
code_r0x0800087b:
                            arg3 = (uint64_t)uVar20;
                            uVar20 = uVar20 + 1;
                            *(int32_t *)(puVar19 + 0x24) = iVar12 + 1;
                            goto code_r0x08000888;
                        }
                        puVar19 = _reloc.token + (int64_t)(int32_t)"\x02"._0_4_ * 0x28;
                        iVar12 = *(int32_t *)(puVar19 + 0x24);
                        if (*(char *)((int64_t)puVar22 + iVar18 + 1) == '\0') goto code_r0x0800087b;
                        arg3 = (uint64_t)(iVar13 + 2);
                        uVar20 = iVar13 + 3;
                        *(int32_t *)(puVar19 + 0x24) = iVar12 + 2;
                        iVar18 = (int64_t)(int32_t)uVar20;
                        _uVar9 = (char *)((int64_t)puVar22 + iVar18);
                        cVar8 = *_uVar9;
                        uVar21 = "\x02"._0_4_;
                    } while (cVar8 != '\"');
                }
code_r0x08000910:
                arg3 = (uint64_t)((int32_t)arg3 + 2);
                goto code_r0x0800063c;
            }
            switch(uVar9) {
            case 0x21:
            case 0x3e:
                uVar10 = uVar20 + 1;
                if (*(char *)((int64_t)puVar22 + iVar18 + 1) == '=') {
                    *(undefined4 *)(puVar19 + 0x24) = 2;
                    uVar17 = uVar20 + 2;
                    uVar20 = uVar10;
                    uVar10 = uVar17;
                }
                arg3 = (uint64_t)uVar10;
                if (*(char *)((int64_t)puVar22 + (int64_t)(int32_t)uVar20 + 1) == '>') {
code_r0x080006ef:
                    *(int32_t *)(puVar19 + 0x24) = *(int32_t *)(puVar19 + 0x24) + 1;
                    arg3 = (uint64_t)(uVar10 + 1);
                }
                break;
            default:
                arg1_00 = (undefined4 *)(uint64_t)uVar21;
                func_0x080078af(arg1_00, "invalid character %c", (int32_t)(char)uVar9);
                goto code_r0x08000669;
            case 0x23:
                if ((uVar21 != 0) && (*(char *)(_reloc.gp_input_line + *(int32_t *)(arg4 + iVar2 + -8)) == '$'))
                goto code_r0x08000639;
                goto code_r0x08000669;
            case 0x24:
            case 0x25:
            case 0x28:
            case 0x29:
            case 0x2b:
            case 0x2c:
            case 0x2d:
            case 0x2f:
            case 0x3a:
            case 0x3b:
            case 0x3f:
            case 0x5b:
            case 0x5d:
            case 0x5e:
            case 0x7e:
code_r0x08000639:
                arg3 = (uint64_t)((int32_t)arg3 + 1);
                break;
            case 0x26:
            case 0x2a:
            case 0x3d:
            case 0x7c:
                if (uVar9 == *(uint8_t *)((int64_t)puVar22 + iVar18 + 1)) {
                    *(undefined4 *)(puVar19 + 0x24) = 2;
                    arg3 = (uint64_t)(uVar20 + 2);
                } else {
                    arg3 = (uint64_t)(uVar20 + 1);
                }
                break;
            case 0x3c:
                uVar10 = uVar20 + 1;
                if (*(char *)((int64_t)puVar22 + iVar18 + 1) == '=') {
                    *(undefined4 *)(puVar19 + 0x24) = 2;
                    uVar17 = uVar20 + 2;
                    uVar20 = uVar10;
                    uVar10 = uVar17;
                }
                arg3 = (uint64_t)uVar10;
                if (*(char *)((int64_t)puVar22 + (int64_t)(int32_t)uVar20 + 1) == '<') goto code_r0x080006ef;
                break;
            case 0x7d:
                _segment.ehdr = _segment.ehdr + -1;
                arg3 = (uint64_t)(uVar20 + 1);
            }
code_r0x0800063c:
            "\x02"._0_4_ = uVar21 + 1;
            iVar18 = (int64_t)(int32_t)arg3;
            arg1_00 = (undefined4 *)((int64_t)puVar22 + iVar18);
            uVar21 = "\x02"._0_4_;
code_r0x0800064e:
        } while (*(char *)arg1_00 != '\0');
        puVar19 = _reloc.token + (int64_t)(int32_t)uVar21 * 0x28;
    }
code_r0x08000669:
    *(int32_t *)(puVar19 + 0x20) = (int32_t)arg3;
    *(undefined4 *)(puVar19 + 0x24) = 0;
    *puVar19 = 1;
    if (iVar5 == *(int64_t *)(in_FS_OFFSET + 0x28)) {
        return uVar21;
    }
code_r0x08000acb:
    Var25 = func_0x080078af();
    uVar16 = (undefined2)((unkuint10)Var25 >> 0x40);
    // [05] -r-- section size 125 named .rodata.str1.1
    uVar9 = (char)Var25 + *(char *)Var25;
    uVar15 = (uint64_t)(char *)Var25 & 0xffffffffffffff00;
    _uVar9 = (char *)(uVar15 | uVar9);
    *_uVar9 = *_uVar9 + uVar9;
    uVar21 = *(uint32_t *)(arg4 + arg3 * 2 + 0x6e);
    puVar1 = (uint8_t *)(int64_t)((int32_t)arg3 + 0x78);
    *puVar1 = *puVar1 & (uint8_t)(uVar15 >> 8);
    out(*(undefined *)(uint64_t)uVar21, uVar16);
    out(((undefined *)(uint64_t)uVar21)[(uint64_t)uVar23 * -2 + 1], uVar16);
    uVar11 = in(uVar16);
    *arg1_00 = uVar11;
    // WARNING: Bad instruction - Truncating control flow here
    halt_baddata();
}


undefined8 sym.substitute(int64_t arg1, int64_t arg2, int64_t arg3)
{
    uint16_t uVar1;
    uint8_t uVar2;
    undefined8 uVar3;
    int64_t iVar4;
    int64_t *piVar5;
    char *pcVar6;
    char *pcVar7;
    char *pcVar8;
    int64_t iVar9;
    uint32_t uVar10;
    uint64_t uVar11;
    uint64_t uVar12;
    int64_t in_FS_OFFSET;
    uint8_t *puStack88;
    uint8_t *puStack72;
    int64_t iStack64;
    
    uVar11 = SEXT48((int32_t)arg3);
    iStack64 = *(int64_t *)(in_FS_OFFSET + 0x28);
    pcVar6 = (char *)(*(int64_t *)arg1 + uVar11);
    pcVar8 = pcVar6;
    do {
        pcVar7 = pcVar8;
        pcVar8 = pcVar7 + 1;
        if (pcVar7[1] == '`') break;
    } while (pcVar7[1] != '\0');
    uVar3 = func_0x080078af(pcVar8 + -(int64_t)pcVar6, "command string");
    func_0x080078af(uVar3, pcVar6 + 1, pcVar8 + -(int64_t)pcVar6);
    if (*pcVar8 == '\0') {
        iVar9 = 0;
code_r0x080002ac:
        func_0x080078af(uVar3, &puStack72);
        func_0x080078af(uVar3);
        puStack88 = (uint8_t *)0x0;
        uVar2 = *puStack72;
        if (uVar2 == 0) {
            *(undefined *)(*(int64_t *)arg1 + uVar11) = 0;
            func_0x080078af();
            goto code_r0x0800037e;
        }
code_r0x080002e1:
        iVar4 = 1;
        uVar12 = uVar11;
        do {
            if ((puStack72[iVar4] != 0) || (uVar2 != 10)) {
                uVar10 = (int32_t)uVar11 + 1;
                uVar11 = (uint64_t)uVar10;
                *(uint8_t *)(*(int64_t *)arg1 + uVar12) = uVar2;
                uVar12 = SEXT48((int32_t)uVar10);
            }
            if (*(uint64_t *)arg2 == uVar12) {
                func_0x080078af();
            }
            uVar2 = puStack72[iVar4];
            iVar4 = iVar4 + 1;
        } while (uVar2 != 0);
        *(undefined *)(*(int64_t *)arg1 + uVar12) = 0;
        func_0x080078af();
        uVar11 = uVar12;
        if (puStack88 == (uint8_t *)0x0) goto code_r0x0800037e;
    } else {
        iVar4 = func_0x080078af(pcVar7 + 2);
        iVar9 = iVar4 + 1;
        if (iVar4 == 0) goto code_r0x080002ac;
        puStack88 = (uint8_t *)func_0x080078af(iVar9, "input line copy");
        func_0x080078af(puStack88, pcVar7 + 2);
        func_0x080078af(uVar3, &puStack72);
        func_0x080078af(uVar3);
        uVar2 = *puStack72;
        if (uVar2 != 0) goto code_r0x080002e1;
        *(undefined *)(*(int64_t *)arg1 + uVar11) = 0;
        func_0x080078af(puStack72);
    }
    uVar12 = *(uint64_t *)arg2;
    while (uVar12 < iVar9 + uVar11) {
        func_0x080078af();
        uVar12 = *(uint64_t *)arg2;
    }
    func_0x080078af(*(int64_t *)arg1 + uVar11, puStack88);
    func_0x080078af();
    puStack72 = puStack88;
code_r0x0800037e:
    reloc.screen_ok = (code)0x0;
    if (iStack64 == *(int64_t *)(in_FS_OFFSET + 0x28)) {
        reloc.screen_ok = (code)0x0;
        return 0;
    }
    func_0x080078af();
    if (puStack72 == (uint8_t *)0x0) {
        return 0;
    }
    uVar2 = *puStack72;
    if (uVar2 != 0) {
        piVar5 = (int64_t *)func_0x080078af();
        uVar1 = *(uint16_t *)(*piVar5 + (uint64_t)uVar2 * 2);
        if ((uVar1 & 0x800) == 0) {
            while ((((uint8_t)~uVar2 >> 7 & uVar2 != 0x5f) == 0 || ((uVar1 & 8) != 0))) {
                uVar2 = puStack72[1];
                puStack72 = puStack72 + 1;
                if (uVar2 == 0) {
                    return 1;
                }
                uVar1 = *(uint16_t *)(*piVar5 + (uint64_t)uVar2 * 2);
            }
            return 0;
        }
    }
    return 0;
}


