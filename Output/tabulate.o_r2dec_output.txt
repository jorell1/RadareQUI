/* r2dec pseudo code output */
/* /home/jmov/PycharmProjects/RadareQUI/Specimens/ObjFiles/tabulate.o @ 0x8000040 */
#include <stdint.h>
 
uint64_t expand_newline (int64_t arg1) {
    rdi = arg1;
    /* [01] -r-x section size 6948 named .text */
    rbx = rdi;
    strlen (rbx);
    rsi = loc__LC0;
    rdi = rax + rax + 1;
    rax = strlen ();
    rdx = rax;
    while (cl != 0xa) {
        rbx++;
        *(rdx) = cl;
        rdx++;
        if (*((rbx - 1)) == 0) {
            goto label_1;
        }
label_0:
        ecx = *(rbx);
    }
    ecx = 0x6e5c;
    rbx++;
    rdx += 2;
    *((rdx - 2)) = cx;
    if (*((rbx - 1)) != 0) {
        goto label_0;
    }
label_1:
    return rax;
}


/* r2dec pseudo code output */
/* /home/jmov/PycharmProjects/RadareQUI/Specimens/ObjFiles/tabulate.o @ 0x80000a0 */
#include <stdint.h>
 
int64_t output_number (int64_t arg7, int64_t arg1, int64_t arg2) {
    xmm0 = arg7;
    rdi = arg1;
    rsi = arg2;
    __asm ("ucomisd xmm0, xmm0");
    rbx = rsi;
    __asm ("jp 0x80001d8");
    rdi = (int64_t) edi;
    rdx = reloc_axis_array;
    rax = rdi * 0x2a8;
    rax += rdx;
    r8 = *((rax + 0x178));
    if (*((rax + 0x170)) != 1) {
        __asm ("movapd xmm1, xmm0");
        rdx = r8;
        esi = 0x80;
        rdi = rbx;
        xmm0 = .rodata.cst8;
        strlen ();
label_0:
        rdi = rbx;
        strlen ();
        edx = 0x20;
        *((rbx + rax)) = dx;
        return rax;
    }
    if (*(r8) == 0x25) {
        goto label_3;
    }
label_2:
    rdi *= 0x2a8;
    *(rbx) = 0x22;
    ecx = 4;
    rdx = *((rdx + rdi + 0x178));
    rdi = loc__LC3;
    rsi = rdx;
    __asm ("repe cmpsb byte [rsi], byte ptr [rdi]");
    rdi = rbx + 1;
    al = (*(r8) > 0x25) ? 1 : 0;
    if (al != 0) {
        goto label_4;
    }
    rdx = *(reloc.timefmt);
    esi = 0x7f;
    strlen ();
    while (rax != 0) {
        *(rax) = 0x20;
label_1:
        esi = 0xa;
        rdi = rbx;
        rax = strlen ();
    }
    rdi = rbx;
    strlen ();
    ecx = 0x22;
    *((rbx + rax)) = cx;
    goto label_0;
label_4:
    esi = 0x7f;
    strlen ();
    goto label_1;
label_3:
    if (*((r8 + 1)) != 0x73) {
        goto label_2;
    }
    if (*((r8 + 2)) != 0) {
        goto label_2;
    }
    __asm ("movapd xmm1, xmm0");
    xmm0 = .rodata.cst8;
    rdx = "%.0f";
    rdi = rbx;
    esi = 0x80;
    strlen ();
    goto label_0;
    *(rsi) = 0x4e614e20;
    *((rsi + 4)) = 0;
    goto label_0;
}











