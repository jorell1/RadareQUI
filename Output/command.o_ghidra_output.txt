int32_t sym.find_clause(int64_t arg1, int64_t arg2)
{
    bool bVar1;
    int32_t iVar2;
    int64_t iVar3;
    int32_t iVar4;
    int32_t iVar5;
    
    // [01] -r-x section size 19749 named .text
    iVar3 = CONCAT44(*(undefined4 *)0x8000004, _segment.ehdr);
    *(undefined4 *)arg1 = *(undefined4 *)(iVar3 + 0x20 + (int64_t)_segment.ehdr * 0x28);
    iVar4 = _segment.ehdr + 1;
    bVar1 = iVar4 < _segment.ehdr;
    _segment.ehdr = iVar4;
    if (bVar1) {
        iVar5 = 1;
        do {
            iVar2 = func_0x080405e1(iVar4, "");
            if (iVar2 == 0) {
                iVar2 = func_0x080405e1(iVar4, 0x8004df2);
                if (iVar2 != 0) {
                    iVar5 = iVar5 + -1;
                    if (iVar5 == 0) break;
                }
            } else {
                iVar5 = iVar5 + 1;
            }
            iVar4 = iVar4 + 1;
        } while (iVar4 < _segment.ehdr);
        iVar3 = CONCAT44(*(undefined4 *)0x8000004, _segment.ehdr);
    }
    *(undefined4 *)arg2 = *(undefined4 *)(iVar3 + 0x20 + (int64_t)iVar4 * 0x28);
    return iVar4 + 1;
}


void sym.new_clause(int64_t arg1, int64_t arg2)
{
    undefined8 uVar1;
    int64_t iVar2;
    int64_t iVar3;
    
    iVar3 = (int64_t)((int32_t)arg2 - (int32_t)arg1);
    uVar1 = func_0x080405e1(iVar3, reloc..LC2);
    iVar2 = func_0x080405e1(uVar1, _segment.ehdr + 1 + (int64_t)(int32_t)arg1, iVar3);
    *(undefined *)(iVar2 + -1 + iVar3) = 0;
    return;
}


uint32_t sym.report_error(uint32_t arg1)
{
    uint32_t uVar1;
    undefined8 uVar2;
    uint32_t *puVar3;
    
    if (arg1 == 0xffffffff) {
        puVar3 = (uint32_t *)func_0x080405e1();
        uVar1 = *puVar3;
        if (uVar1 != 0) goto code_r0x08000154;
    }
    uVar1 = arg1 >> 8 & 0xff;
code_r0x08000154:
    func_0x080405e1(reloc..LC3, (int64_t)(int32_t)uVar1);
    if (uVar1 == 0x7f) {
        func_0x080405e1(reloc..LC5, "command not found or shell failed");
        return 0x7f;
    }
    uVar2 = func_0x080405e1(uVar1);
    func_0x080405e1(reloc..LC5, uVar2);
    return uVar1;
}


int32_t sym.read_line(int64_t arg1, int64_t arg2)
{
    uint8_t *puVar1;
    uint16_t uVar2;
    undefined8 uVar3;
    bool bVar4;
    bool bVar5;
    uint8_t uVar6;
    bool bVar7;
    char cVar8;
    int32_t iVar9;
    undefined4 uVar10;
    int32_t iVar11;
    int64_t iVar12;
    uint64_t uVar13;
    undefined8 *puVar14;
    undefined8 uVar15;
    uint8_t *puVar16;
    int64_t *piVar17;
    int64_t iVar18;
    uint64_t uVar19;
    int32_t iVar20;
    char *pcVar21;
    uint64_t uVar22;
    uint8_t *puVar23;
    char *pcVar24;
    uint64_t uVar25;
    uint8_t uVar26;
    code *pcVar27;
    uint32_t uVar28;
    uint64_t uVar29;
    uint64_t uVar30;
    int64_t in_FS_OFFSET;
    int32_t iStack168;
    undefined8 uStack73;
    undefined uStack65;
    int64_t iStack64;
    
    uVar22 = arg2 & 0xffffffff;
    pcVar21 = (char *)CONCAT44(*(undefined4 *)0x8000004, _segment.ehdr);
    iStack64 = *(int64_t *)(in_FS_OFFSET + 0x28);
    _reloc.current_prompt = arg1;
    if ((int32_t)arg2 == 0) {
        _segment.ehdr = 0;
        *pcVar21 = '\0';
        pcVar21 = (char *)CONCAT44(*(undefined4 *)0x8000004, _segment.ehdr);
    }
    uVar29 = SEXT48((int32_t)uVar22);
    pcVar27 = (code *)arg1;
    do {
        pcVar21 = pcVar21 + uVar29;
        uVar30 = CONCAT44(*(undefined4 *)0x8000004, _segment.ehdr) - uVar29;
        if (reloc.interactive == (code)0x0) {
            iVar12 = func_0x080405e1(pcVar21, uVar30 & 0xffffffff, _reloc.stdin);
            if (iVar12 == 0) {
code_r0x08000388:
                if (reloc.interactive != (code)0x0) {
                    func_0x080405e1(10, _reloc.stderr);
                }
                *(undefined *)(CONCAT44(*(undefined4 *)0x8000004, _segment.ehdr) + uVar29) = 0;
                iVar11 = 1;
                _segment.ehdr = _segment.ehdr + 1;
                if (((int32_t)uVar22 < 1) || (_reloc.curly_brace_count != 0)) goto code_r0x080003be;
                break;
            }
        } else {
            if (_obj.leftover.13071 == -1) {
                if (_obj.line.13070 != (char *)0x0) {
                    func_0x080405e1();
                    _obj.line.13070 = (char *)0x0;
                    if (reloc.interactive == (code)0x0) {
                        pcVar27 = reloc..LC9;
                    }
                }
                pcVar24 = (char *)func_0x080405e1(pcVar27);
                _obj.leftover.13071 = 0;
                _obj.line.13070 = pcVar24;
                if (pcVar24 == (char *)0x0) goto code_r0x08000388;
                if (*pcVar24 != '\0') {
                    func_0x080405e1();
                    pcVar24 = _obj.line.13070;
                    uStack65 = 0;
                    uStack73 = 0x79726f7473246968;
                    piVar17 = (int64_t *)func_0x080405e1();
                    uVar13 = 0;
                    do {
                        puVar16 = (uint8_t *)(pcVar24 + uVar13);
                        uVar19 = (uint64_t)*puVar16;
                        uVar25 = uVar13 & 0xffffffff;
                        uVar13 = uVar13 + 1;
                    } while ((*(uint8_t *)(*piVar17 + uVar19 * 2) & 1) != 0);
                    iVar12 = 1;
                    if (*puVar16 == 0) {
code_r0x08000568:
                        if ((reloc.history_full == (code)0x0) &&
                           (iVar11 = func_0x080405e1(pcVar24, 0xffffffff), pcVar24 = _obj.line.13070, iVar11 != -1)) {
                            puVar14 = (undefined8 *)func_0x080405e1();
                            iVar11 = func_0x080405e1(*puVar14, pcVar24);
                            pcVar24 = _obj.line.13070;
                            if (iVar11 == 0) {
                                uVar10 = func_0x080405e1();
                                puVar14 = (undefined8 *)func_0x080405e1(uVar10);
                                pcVar24 = _obj.line.13070;
                                if (puVar14 != (undefined8 *)0x0) {
                                    func_0x080405e1(*puVar14);
                                    func_0x080405e1(puVar14[1]);
                                    func_0x080405e1(puVar14);
                                    pcVar24 = _obj.line.13070;
                                }
                            }
                        }
                        func_0x080405e1(pcVar24);
                        goto code_r0x080002b4;
                    }
                    do {
                        iVar18 = iVar12 + (int32_t)uVar25;
                        iVar11 = (int32_t)iVar12;
                        if (pcVar24[iVar18] == 0) break;
                        iVar12 = iVar12 + 1;
                    } while ((*(uint8_t *)(*piVar17 + (uint64_t)(uint8_t)pcVar24[iVar18] * 2) & 1) == 0);
                    iVar12 = 1;
                    cVar8 = 'h';
                    iVar20 = 0;
                    while( true ) {
                        if (cVar8 != (char)uVar19) {
                            if (cVar8 != '$') goto code_r0x08000568;
                            uVar25 = (uint64_t)((int32_t)uVar25 - 1);
                            iVar20 = 1;
                        }
                        iVar9 = (int32_t)iVar12;
                        if (iVar11 + iVar20 <= iVar9) break;
                        cVar8 = *(char *)((int64_t)&uStack73 + iVar12);
                        iVar12 = iVar12 + 1;
                        uVar19 = (uint64_t)(uint8_t)pcVar24[(int32_t)uVar25 + iVar9];
                    }
                    if (((iVar20 == 0) && (*(char *)((int64_t)&uStack73 + (int64_t)iVar9) != '\0')) &&
                       (*(char *)((int64_t)&uStack73 + (int64_t)iVar9) != '$')) goto code_r0x08000568;
                    goto code_r0x080002bd;
                }
            } else {
code_r0x080002b4:
                pcVar24 = _obj.line.13070;
                if (_obj.line.13070 == (char *)0x0) goto code_r0x08000388;
code_r0x080002bd:
                pcVar24 = pcVar24 + _obj.leftover.13071;
            }
            func_0x080405e1(pcVar21, pcVar24, uVar30);
            iVar11 = func_0x080405e1(pcVar21);
            _obj.leftover.13071 = iVar11 + _obj.leftover.13071;
            if (_obj.line.13070[_obj.leftover.13071] == '\0') {
                _obj.leftover.13071 = -1;
            }
        }
        pcVar21 = (char *)CONCAT44(*(undefined4 *)0x8000004, _segment.ehdr);
        iVar11 = func_0x080405e1(pcVar21);
        uVar28 = iVar11 - 1;
        uVar22 = (uint64_t)uVar28;
        if ((int32_t)uVar28 < 0) break;
        uVar29 = SEXT48((int32_t)uVar28);
        cVar8 = pcVar21[uVar29];
        if (cVar8 == '\n') {
            pcVar21[uVar29] = '\0';
            pcVar21 = (char *)CONCAT44(*(undefined4 *)0x8000004, _segment.ehdr);
            if (uVar28 == 0) {
                cVar8 = *pcVar21;
                goto code_r0x08000344;
            }
            if (pcVar21[uVar29 - 1] == '\r') {
                uVar28 = iVar11 - 2;
                uVar29 = SEXT48((int32_t)uVar28);
                pcVar21[uVar29] = '\0';
                pcVar21 = (char *)CONCAT44(*(undefined4 *)0x8000004, _segment.ehdr);
                if (0 < (int32_t)uVar28) goto code_r0x08000407;
            } else {
code_r0x08000407:
                uVar28 = uVar28 - 1;
                uVar29 = SEXT48((int32_t)uVar28);
            }
            uVar22 = (uint64_t)uVar28;
            cVar8 = pcVar21[uVar29];
code_r0x08000344:
            if (cVar8 != '\\') break;
        } else {
            if ((uint64_t)(int64_t)(iVar11 + 1) < CONCAT44(*(undefined4 *)0x8000004, _segment.ehdr))
            goto code_r0x08000344;
            func_0x080405e1();
            uVar22 = SEXT48(iVar11);
            pcVar21 = (char *)CONCAT44(*(undefined4 *)0x8000004, _segment.ehdr);
            uVar29 = uVar22;
        }
        pcVar27 = reloc..LC8;
    } while( true );
    iVar11 = 0;
code_r0x080003be:
    if (iStack64 == *(int64_t *)(in_FS_OFFSET + 0x28)) {
        return iVar11;
    }
    func_0x080405e1();
    iVar12 = func_0x080405e1(CONCAT44(*(undefined4 *)0x8000004, _segment.ehdr), 0x40);
    iStack168 = 0;
    if (iVar12 != 0) {
        uVar15 = func_0x080405e1(CONCAT44(*(undefined4 *)0x8000004, _segment.ehdr), reloc..LC10);
        uVar3 = CONCAT44(*(undefined4 *)0x8000004, _segment.ehdr);
        iVar11 = func_0x080405e1(uVar3);
        uVar22 = SEXT48(iVar11);
        if (CONCAT44(*(undefined4 *)0x8000004, _segment.ehdr) <= uVar22) {
            iVar11 = _segment.ehdr + -1;
            uVar22 = SEXT48(iVar11);
        }
        puVar16 = (uint8_t *)func_0x080405e1(uVar15, uVar3, uVar22);
        puVar16[uVar22] = 0;
        if (iVar11 == 0) {
            iStack168 = 0;
            iVar12 = 0;
        } else {
            uVar22 = 0;
            bVar4 = false;
            iVar20 = 0;
            iStack168 = 0;
            uVar6 = 0;
            bVar5 = false;
            bVar7 = false;
            puVar23 = puVar16;
            while( true ) {
                uVar26 = *puVar23;
                iVar12 = (int64_t)iVar20;
                if (uVar26 == 0) break;
                puVar1 = puVar23 + 1;
                if (uVar26 == 0x27) {
                    iVar20 = iVar20 + 1;
                    bVar7 = (bool)(bVar7 ^ 1);
                    bVar4 = false;
                    *(undefined *)(CONCAT44(*(undefined4 *)0x8000004, _segment.ehdr) + iVar12) = 0x27;
                    iVar12 = (int64_t)iVar20;
                    puVar23 = puVar1;
                } else {
                    if ((char)uVar26 < '(') {
                        if (uVar26 == 0x22) {
                            if (!bVar4) {
                                bVar5 = (bool)(bVar5 ^ 1);
                            }
                            iVar20 = iVar20 + 1;
                            bVar4 = false;
                            *(undefined *)(CONCAT44(*(undefined4 *)0x8000004, _segment.ehdr) + iVar12) = 0x22;
                            iVar12 = (int64_t)iVar20;
                            puVar23 = puVar1;
                        } else {
                            if (((uVar26 == 0x23) && (!bVar7)) && (!bVar5)) {
                                uVar6 = 1;
                            }
code_r0x0800072d:
                            iVar20 = iVar20 + 1;
                            bVar4 = false;
                            *(uint8_t *)(CONCAT44(*(undefined4 *)0x8000004, _segment.ehdr) + iVar12) = uVar26;
                            iVar12 = (int64_t)iVar20;
                            puVar23 = puVar1;
                        }
                    } else {
                        if (uVar26 == 0x40) {
                            if (!(bool)(bVar7 | uVar6 | bVar5)) {
                                piVar17 = (int64_t *)func_0x080405e1();
                                uVar26 = puVar23[1];
                                uVar2 = *(uint16_t *)(*piVar17 + (uint64_t)uVar26 * 2);
                                if ((uVar2 & 0x400) != 0) {
                                    puVar23 = puVar1;
                                    if ((uVar2 & 8) == 0) goto code_r0x080008d9;
                                    do {
                                        do {
                                            uVar26 = puVar23[1];
                                            puVar23 = puVar23 + 1;
                                        } while ((*(uint8_t *)(*piVar17 + (uint64_t)uVar26 * 2) & 8) != 0);
code_r0x080008d9:
                                    } while (uVar26 == 0x5f);
                                    *puVar23 = 0;
                                    iVar18 = func_0x080405e1(puVar1);
                                    if ((iVar18 == 0) || (*(int32_t *)(iVar18 + 0x10) != 3)) {
                                        func_0x080405e1(0xffffffff, "", puVar1);
                                    } else {
                                        pcVar21 = *(char **)(iVar18 + 0x18);
                                        iStack168 = iStack168 + 1;
                                        while (iVar18 = func_0x080405e1(),
                                              uVar29 = iVar18 + ((int64_t)iVar11 - uVar22) + iVar12,
                                              CONCAT44(*(undefined4 *)0x8000004, _segment.ehdr) <= uVar29 &&
                                              uVar29 != CONCAT44(*(undefined4 *)0x8000004, _segment.ehdr)) {
                                            func_0x080405e1();
                                        }
                                        cVar8 = *pcVar21;
                                        if (cVar8 != '\0') {
                                            iVar18 = iVar12;
                                            do {
                                                iVar20 = (int32_t)iVar18 + 1;
                                                *(char *)(CONCAT44(*(undefined4 *)0x8000004, _segment.ehdr) + iVar18) =
                                                     cVar8;
                                                iVar18 = iVar18 + 1;
                                                cVar8 = pcVar21[iVar18 - iVar12];
                                            } while (cVar8 != '\0');
                                            iVar12 = (int64_t)iVar20;
                                        }
                                    }
                                    *puVar23 = uVar26;
                                    uVar6 = 0;
                                    bVar5 = false;
                                    bVar7 = false;
                                    goto joined_r0x0800074b;
                                }
                            }
                            iVar20 = iVar20 + 1;
                            bVar4 = false;
                            *(undefined *)(CONCAT44(*(undefined4 *)0x8000004, _segment.ehdr) + iVar12) = 0x40;
                            iVar12 = (int64_t)iVar20;
                            puVar23 = puVar1;
                        } else {
                            if (uVar26 != 0x5c) goto code_r0x0800072d;
                            if (bVar5) {
                                bVar4 = (bool)(bVar4 ^ 1);
                            }
                            iVar20 = iVar20 + 1;
                            *(undefined *)(CONCAT44(*(undefined4 *)0x8000004, _segment.ehdr) + iVar12) = 0x5c;
                            iVar12 = (int64_t)iVar20;
                            puVar23 = puVar1;
                        }
                    }
                }
joined_r0x0800074b:
                if (iVar11 - 1 == uVar22) break;
                uVar22 = uVar22 + 1;
            }
        }
        *(undefined *)(CONCAT44(*(undefined4 *)0x8000004, _segment.ehdr) + iVar12) = 0;
        func_0x080405e1(puVar16);
    }
    return iStack168;
}


void sym.extend_input_line(void)
{
    if (_segment.ehdr == (undefined *)0x0) {
        _segment.ehdr = (undefined *)func_0x080405e1(0x400, reloc..LC6);
        *_segment.ehdr = 0;
        return;
    }
    _segment.ehdr = (undefined *)func_0x080405e1(_segment.ehdr, (int64_t)_segment.ehdr + 0x400, reloc..LC7);
    return;
}


// WARNING: Control flow encountered bad instruction data
// WARNING: Possible PIC construction at 0x08000a7e: Changing call to branch
// WARNING: Possible PIC construction at 0x08000aef: Changing call to branch
// WARNING: Removing unreachable block (ram,0x08000a83)
// WARNING: Removing unreachable block (ram,0x08000af4)

void sym.extend_token_table(void)
{
    char cVar1;
    char *pcVar2;
    char *in_RCX;
    char unaff_BH;
    
    pcVar2 = (char *)((uint64_t)_segment.ehdr & 0xffffffff);
    if (_segment.ehdr != 0) {
        pcVar2 = (char *)func_0x080405e1(_segment.ehdr, (int64_t)(_segment.ehdr + 400) * 0x28, "extend token table");
        _segment.ehdr = pcVar2;
    }
    cVar1 = (char)pcVar2;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *in_RCX = *in_RCX + unaff_BH;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    // WARNING: Bad instruction - Truncating control flow here
    halt_baddata();
}


// WARNING: Could not reconcile some variable overlaps

void sym.define(int64_t arg7)
{
    int32_t iVar1;
    int32_t iVar2;
    uint64_t uVar3;
    uint64_t uVar4;
    uint8_t *puVar5;
    int64_t iVar6;
    uint32_t uVar7;
    uint64_t unaff_RBX;
    code *unaff_RBP;
    uint32_t uVar8;
    undefined8 *puVar9;
    uint8_t *puVar10;
    undefined8 *puVar11;
    uint8_t *puVar12;
    uint64_t unaff_R14;
    code *pcVar13;
    int64_t in_FS_OFFSET;
    bool bVar14;
    bool bVar15;
    bool bVar16;
    uint8_t uVar17;
    undefined4 uStack800;
    int16_t iStack796;
    int64_t iStack744;
    uint64_t uStack728;
    undefined4 *puStack720;
    undefined4 uStack712;
    undefined4 uStack708;
    undefined4 uStack704;
    undefined4 uStack700;
    undefined8 uStack696;
    undefined auStack680 [604];
    undefined8 uStack76;
    int64_t iStack64;
    
    uVar17 = 0;
    iStack64 = *(int64_t *)(in_FS_OFFSET + 0x28);
    puStack720 = (undefined4 *)0x8000b4d;
    iVar1 = func_0x080405e1(arg7, _segment.ehdr + 1, reloc..LC14);
    if (iVar1 == 0) {
        uVar3 = SEXT48((int32_t)_segment.ehdr);
        iVar6 = 6;
        uVar4 = SEXT48(*(int32_t *)(_segment.ehdr + uVar3 * 0x28 + 0x20));
        bVar16 = CARRY8(uVar4, _segment.ehdr);
        puVar5 = (uint8_t *)(uVar4 + _segment.ehdr);
        bVar15 = puVar5 == (uint8_t *)0x0;
        puVar10 = puVar5;
        puVar12 = (uint8_t *)"GPVAL_";
        do {
            if (iVar6 == 0) break;
            iVar6 = iVar6 + -1;
            bVar16 = *puVar10 < *puVar12;
            bVar15 = *puVar10 == *puVar12;
            puVar10 = puVar10 + (uint64_t)uVar17 * -2 + 1;
            puVar12 = puVar12 + (uint64_t)uVar17 * -2 + 1;
        } while (bVar15);
        bVar14 = false;
        bVar16 = (!bVar16 && !bVar15) == bVar16;
        if (!bVar16) {
            iVar6 = 6;
            puVar10 = puVar5;
            puVar12 = (uint8_t *)"GPFUN_";
            do {
                if (iVar6 == 0) break;
                iVar6 = iVar6 + -1;
                bVar14 = *puVar10 < *puVar12;
                bVar16 = *puVar10 == *puVar12;
                puVar10 = puVar10 + (uint64_t)uVar17 * -2 + 1;
                puVar12 = puVar12 + (uint64_t)uVar17 * -2 + 1;
            } while (bVar16);
            bVar15 = false;
            bVar16 = (!bVar14 && !bVar16) == bVar14;
            if (!bVar16) {
                iVar6 = 6;
                puVar10 = (uint8_t *)"MOUSE_";
                do {
                    if (iVar6 == 0) break;
                    iVar6 = iVar6 + -1;
                    bVar15 = *puVar5 < *puVar10;
                    bVar16 = *puVar5 == *puVar10;
                    puVar5 = puVar5 + (uint64_t)uVar17 * -2 + 1;
                    puVar10 = puVar10 + (uint64_t)uVar17 * -2 + 1;
                } while (bVar16);
                if ((!bVar15 && !bVar16) != bVar15) {
                    _segment.ehdr = _segment.ehdr & 0xffffffff00000000 | (uint64_t)(_segment.ehdr + 2);
                    puStack720 = (undefined4 *)0x8000d92;
                    unaff_RBX = func_0x080405e1(uVar3 & 0xffffffff);
                    puStack720 = (undefined4 *)0x8000d9d;
                    func_0x080405e1(&uStack712);
                    puStack720 = (undefined4 *)0x8000da6;
                    func_0x080405e1();
                    *(undefined8 *)(unaff_RBX + 0x20) = uStack696;
                    *(undefined4 *)(unaff_RBX + 0x10) = uStack712;
                    *(undefined4 *)(unaff_RBX + 0x14) = uStack708;
                    *(undefined4 *)(unaff_RBX + 0x18) = uStack704;
                    *(undefined4 *)(unaff_RBX + 0x1c) = uStack700;
                    goto code_r0x08000db8;
                }
            }
        }
        puStack720 = (undefined4 *)0x8000dee;
        func_0x080405e1(uVar3 & 0xffffffff, "Cannot set internal variables GPVAL_ GPFUN_ MOUSE_");
code_r0x08000dee:
        puStack720 = (undefined4 *)0x8000df3;
        _segment.ehdr = func_0x080405e1();
code_r0x08000df3:
        puStack720 = (undefined4 *)0x8000e04;
        func_0x080405e1(_segment.ehdr + 2, "function contains too many parameters");
    } else {
        unaff_RBP = reloc.c_dummy_var;
        iVar6 = 0x4c;
        unaff_RBX = 0;
        unaff_R14 = _segment.ehdr & 0xffffffff;
        pcVar13 = reloc.c_dummy_var;
        puVar9 = (undefined8 *)reloc.c_dummy_var;
        puVar11 = (undefined8 *)auStack680;
        while (iVar6 != 0) {
            iVar6 = iVar6 + -1;
            *puVar11 = *puVar9;
            puVar9 = puVar9 + (uint64_t)uVar17 * 0x1ffffffffffffffe + 1;
            puVar11 = puVar11 + (uint64_t)uVar17 * 0x1ffffffffffffffe + 1;
        }
        *(undefined4 *)puVar11 = *(undefined4 *)puVar9;
        uVar3 = unaff_R14;
        do {
            uVar8 = (int32_t)uVar3 + 2;
            uVar7 = (int32_t)unaff_RBX + 1;
            unaff_RBX = (uint64_t)uVar7;
            _segment.ehdr = _segment.ehdr & 0xffffffff00000000 | (uint64_t)uVar8;
            puStack720 = (undefined4 *)0x8000ba9;
            func_0x080405e1(pcVar13, uVar8, 0x32);
            puStack720 = (undefined4 *)0x8000bba;
            iVar1 = func_0x080405e1();
            uVar3 = _segment.ehdr & 0xffffffff;
            if (iVar1 == 0) break;
            pcVar13 = pcVar13 + 0x33;
        } while (uVar7 != 0xc);
        puStack720 = (undefined4 *)0x8000bdc;
        iVar1 = func_0x080405e1(_segment.ehdr + 1, reloc..LC15);
        if (iVar1 != 0) goto code_r0x08000df3;
        uVar8 = _segment.ehdr + 3;
        _segment.ehdr = _segment.ehdr & 0xffffffff00000000 | (uint64_t)uVar8;
        if ((int32_t)uVar8 < (int32_t)_segment.ehdr) {
            puStack720 = (undefined4 *)0x8000c0b;
            iVar1 = func_0x080405e1(uVar8, reloc..LC18);
            if (iVar1 == 0) {
                puStack720 = (undefined4 *)0x8000c1b;
                uVar3 = func_0x080405e1();
                *(uint32_t *)(uVar3 + 0x20) = uVar7;
                puStack720 = (undefined4 *)0x8000c2d;
                _segment.ehdr = uVar3;
                unaff_RBX = func_0x080405e1();
                if (unaff_RBX == 0) goto code_r0x08000e18;
                if (*(int64_t *)(uVar3 + 0x10) != 0) {
                    puStack720 = (undefined4 *)0x8000c48;
                    func_0x080405e1();
                }
                *(uint64_t *)(uVar3 + 0x10) = unaff_RBX;
                _reloc.c_dummy_var = auStack680._0_8_;
                *(undefined8 *)0x804094d = uStack76;
                iVar6 = 0x4b;
                puVar9 = (undefined8 *)(auStack680 + 7);
                puVar11 = (undefined8 *)0x80406f8;
                while (iVar6 != 0) {
                    iVar6 = iVar6 + -1;
                    *puVar11 = *puVar9;
                    puVar9 = puVar9 + (uint64_t)uVar17 * 0x1ffffffffffffffe + 1;
                    puVar11 = puVar11 + (uint64_t)uVar17 * 0x1ffffffffffffffe + 1;
                }
                puStack720 = (undefined4 *)0x8000ca0;
                func_0x080405e1(uVar3 + 0x18, unaff_R14, _segment.ehdr + -1);
                _segment.ehdr = 0;
                puStack720 = (undefined4 *)0x8000cb5;
                iVar6 = func_0x080405e1(*(undefined8 *)(uVar3 + 8));
                puStack720 = (undefined4 *)0x8000cc5;
                unaff_RBP = (code *)func_0x080405e1(iVar6 + 8, "varname");
                *(undefined2 *)((int64_t)unaff_RBP + 4) = 0x5f4e;
                *(undefined4 *)unaff_RBP = 0x55465047;
                *(undefined *)((int64_t)unaff_RBP + 6) = 0;
                puStack720 = (undefined4 *)0x8000ce9;
                func_0x080405e1((int64_t)unaff_RBP + 6, *(undefined8 *)(uVar3 + 8));
                puStack720 = (undefined4 *)0x8000cf6;
                func_0x080405e1(unaff_RBP, *(undefined8 *)(uVar3 + 0x18));
                puStack720 = (undefined4 *)0x8000cfe;
                func_0x080405e1();
code_r0x08000db8:
                if (iStack64 == *(int64_t *)(in_FS_OFFSET + 0x28)) {
                    return;
                }
                goto code_r0x08000dee;
            }
        }
    }
    puStack720 = (undefined4 *)0x8000e18;
    func_0x080405e1(_segment.ehdr & 0xffffffff, reloc..LC17);
code_r0x08000e18:
    puStack720 = (undefined4 *)0x8000e29;
    func_0x080405e1(unaff_R14 & 0xffffffff, "not enough memory for function");
    iStack744 = *(int64_t *)(in_FS_OFFSET + 0x28);
    uVar7 = _segment.ehdr + 1;
    _segment.ehdr = _segment.ehdr & 0xffffffff00000000 | (uint64_t)uVar7;
    uStack728 = unaff_RBX;
    puStack720 = (undefined4 *)unaff_RBP;
    if ((int32_t)uVar7 < (int32_t)_segment.ehdr) {
        do {
            iVar1 = func_0x080405e1(uVar7, reloc..LC18);
            if (iVar1 != 0) break;
            func_0x080405e1(&uStack800, _segment.ehdr & 0xffffffff, 0x32);
            iVar1 = func_0x080405e1();
            if (iVar1 == 0) {
                if ((char)uStack800 == '$') {
                    _segment.ehdr = _segment.ehdr & 0xffffffff00000000 | (uint64_t)(_segment.ehdr + 1);
                    func_0x080405e1((int64_t)&uStack800 + 1, _segment.ehdr + 1, 0x31);
                    goto code_r0x08000e7f;
                }
                iVar2 = func_0x080405e1();
                if (iVar2 != 0) {
                    goto code_r0x08000e7f;
                }
code_r0x08000feb:
                uVar7 = _segment.ehdr;
                func_0x080405e1(_segment.ehdr & 0xffffffff, "Not a variable name");
                goto code_r0x08000ffd;
            }
            _segment.ehdr = _segment.ehdr + 1;
            _segment.ehdr = _segment.ehdr & 0xffffffff00000000 | (uint64_t)_segment.ehdr;
code_r0x08000e7f:
            iVar2 = func_0x080405e1(_segment.ehdr + 1, "[");
            if (iVar2 != 0) {
code_r0x08000fd7:
                func_0x080405e1(_segment.ehdr & 0xffffffff, "Cannot undefine function or array element");
                goto code_r0x08000feb;
            }
            iVar2 = func_0x080405e1(_segment.ehdr + 1, reloc..LC14);
            if (iVar2 != 0) goto code_r0x08000fd7;
            if (uStack800 == 0x41565047) {
                if (iStack796 != 0x5f4c) {
                    bVar16 = false;
                    goto joined_r0x08000f7b;
                }
            } else {
                bVar16 = uStack800 == 0x53554f4d;
joined_r0x08000f7b:
                if ((!bVar16) || (iStack796 != 0x5f45)) {
                    func_0x080405e1(&uStack800, iVar1 != 0);
                }
            }
            uVar7 = _segment.ehdr + 1;
            _segment.ehdr = _segment.ehdr & 0xffffffff00000000 | (uint64_t)uVar7;
        } while ((int32_t)uVar7 < (int32_t)_segment.ehdr);
    }
    if (iStack744 == *(int64_t *)(in_FS_OFFSET + 0x28)) {
        return;
    }
code_r0x08000ffd:
    func_0x080405e1();
    uVar8 = _segment.ehdr + 1;
    _segment.ehdr = _segment.ehdr & 0xffffffff00000000 | (uint64_t)uVar8;
    if (((int32_t)uVar8 < (int32_t)_segment.ehdr) && (iVar1 = func_0x080405e1(uVar8, reloc..LC18), iVar1 == 0)) {
        iVar1 = func_0x080405e1(_segment.ehdr & 0xffffffff, 0x8004ee8);
        if (iVar1 == 0) goto code_r0x08001080;
        do {
            _segment.ehdr = _segment.ehdr & 0xffffffff00000000 | (uint64_t)(_segment.ehdr + 1);
            uVar8 = _segment.ehdr + 1;
            do {
                bVar16 = (int32_t)uVar8 < (int32_t)_segment.ehdr;
                _segment.ehdr = uVar8;
                if (bVar16) goto code_r0x080010b0;
                while (uVar7 == 0) {
                    func_0x080405e1(_segment.ehdr, 0x8004f03);
code_r0x080010b0:
                    iVar1 = func_0x080405e1();
                    if (iVar1 == 0) {
                        iVar1 = func_0x080405e1();
                        if (iVar1 != 0) {
                            func_0x080405e1();
                            _segment.ehdr = _segment.ehdr + 1;
                            _segment.ehdr = _segment.ehdr & 0xffffffff00000000 | (uint64_t)_segment.ehdr;
                            return;
                        }
                    }
                }
                func_0x080405e1(_segment.ehdr, 0x8004eec);
code_r0x08001080:
                iVar1 = func_0x080405e1(_segment.ehdr & 0xffffffff, 0x8004eea);
                uVar8 = _segment.ehdr;
            } while (iVar1 == 0);
        } while( true );
    }
    return;
}


// WARNING: Removing unreachable block (ram,0x08001071)

void sym.raise_command(void)
{
    bool bVar1;
    int32_t iVar2;
    
    iVar2 = _segment.ehdr + 1;
    bVar1 = iVar2 < _segment.ehdr;
    _segment.ehdr = iVar2;
    if ((bVar1) && (iVar2 = func_0x080405e1(iVar2, reloc..LC18), iVar2 == 0)) {
        iVar2 = func_0x080405e1(_segment.ehdr, reloc..LC29);
        if ((iVar2 != 0) || (iVar2 = func_0x080405e1(_segment.ehdr, reloc..LC30), iVar2 != 0)) {
            _segment.ehdr = _segment.ehdr + 1;
        }
        do {
            do {
                func_0x080405e1(_segment.ehdr, reloc..LC32);
                iVar2 = func_0x080405e1();
            } while (iVar2 != 0);
            iVar2 = func_0x080405e1();
        } while (iVar2 == 0);
        func_0x080405e1();
        _segment.ehdr = _segment.ehdr + 1;
        return;
    }
    return;
}


// WARNING: Removing unreachable block (ram,0x080010a0)
// WARNING: Removing unreachable block (ram,0x080010b0)
// WARNING: Removing unreachable block (ram,0x080010c6)
// WARNING: Removing unreachable block (ram,0x080010d7)
// WARNING: Removing unreachable block (ram,0x080010cf)

void sym.lower_command(void)
{
    bool bVar1;
    int32_t iVar2;
    
    iVar2 = _segment.ehdr + 1;
    bVar1 = iVar2 < _segment.ehdr;
    _segment.ehdr = iVar2;
    if ((bVar1) && (iVar2 = func_0x080405e1(iVar2, reloc..LC18), iVar2 == 0)) {
        iVar2 = func_0x080405e1(_segment.ehdr, reloc..LC29);
        if (iVar2 == 0) goto code_r0x08001080;
        do {
            _segment.ehdr = _segment.ehdr + 1;
            do {
                func_0x080405e1(_segment.ehdr, reloc..LC31);
code_r0x08001080:
                iVar2 = func_0x080405e1(_segment.ehdr, reloc..LC30);
            } while (iVar2 == 0);
        } while( true );
    }
    return;
}


// WARNING: [r2ghidra] Variable arg_1h extends beyond the stackframe. Try changing its type to something smaller.

void sym.array_command(void)
{
    int32_t iVar1;
    int32_t iVar2;
    int32_t iVar3;
    int64_t iVar4;
    undefined4 *puVar5;
    undefined4 *puVar6;
    int32_t iVar7;
    
    _segment.ehdr = _segment.ehdr + 1;
    iVar1 = func_0x080405e1();
    if (iVar1 != 0) {
        iVar4 = func_0x080405e1(_segment.ehdr);
        func_0x080405e1();
        _segment.ehdr = _segment.ehdr + 1;
        iVar1 = func_0x080405e1(_segment.ehdr, "[");
        if (iVar1 == 0) {
            iVar2 = func_0x080405e1(_segment.ehdr, reloc..LC36);
            if (((iVar2 != 0) && (iVar2 = func_0x080405e1(_segment.ehdr + 1, "["), iVar2 != 0)) &&
               (iVar2 = _segment.ehdr + 2, iVar2 < _segment.ehdr)) {
                do {
                    iVar3 = func_0x080405e1(iVar2, reloc..LC15);
                    if ((iVar3 != 0) || (iVar3 = func_0x080405e1(iVar2, reloc..LC34), iVar3 != 0)) {
                        iVar1 = iVar1 + 1;
                    }
                    iVar3 = func_0x080405e1(iVar2, reloc..LC34);
                } while ((iVar3 == 0) && (iVar2 = iVar2 + 1, iVar2 < _segment.ehdr));
code_r0x08001241:
                if (0 < iVar1) {
                    puVar5 = (undefined4 *)func_0x080405e1((int64_t)(iVar1 + 1) * 0x18, "array_command");
                    *(undefined4 *)(iVar4 + 0x10) = 5;
                    *(undefined4 **)(iVar4 + 0x18) = puVar5;
                    *(int64_t *)(puVar5 + 2) = (int64_t)iVar1;
                    puVar6 = puVar5;
                    do {
                        *puVar6 = 7;
                        puVar6 = puVar6 + 6;
                    } while (puVar6 != puVar5 + ((int64_t)iVar1 * 3 + 3) * 2);
                    iVar2 = func_0x080405e1(_segment.ehdr, reloc..LC36);
                    if (iVar2 == 0) {
                        return;
                    }
                    _segment.ehdr = _segment.ehdr + 1;
                    iVar2 = func_0x080405e1(_segment.ehdr, "[");
                    if (iVar2 != 0) {
                        _segment.ehdr = _segment.ehdr + 1;
                        iVar2 = 0;
                        do {
                            iVar3 = func_0x080405e1(_segment.ehdr, reloc..LC34);
                            if (iVar3 != 0) {
                                _segment.ehdr = _segment.ehdr + 1;
                                if (*(int64_t *)(puVar5 + 2) != 0) {
                                    return;
                                }
                                goto code_r0x08001397;
                            }
                            iVar7 = iVar2 + 1;
                            iVar3 = func_0x080405e1(_segment.ehdr, reloc..LC15);
                            if (iVar3 == 0) {
                                func_0x080405e1();
                                iVar3 = func_0x080405e1(_segment.ehdr, reloc..LC34);
                                if (iVar3 != 0) break;
                                iVar3 = func_0x080405e1(_segment.ehdr, reloc..LC15);
                                if (iVar3 == 0) {
                                    func_0x080405e1(_segment.ehdr, "expecting Array[size] = [x,y,...]");
                                    goto code_r0x080013f1;
                                }
                            }
                            iVar3 = iVar2 + 2;
                            _segment.ehdr = _segment.ehdr + 1;
                            iVar2 = iVar7;
                        } while (iVar3 <= iVar1);
                        _segment.ehdr = _segment.ehdr + 1;
                        iVar2 = iVar7;
                        if (*(int64_t *)(puVar5 + 2) != 0) {
                            return;
                        }
code_r0x08001397:
                        *(int64_t *)(puVar5 + 2) = (int64_t)iVar2;
                        return;
                    }
                    goto code_r0x08001414;
                }
            }
        } else {
            _segment.ehdr = _segment.ehdr + 1;
            iVar1 = func_0x080405e1();
            iVar2 = _segment.ehdr;
            _segment.ehdr = _segment.ehdr + 1;
            iVar2 = func_0x080405e1(iVar2, reloc..LC34);
            if (iVar2 != 0) goto code_r0x08001241;
        }
code_r0x080013f1:
        func_0x080405e1(_segment.ehdr + -1, "expecting array[size>0]");
    }
    func_0x080405e1(_segment.ehdr, "illegal variable name");
code_r0x08001414:
    func_0x080405e1(_segment.ehdr, "expecting Array[size] = [x,y,...]");
    _segment.ehdr = _segment.ehdr + 1;
    if (_obj.iteration_depth != 0) {
        obj.requested_break = (code)0x1;
    }
    return;
}


void sym.continue_command(void)
{
    _segment.ehdr = _segment.ehdr + 1;
    if ("\x01\x01"._4_4_ != 0) {
        "\x01\x01"[0] = '\x01';
    }
    return;
}


char sym.iteration_early_exit(void)
{
    char cVar1;
    
    cVar1 = "\x01\x01"[0];
    if ("\x01\x01"[0] == '\0') {
        cVar1 = "\x01\x01"[1];
    }
    return cVar1;
}


void sym.call_command(void)
{
    code *pcVar1;
    int64_t iVar2;
    int32_t iVar3;
    undefined8 uVar4;
    undefined4 uVar5;
    int64_t in_FS_OFFSET;
    float fVar6;
    float fVar7;
    int64_t iStack48;
    int64_t iStack40;
    undefined8 uStack32;
    int64_t iStack24;
    int64_t iStack16;
    
    iStack16 = *(int64_t *)(in_FS_OFFSET + 0x28);
    _segment.ehdr = _segment.ehdr + 1;
    iStack24 = 0;
    uStack32 = 0x80014dd;
    iStack24 = func_0x080405e1();
    if (iStack24 == 0) {
        uStack32 = 0x8001539;
        func_0x080405e1(_segment.ehdr, "expecting filename");
    } else {
        uStack32 = 0x80014ee;
        func_0x080405e1(&iStack24);
        iVar2 = iStack24;
        uStack32 = 0x8001501;
        uVar4 = func_0x080405e1(iStack24, reloc..LC40);
        uStack32 = 0x8001511;
        func_0x080405e1(uVar4, iVar2, 2);
        if (iStack16 == *(int64_t *)(in_FS_OFFSET + 0x28)) {
            return;
        }
    }
    uStack32 = 0x800153e;
    func_0x080405e1();
    iStack40 = *(int64_t *)(in_FS_OFFSET + 0x28);
    _segment.ehdr = _segment.ehdr + 1;
    iStack48 = 0;
    iStack48 = func_0x080405e1();
    if (iStack48 == 0) {
        func_0x080405e1(_segment.ehdr, "expecting directory name");
    } else {
        func_0x080405e1(&iStack48);
        iVar3 = func_0x080405e1(iStack48);
        if (iVar3 != 0) goto code_r0x080015c9;
        func_0x080405e1(5);
        func_0x080405e1(iStack48);
        if (iStack40 == *(int64_t *)(in_FS_OFFSET + 0x28)) {
            return;
        }
    }
    func_0x080405e1();
code_r0x080015c9:
    uVar5 = 0;
    uVar4 = 0x80015dd;
    func_0x080405e1(_segment.ehdr, "Can\'t change to this directory");
    func_0x080405e1();
    if (reloc.multiplot != (code)0x0) {
        pcVar1 = *(code **)(_reloc.term + 0xc0);
        if (pcVar1 != (code *)0x0) {
            fVar6 = (float)(uint64_t)*(uint32_t *)(_reloc.term + 0x10) * _reloc.xoffset;
            fVar7 = (float)(uint64_t)*(uint32_t *)(_reloc.term + 0x14) * _reloc.yoffset;
            (*pcVar1)(SUB168(CONCAT124(SUB1612((undefined  [16])0x0 >> 0x20, 0), fVar6), 0), 
                      SUB168(CONCAT124(SUB1612((undefined  [16])0x0 >> 0x20, 0), fVar7), 0), 0, 
                      CONCAT44(uVar5, (int32_t)fVar6), 
                      _reloc.term & 0xffffffff00000000 | (uint64_t)(uint32_t)(int32_t)fVar7, 
                      (int64_t)(_reloc.xsize * (float)(uint64_t)*(uint32_t *)(_reloc.term + 0x10)), 
                      (int64_t)(_reloc.ysize * (float)(uint64_t)*(uint32_t *)(_reloc.term + 0x14)), pcVar1, uVar4);
        }
    }
    func_0x080405e1();
    _segment.ehdr = _segment.ehdr + 1;
    reloc.screen_ok = (code)0x0;
    return;
}


// WARNING: Control flow encountered bad instruction data
// WARNING: Possible PIC construction at 0x08001698: Changing call to branch
// WARNING: Possible PIC construction at 0x080016ca: Changing call to branch
// WARNING: Possible PIC construction at 0x08001722: Changing call to branch
// WARNING: Possible PIC construction at 0x0800178a: Changing call to branch
// WARNING: Possible PIC construction at 0x080017bb: Changing call to branch
// WARNING: Possible PIC construction at 0x080017f9: Changing call to branch
// WARNING: Possible PIC construction at 0x080018c8: Changing call to branch
// WARNING: Possible PIC construction at 0x080018ee: Changing call to branch
// WARNING: Possible PIC construction at 0x08001911: Changing call to branch
// WARNING: Possible PIC construction at 0x08001a3a: Changing call to branch
// WARNING: Possible PIC construction at 0x08001b85: Changing call to branch
// WARNING: Possible PIC construction at 0x08001bae: Changing call to branch
// WARNING: Possible PIC construction at 0x08001a2a: Changing call to branch
// WARNING: Possible PIC construction at 0x08001ac0: Changing call to branch
// WARNING: Possible PIC construction at 0x08001c2a: Changing call to branch
// WARNING: Possible PIC construction at 0x08001c6f: Changing call to branch
// WARNING: Possible PIC construction at 0x08001ca5: Changing call to branch
// WARNING: Possible PIC construction at 0x08001cea: Changing call to branch
// WARNING: Possible PIC construction at 0x08001c08: Changing call to branch
// WARNING: Possible PIC construction at 0x080019f8: Changing call to branch
// WARNING: Possible PIC construction at 0x080016ff: Changing call to branch
// WARNING: Possible PIC construction at 0x080016ea: Changing call to branch
// WARNING: Removing unreachable block (ram,0x08001704)
// WARNING: Removing unreachable block (ram,0x08001cf4)
// WARNING: Removing unreachable block (ram,0x08001caa)
// WARNING: Removing unreachable block (ram,0x08001cd8)
// WARNING: Removing unreachable block (ram,0x08001cba)
// WARNING: Removing unreachable block (ram,0x08001c74)
// WARNING: Removing unreachable block (ram,0x08001cdd)
// WARNING: Removing unreachable block (ram,0x08001c7d)
// WARNING: Removing unreachable block (ram,0x08001c8f)
// WARNING: Removing unreachable block (ram,0x08001cc0)
// WARNING: Removing unreachable block (ram,0x08001c9d)
// WARNING: Removing unreachable block (ram,0x08001ac5)
// WARNING: Removing unreachable block (ram,0x08001af4)
// WARNING: Removing unreachable block (ram,0x08001af7)
// WARNING: Removing unreachable block (ram,0x08001bb3)
// WARNING: Removing unreachable block (ram,0x08001b8a)
// WARNING: Removing unreachable block (ram,0x08001a3f)
// WARNING: Removing unreachable block (ram,0x08001a83)
// WARNING: Removing unreachable block (ram,0x08001916)
// WARNING: Removing unreachable block (ram,0x08001b68)
// WARNING: Removing unreachable block (ram,0x08001a2f)
// WARNING: Removing unreachable block (ram,0x08001b71)
// WARNING: Removing unreachable block (ram,0x0800191e)
// WARNING: Removing unreachable block (ram,0x08001a36)
// WARNING: Removing unreachable block (ram,0x0800192e)
// WARNING: Removing unreachable block (ram,0x08001969)
// WARNING: Removing unreachable block (ram,0x080018f3)
// WARNING: Removing unreachable block (ram,0x08001b90)
// WARNING: Removing unreachable block (ram,0x080018fb)
// WARNING: Removing unreachable block (ram,0x080018cd)
// WARNING: Removing unreachable block (ram,0x08001a00)
// WARNING: Removing unreachable block (ram,0x08001907)
// WARNING: Removing unreachable block (ram,0x08001a17)
// WARNING: Removing unreachable block (ram,0x08001bf0)
// WARNING: Removing unreachable block (ram,0x08001b97)
// WARNING: Removing unreachable block (ram,0x08001a20)
// WARNING: Removing unreachable block (ram,0x080018d5)
// WARNING: Removing unreachable block (ram,0x080017fe)
// WARNING: Removing unreachable block (ram,0x0800180d)
// WARNING: Removing unreachable block (ram,0x0800181b)
// WARNING: Removing unreachable block (ram,0x0800182f)
// WARNING: Removing unreachable block (ram,0x08001c0d)
// WARNING: Removing unreachable block (ram,0x0800183d)
// WARNING: Removing unreachable block (ram,0x080017c0)
// WARNING: Removing unreachable block (ram,0x08001998)
// WARNING: Removing unreachable block (ram,0x08001bc0)
// WARNING: Removing unreachable block (ram,0x08001c2f)
// WARNING: Removing unreachable block (ram,0x08001bd6)
// WARNING: Removing unreachable block (ram,0x080019c0)
// WARNING: Removing unreachable block (ram,0x08001c1e)
// WARNING: Removing unreachable block (ram,0x080019ce)
// WARNING: Removing unreachable block (ram,0x080019de)
// WARNING: Removing unreachable block (ram,0x08001859)
// WARNING: Removing unreachable block (ram,0x08001aa0)
// WARNING: Removing unreachable block (ram,0x08001878)
// WARNING: Removing unreachable block (ram,0x08001a90)
// WARNING: Removing unreachable block (ram,0x08001891)
// WARNING: Removing unreachable block (ram,0x08001ab4)
// WARNING: Removing unreachable block (ram,0x080018ad)
// WARNING: Removing unreachable block (ram,0x08001b08)
// WARNING: Removing unreachable block (ram,0x08001b48)
// WARNING: Removing unreachable block (ram,0x08001b4b)
// WARNING: Removing unreachable block (ram,0x080018bb)
// WARNING: Removing unreachable block (ram,0x080019ec)
// WARNING: Removing unreachable block (ram,0x080017c8)
// WARNING: Removing unreachable block (ram,0x08001bf9)
// WARNING: Removing unreachable block (ram,0x080017e2)
// WARNING: Removing unreachable block (ram,0x0800178f)
// WARNING: Removing unreachable block (ram,0x08001727)
// WARNING: Removing unreachable block (ram,0x08001980)
// WARNING: Removing unreachable block (ram,0x08001797)
// WARNING: Removing unreachable block (ram,0x08001b50)
// WARNING: Removing unreachable block (ram,0x080017b1)
// WARNING: Removing unreachable block (ram,0x0800177d)
// WARNING: Removing unreachable block (ram,0x080016cf)
// WARNING: Removing unreachable block (ram,0x0800170e)
// WARNING: Removing unreachable block (ram,0x080016d3)
// WARNING: Removing unreachable block (ram,0x0800169d)
// WARNING: Removing unreachable block (ram,0x080016e8)
// WARNING: Removing unreachable block (ram,0x080016ef)
// WARNING: Removing unreachable block (ram,0x080016a1)
// WARNING: Removing unreachable block (ram,0x080016f8)
// WARNING: Removing unreachable block (ram,0x080016ba)

void sym.exit_command(void)
{
    char cVar1;
    char *pcVar2;
    char *in_RCX;
    char unaff_BH;
    
    pcVar2 = (char *)(uint64_t)_segment.ehdr;
    cVar1 = (char)_segment.ehdr;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *in_RCX = *in_RCX + unaff_BH;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    // WARNING: Bad instruction - Truncating control flow here
    halt_baddata();
}


void sym.begin_clause(void)
{
    _obj.clause_depth = _obj.clause_depth + 1;
    _segment.ehdr = _segment.ehdr + 1;
    return;
}


void sym.end_clause(undefined8 placeholder_0, undefined8 placeholder_1, int64_t arg3)
{
    if (_obj.clause_depth != 0) {
        _segment.ehdr = _segment.ehdr + 1;
        _obj.clause_depth = _obj.clause_depth + -1;
        return;
    }
    func_0x080405e1(_segment.ehdr, "unexpected }");
    _obj.iteration_depth = 0;
    _obj.clause_depth = 0;
    return;
}


// WARNING: Control flow encountered bad instruction data

void sym.timed_pause(void)
{
    char in_AL;
    unkbyte7 in_RAX;
    char *in_RCX;
    char unaff_BH;
    
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *in_RCX = *in_RCX + unaff_BH;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    // WARNING: Bad instruction - Truncating control flow here
    halt_baddata();
}


// WARNING: Removing unreachable block (ram,0x08001dc8)
// WARNING: Removing unreachable block (ram,0x08001ea0)
// WARNING: Removing unreachable block (ram,0x08001f42)
// WARNING: Removing unreachable block (ram,0x08001fa6)
// WARNING: Removing unreachable block (ram,0x08001fc0)
// WARNING: Removing unreachable block (ram,0x08001eb1)
// WARNING: Removing unreachable block (ram,0x08001f38)
// WARNING: Removing unreachable block (ram,0x08001ee8)
// WARNING: Removing unreachable block (ram,0x08001eee)
// WARNING: Removing unreachable block (ram,0x08001e73)
// WARNING: Removing unreachable block (ram,0x08001e80)

void sym.pause_command(int64_t arg7)
{
    int32_t iVar1;
    double dVar2;
    
    _segment.ehdr = _segment.ehdr + 1;
    dVar2 = (double)func_0x080405e1();
    func_0x080405e1(_obj.buf.12866);
    _obj.buf.12866 = func_0x080405e1("paused");
    if (dVar2 < 0.00000000) {
        do {
            iVar1 = func_0x080405e1(_reloc.stdin);
            if (iVar1 == -1) break;
        } while (iVar1 != 10);
        if (0.00000000 < dVar2) {
            func_0x080405e1((int64_t)(_reloc..LC63 * dVar2));
        }
    } else {
        if (0.00000000 < dVar2) {
            func_0x080405e1(dVar2 * _reloc..LC63, 0, (int64_t)(dVar2 * _reloc..LC63));
        }
    }
    reloc.screen_ok = (code)0x0;
    return;
}


// WARNING: Control flow encountered bad instruction data
// WARNING: Possible PIC construction at 0x0800200f: Changing call to branch
// WARNING: Possible PIC construction at 0x08002096: Changing call to branch
// WARNING: Possible PIC construction at 0x08002146: Changing call to branch
// WARNING: Possible PIC construction at 0x080020b8: Changing call to branch
// WARNING: Possible PIC construction at 0x080020fc: Changing call to branch
// WARNING: Removing unreachable block (ram,0x080020bd)
// WARNING: Removing unreachable block (ram,0x0800214b)
// WARNING: Removing unreachable block (ram,0x08002178)
// WARNING: Removing unreachable block (ram,0x08002150)
// WARNING: Removing unreachable block (ram,0x0800209b)
// WARNING: Removing unreachable block (ram,0x080020d9)
// WARNING: Removing unreachable block (ram,0x08002014)
// WARNING: Removing unreachable block (ram,0x08002101)

void sym.print_set_output(int64_t arg1, int64_t arg2, int64_t arg3)
{
    char cVar1;
    code *in_RAX;
    char *in_RCX;
    char *pcVar2;
    uint64_t unaff_RBX;
    uint64_t uVar3;
    uint64_t uVar4;
    
    uVar3 = arg2 & 0xffffffff;
    uVar4 = uVar3;
    if ((((_reloc.print_out == 0) || (_reloc.print_out == _reloc.stderr)) || (_reloc.print_out == _reloc.stdout)) ||
       ((pcVar2 = in_RCX, *_reloc.print_out_name == '|' &&
        (in_RAX = (code *)func_0x080405e1(), pcVar2 = in_RCX, -1 < (int32_t)in_RAX)))) {
        in_RAX = (code *)func_0x080405e1(_reloc.print_out_name);
        _reloc.print_out_name = (char *)0x0;
        _reloc.print_out_var = (code *)0x0;
        if (arg1 == 0) {
            _reloc.print_out_name = (char *)0x0;
            _reloc.print_out_var = (code *)0x0;
            _reloc.print_out = _reloc.stderr;
            return;
        }
        if ((*(char *)arg1 == '-') && (*(char *)(arg1 + 1) == '\0')) {
            _reloc.print_out_name = (char *)0x0;
            _reloc.print_out_var = (code *)0x0;
            _reloc.print_out = _reloc.stdout;
            return;
        }
        pcVar2 = in_RCX;
        if (*(char *)arg1 != '|') {
            if ((char)uVar3 == '\0') {
                in_RAX = reloc..LC68;
            } else {
                in_RAX = (code *)func_0x080405e1(arg1);
                pcVar2 = (char *)arg1;
                uVar4 = unaff_RBX;
                _reloc.print_out_var = in_RAX;
                if ((in_RAX != (code *)0x0) && (pcVar2 = in_RCX, uVar4 = uVar3, *(int32_t *)(in_RAX + 0x10) == 7)) {
                    *(undefined8 *)(in_RAX + 0x18) = 0;
                    *(undefined4 *)(in_RAX + 0x10) = 4;
                    _reloc.print_out_name = (char *)arg1;
                    return;
                }
            }
        }
    }
    cVar1 = (char)in_RAX;
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *pcVar2 = *pcVar2 + (char)(uVar4 >> 8);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    *in_RAX = (code)((char)*in_RAX + cVar1);
    // WARNING: Bad instruction - Truncating control flow here
    halt_baddata();
}


code * sym.print_show_output(void)
{
    code *pcVar1;
    
    if (_reloc.print_out_name != (code *)0x0) {
        return _reloc.print_out_name;
    }
    pcVar1 = reloc..LC70;
    if (_reloc.print_out != _reloc.stdout) {
        pcVar1 = reloc..LC71;
    }
    return pcVar1;
}


// WARNING: Removing unreachable block (ram,0x080022f7)
// WARNING: Removing unreachable block (ram,0x0800230b)
// WARNING: Removing unreachable block (ram,0x08002290)
// WARNING: Removing unreachable block (ram,0x08002530)
// WARNING: Removing unreachable block (ram,0x08002299)

void sym.print_command(void)
{
    int32_t iVar1;
    undefined8 uVar2;
    int64_t iVar3;
    int64_t *piVar4;
    undefined8 extraout_RDX;
    int64_t in_FS_OFFSET;
    undefined *puStack88;
    undefined8 uStack80;
    int32_t aiStack72 [2];
    undefined8 uStack64;
    int64_t iStack48;
    
    iStack48 = *(int64_t *)(in_FS_OFFSET + 0x28);
    puStack88 = (undefined *)0x0;
    uStack80 = 0x100;
    if (_reloc.print_out == 0) {
        _reloc.print_out = _reloc.stderr;
    }
    if (_reloc.print_out_var != 0) {
        puStack88 = (undefined *)func_0x080405e1(0x100, reloc..LC72);
        *puStack88 = 0;
    }
    reloc.screen_ok = (code)0x0;
    _segment.ehdr = _segment.ehdr + 1;
    iVar1 = func_0x080405e1(_segment.ehdr, reloc..LC73);
    if (((iVar1 == 0) || (iVar1 = func_0x080405e1(), iVar1 == 0)) ||
       (iVar1 = func_0x080405e1(_segment.ehdr + 2, "["), iVar1 != 0)) {
        iVar1 = func_0x080405e1();
        if ((iVar1 == 5) && (iVar1 = func_0x080405e1(_segment.ehdr + 1, "["), iVar1 == 0)) {
            _segment.ehdr = _segment.ehdr + 1;
            iVar3 = func_0x080405e1();
            func_0x080405e1(_reloc.print_out, *(undefined8 *)(iVar3 + 0x18));
        } else {
            func_0x080405e1(aiStack72);
            if (aiStack72[0] == 3) {
                if (puStack88 == (undefined *)0x0) {
                    func_0x080405e1(uStack64, _reloc.print_out, extraout_RDX, uStack64);
                } else {
                    func_0x080405e1(&puStack88, &uStack80, 0);
                }
                func_0x080405e1();
            } else {
                if (puStack88 == (undefined *)0x0) {
                    func_0x080405e1(_reloc.print_out, aiStack72, 0);
                } else {
                    uVar2 = func_0x080405e1(aiStack72, 0);
                    func_0x080405e1(&puStack88, &uStack80, 0, uVar2);
                }
            }
        }
    } else {
        uVar2 = func_0x080405e1();
        piVar4 = (int64_t *)func_0x080405e1();
        if (((_reloc.print_out_var == 0) || (iVar1 = func_0x080405e1(uVar2, _reloc.print_out_name), iVar1 != 0)) &&
           (piVar4 != (int64_t *)0x0)) {
            while (iVar3 = _reloc.print_out_var, *piVar4 != 0) {
                if (_reloc.print_out_var == 0) {
                    func_0x080405e1(_reloc.print_out, 1, reloc..LC74, *piVar4);
                } else {
                    uVar2 = func_0x080405e1();
                    func_0x080405e1(iVar3 + 0x10, uVar2);
                }
                piVar4 = piVar4 + 1;
            }
        }
    }
    if (puStack88 == (undefined *)0x0) {
        func_0x080405e1(10, _reloc.print_out);
        func_0x080405e1(_reloc.print_out);
    } else {
        func_0x080405e1(_reloc.print_out_var + 0x10);
    }
    if (iStack48 != *(int64_t *)(in_FS_OFFSET + 0x28)) {
        func_0x080405e1();
        iVar3 = _reloc.print_out;
        _reloc.print_out = _reloc.stderr;
        func_0x080405e1();
        _reloc.print_out = iVar3;
        return;
    }
    return;
}


void sym.pwd_command(void)
{
    undefined8 uVar1;
    int64_t iVar2;
    
    uVar1 = func_0x080405e1(0x1000, reloc..LC76);
    iVar2 = func_0x080405e1(uVar1, 0x1000);
    if (iVar2 == 0) {
        func_0x080405e1(reloc..LC77, 1, 10, _reloc.stderr);
    } else {
        func_0x080405e1(_reloc.stderr, 1, reloc..LC74, uVar1);
    }
    func_0x080405e1(uVar1);
    _segment.ehdr = _segment.ehdr + 1;
    return;
}


void sym.reread_command(void)
{
    int64_t iVar1;
    
    iVar1 = func_0x080405e1();
    if (iVar1 != 0) {
        func_0x080405e1(iVar1);
    }
    _segment.ehdr = _segment.ehdr + 1;
    return;
}


// WARNING: Control flow encountered bad instruction data
// WARNING: Possible PIC construction at 0x080026a8: Changing call to branch
// WARNING: Possible PIC construction at 0x080026d8: Changing call to branch
// WARNING: Possible PIC construction at 0x08002775: Changing call to branch
// WARNING: Possible PIC construction at 0x080027cb: Changing call to branch
// WARNING: Possible PIC construction at 0x080027f1: Changing call to branch
// WARNING: Possible PIC construction at 0x08002727: Changing call to branch
// WARNING: Possible PIC construction at 0x0800274c: Changing call to branch
// WARNING: Possible PIC construction at 0x080027b6: Changing call to branch
// WARNING: Possible PIC construction at 0x080027af: Changing call to branch
// WARNING: Removing unreachable block (ram,0x080027bb)
// WARNING: Removing unreachable block (ram,0x08002751)
// WARNING: Removing unreachable block (ram,0x0800272c)
// WARNING: Removing unreachable block (ram,0x080027f6)
// WARNING: Removing unreachable block (ram,0x0800277a)
// WARNING: Removing unreachable block (ram,0x080026dd)
// WARNING: Removing unreachable block (ram,0x080026e6)
// WARNING: Removing unreachable block (ram,0x08002720)
// WARNING: Removing unreachable block (ram,0x080026f3)
// WARNING: Removing unreachable block (ram,0x080026fc)
// WARNING: Removing unreachable block (ram,0x08002708)
// WARNING: Removing unreachable block (ram,0x08002756)
// WARNING: Removing unreachable block (ram,0x080027b6)
// WARNING: Removing unreachable block (ram,0x080027a8)
// WARNING: Removing unreachable block (ram,0x080027af)
// WARNING: Removing unreachable block (ram,0x0800279a)
// WARNING: Removing unreachable block (ram,0x080027a1)
// WARNING: Removing unreachable block (ram,0x080026ad)
// WARNING: Removing unreachable block (ram,0x080026b7)
// WARNING: Removing unreachable block (ram,0x080026be)
// WARNING: Removing unreachable block (ram,0x080027d0)
// WARNING: Removing unreachable block (ram,0x080027e2)
// WARNING: Removing unreachable block (ram,0x080026d0)
// WARNING: Removing unreachable block (ram,0x08002738)
// WARNING: Removing unreachable block (ram,0x080026d5)
// WARNING: Removing unreachable block (ram,0x080027b4)
// WARNING: Removing unreachable block (ram,0x08002760)
// WARNING: Removing unreachable block (ram,0x0800276d)
// WARNING: Removing unreachable block (ram,0x080027c0)
// WARNING: Removing unreachable block (ram,0x0800277e)
// WARNING: Removing unreachable block (ram,0x080027cb)
// WARNING: Removing unreachable block (ram,0x08002793)
// WARNING: Removing unreachable block (ram,0x08002775)
// WARNING: Recovered jumptable eliminated as dead code

void sym.save_command(void)
{
    char cVar1;
    char *pcVar2;
    char *in_RCX;
    char unaff_BH;
    
    pcVar2 = (char *)(uint64_t)_segment.ehdr;
    cVar1 = (char)_segment.ehdr;
    _segment.ehdr = _segment.ehdr + 1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *in_RCX = *in_RCX + unaff_BH;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    // WARNING: Bad instruction - Truncating control flow here
    halt_baddata();
}


void sym.splot_command(void)
{
    reloc.plotted_data_from_stdin = (code)0x0;
    _reloc.refresh_nplots = 0;
    _segment.ehdr = _segment.ehdr + 1;
    func_0x080405e1();
    if (*(code **)(_reloc.term + 0x138) != (code *)0x0) {
    // WARNING: Could not recover jumptable at 0x08002884. Too many branches
    // WARNING: Treating indirect jump as call
        (**(code **)(_reloc.term + 0x138))(1, 0xffffffff);
        return;
    }
    return;
}


// WARNING: Control flow encountered bad instruction data

void sym.stats_command(void)
{
    char in_AL;
    unkbyte7 in_RAX;
    char *in_RCX;
    char unaff_BH;
    
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *in_RCX = *in_RCX + unaff_BH;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    // WARNING: Bad instruction - Truncating control flow here
    halt_baddata();
}


// WARNING: Control flow encountered bad instruction data
// WARNING: Possible PIC construction at 0x080028bc: Changing call to branch
// WARNING: Possible PIC construction at 0x080028d1: Changing call to branch
// WARNING: Removing unreachable block (ram,0x080028c1)
// WARNING: Removing unreachable block (ram,0x080028c9)
// WARNING: Removing unreachable block (ram,0x080028d6)
// WARNING: Removing unreachable block (ram,0x080028dd)

void sym.system_command(void)
{
    char in_AL;
    unkbyte7 in_RAX;
    char *in_RCX;
    char unaff_BH;
    
    _segment.ehdr = _segment.ehdr + 1;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *in_RCX = *in_RCX + unaff_BH;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    // WARNING: Bad instruction - Truncating control flow here
    halt_baddata();
}


// WARNING: Control flow encountered bad instruction data
// WARNING: Possible PIC construction at 0x08002940: Changing call to branch
// WARNING: Possible PIC construction at 0x080029b3: Changing call to branch
// WARNING: Possible PIC construction at 0x08002a3d: Changing call to branch
// WARNING: Possible PIC construction at 0x08002aae: Changing call to branch
// WARNING: Possible PIC construction at 0x08002aeb: Changing call to branch
// WARNING: Possible PIC construction at 0x08002b25: Changing call to branch
// WARNING: Possible PIC construction at 0x08002b57: Changing call to branch
// WARNING: Possible PIC construction at 0x08002b67: Changing call to branch
// WARNING: Possible PIC construction at 0x08002b8c: Changing call to branch
// WARNING: Possible PIC construction at 0x08002c5f: Changing call to branch
// WARNING: Possible PIC construction at 0x08002c7f: Changing call to branch
// WARNING: Possible PIC construction at 0x08002cc8: Changing call to branch
// WARNING: Possible PIC construction at 0x08002d3d: Changing call to branch
// WARNING: Possible PIC construction at 0x08002dba: Changing call to branch
// WARNING: Possible PIC construction at 0x08002de0: Changing call to branch
// WARNING: Possible PIC construction at 0x08002c33: Changing call to branch
// WARNING: Possible PIC construction at 0x08002bfd: Changing call to branch
// WARNING: Removing unreachable block (ram,0x08002c38)
// WARNING: Removing unreachable block (ram,0x08002de5)
// WARNING: Removing unreachable block (ram,0x08002dbf)
// WARNING: Removing unreachable block (ram,0x08002dc3)
// WARNING: Removing unreachable block (ram,0x08002dcb)
// WARNING: Removing unreachable block (ram,0x08002ddd)
// WARNING: Removing unreachable block (ram,0x08002d42)
// WARNING: Removing unreachable block (ram,0x08002ccd)
// WARNING: Removing unreachable block (ram,0x08002d10)
// WARNING: Removing unreachable block (ram,0x08002df0)
// WARNING: Removing unreachable block (ram,0x08002d23)
// WARNING: Removing unreachable block (ram,0x08002d35)
// WARNING: Removing unreachable block (ram,0x08002d80)
// WARNING: Removing unreachable block (ram,0x08002d87)
// WARNING: Removing unreachable block (ram,0x08002d8c)
// WARNING: Removing unreachable block (ram,0x08002dab)
// WARNING: Removing unreachable block (ram,0x08002da0)
// WARNING: Removing unreachable block (ram,0x08002db4)
// WARNING: Removing unreachable block (ram,0x08002d3a)
// WARNING: Removing unreachable block (ram,0x08002cd1)
// WARNING: Removing unreachable block (ram,0x08002cdd)
// WARNING: Removing unreachable block (ram,0x08002d68)
// WARNING: Removing unreachable block (ram,0x08002cf0)
// WARNING: Removing unreachable block (ram,0x08002b91)
// WARNING: Removing unreachable block (ram,0x08002b6c)
// WARNING: Removing unreachable block (ram,0x08002b5c)
// WARNING: Removing unreachable block (ram,0x08002b2a)
// WARNING: Removing unreachable block (ram,0x08002ab3)
// WARNING: Removing unreachable block (ram,0x08002aca)
// WARNING: Removing unreachable block (ram,0x08002ad6)
// WARNING: Removing unreachable block (ram,0x08002c40)
// WARNING: Removing unreachable block (ram,0x08002af0)
// WARNING: Removing unreachable block (ram,0x08002c4a)
// WARNING: Removing unreachable block (ram,0x08002adf)
// WARNING: Removing unreachable block (ram,0x08002a42)
// WARNING: Removing unreachable block (ram,0x080029b8)
// WARNING: Removing unreachable block (ram,0x08002c30)
// WARNING: Removing unreachable block (ram,0x080029c9)
// WARNING: Removing unreachable block (ram,0x080029e4)
// WARNING: Removing unreachable block (ram,0x08002c50)
// WARNING: Removing unreachable block (ram,0x08002c5a)
// WARNING: Removing unreachable block (ram,0x080029ed)
// WARNING: Removing unreachable block (ram,0x080029f7)
// WARNING: Removing unreachable block (ram,0x08002a08)
// WARNING: Removing unreachable block (ram,0x08002a25)
// WARNING: Removing unreachable block (ram,0x08002a31)
// WARNING: Removing unreachable block (ram,0x08002945)
// WARNING: Removing unreachable block (ram,0x0800294e)
// WARNING: Removing unreachable block (ram,0x08002be8)
// WARNING: Removing unreachable block (ram,0x08002bf6)
// WARNING: Removing unreachable block (ram,0x08002957)
// WARNING: Removing unreachable block (ram,0x08002997)
// WARNING: Removing unreachable block (ram,0x08002980)
// WARNING: Removing unreachable block (ram,0x08002974)
// WARNING: Removing unreachable block (ram,0x080029a3)
// WARNING: Removing unreachable block (ram,0x080029ac)
// WARNING: Removing unreachable block (ram,0x08002c02)
// WARNING: Removing unreachable block (ram,0x08002c84)
// WARNING: Removing unreachable block (ram,0x08002c06)
// WARNING: Removing unreachable block (ram,0x08002c10)
// WARNING: Removing unreachable block (ram,0x08002c21)
// WARNING: Removing unreachable block (ram,0x08002c26)
// WARNING: Removing unreachable block (ram,0x08002ba8)
// WARNING: Removing unreachable block (ram,0x08002bbd)
// WARNING: Removing unreachable block (ram,0x08002c5f)
// WARNING: Removing unreachable block (ram,0x08002bd1)

void sym.test_command(void)
{
    char *in_RCX;
    char unaff_BH;
    
    _segment.ehdr = _segment.ehdr + 1;
    if (_reloc.term == 0) {
        func_0x080405e1(_segment.ehdr, "use \'set term\' to set terminal type first");
    }
    *in_RCX = *in_RCX + unaff_BH;
    // WARNING: Bad instruction - Truncating control flow here
    halt_baddata();
}


// WARNING: Control flow encountered bad instruction data
// WARNING: Possible PIC construction at 0x08002e18: Changing call to branch
// WARNING: Possible PIC construction at 0x08002eba: Changing call to branch
// WARNING: Possible PIC construction at 0x08002ef3: Changing call to branch
// WARNING: Possible PIC construction at 0x08002f30: Changing call to branch
// WARNING: Possible PIC construction at 0x08002f5d: Changing call to branch
// WARNING: Possible PIC construction at 0x08003018: Changing call to branch
// WARNING: Possible PIC construction at 0x0800303b: Changing call to branch
// WARNING: Possible PIC construction at 0x08003064: Changing call to branch
// WARNING: Possible PIC construction at 0x08003106: Changing call to branch
// WARNING: Possible PIC construction at 0x08003149: Changing call to branch
// WARNING: Possible PIC construction at 0x08003178: Changing call to branch
// WARNING: Possible PIC construction at 0x080031aa: Changing call to branch
// WARNING: Possible PIC construction at 0x08003200: Changing call to branch
// WARNING: Possible PIC construction at 0x0800333d: Changing call to branch
// WARNING: Possible PIC construction at 0x08003489: Changing call to branch
// WARNING: Possible PIC construction at 0x0800350d: Changing call to branch
// WARNING: Possible PIC construction at 0x080033f3: Changing call to branch
// WARNING: Possible PIC construction at 0x080034b4: Changing call to branch
// WARNING: Possible PIC construction at 0x08003252: Changing call to branch
// WARNING: Possible PIC construction at 0x08003289: Changing call to branch
// WARNING: Possible PIC construction at 0x080032e0: Changing call to branch
// WARNING: Possible PIC construction at 0x0800330b: Changing call to branch
// WARNING: Possible PIC construction at 0x08003333: Changing call to branch
// WARNING: Possible PIC construction at 0x08003013: Changing call to branch
// WARNING: Removing unreachable block (ram,0x08003310)
// WARNING: Removing unreachable block (ram,0x080032e5)
// WARNING: Removing unreachable block (ram,0x0800328e)
// WARNING: Removing unreachable block (ram,0x080032ee)
// WARNING: Removing unreachable block (ram,0x080032e0)
// WARNING: Removing unreachable block (ram,0x08003257)
// WARNING: Removing unreachable block (ram,0x08003512)
// WARNING: Removing unreachable block (ram,0x0800348e)
// WARNING: Removing unreachable block (ram,0x08003342)
// WARNING: Removing unreachable block (ram,0x08003354)
// WARNING: Removing unreachable block (ram,0x080034d0)
// WARNING: Removing unreachable block (ram,0x080034d9)
// WARNING: Removing unreachable block (ram,0x0800336e)
// WARNING: Removing unreachable block (ram,0x080034c0)
// WARNING: Removing unreachable block (ram,0x080034c9)
// WARNING: Removing unreachable block (ram,0x0800337c)
// WARNING: Removing unreachable block (ram,0x080034a0)
// WARNING: Removing unreachable block (ram,0x080034a8)
// WARNING: Removing unreachable block (ram,0x0800338c)
// WARNING: Removing unreachable block (ram,0x080034e0)
// WARNING: Removing unreachable block (ram,0x08003394)
// WARNING: Removing unreachable block (ram,0x08003404)
// WARNING: Removing unreachable block (ram,0x080033b0)
// WARNING: Removing unreachable block (ram,0x080033c3)
// WARNING: Removing unreachable block (ram,0x0800340b)
// WARNING: Removing unreachable block (ram,0x080033cc)
// WARNING: Removing unreachable block (ram,0x080033db)
// WARNING: Removing unreachable block (ram,0x08003419)
// WARNING: Removing unreachable block (ram,0x0800342f)
// WARNING: Removing unreachable block (ram,0x080033f8)
// WARNING: Removing unreachable block (ram,0x0800343b)
// WARNING: Removing unreachable block (ram,0x080033f0)
// WARNING: Removing unreachable block (ram,0x08003440)
// WARNING: Removing unreachable block (ram,0x08003450)
// WARNING: Removing unreachable block (ram,0x08003500)
// WARNING: Removing unreachable block (ram,0x0800345f)
// WARNING: Removing unreachable block (ram,0x08003534)
// WARNING: Removing unreachable block (ram,0x08003468)
// WARNING: Removing unreachable block (ram,0x08003205)
// WARNING: Removing unreachable block (ram,0x08003240)
// WARNING: Removing unreachable block (ram,0x08003260)
// WARNING: Removing unreachable block (ram,0x08003252)
// WARNING: Removing unreachable block (ram,0x08003209)
// WARNING: Removing unreachable block (ram,0x08003218)
// WARNING: Removing unreachable block (ram,0x0800333d)
// WARNING: Removing unreachable block (ram,0x0800322c)
// WARNING: Removing unreachable block (ram,0x0800317d)
// WARNING: Removing unreachable block (ram,0x0800314e)
// WARNING: Removing unreachable block (ram,0x08003186)
// WARNING: Removing unreachable block (ram,0x08003178)
// WARNING: Removing unreachable block (ram,0x0800310b)
// WARNING: Removing unreachable block (ram,0x08003270)
// WARNING: Removing unreachable block (ram,0x08003113)
// WARNING: Removing unreachable block (ram,0x08003074)
// WARNING: Removing unreachable block (ram,0x080030af)
// WARNING: Removing unreachable block (ram,0x08003098)
// WARNING: Removing unreachable block (ram,0x08003091)
// WARNING: Removing unreachable block (ram,0x080030bb)
// WARNING: Removing unreachable block (ram,0x080030d4)
// WARNING: Removing unreachable block (ram,0x0800311a)
// WARNING: Removing unreachable block (ram,0x080030ff)
// WARNING: Removing unreachable block (ram,0x08002f62)
// WARNING: Removing unreachable block (ram,0x08002fb6)
// WARNING: Removing unreachable block (ram,0x08002fb9)
// WARNING: Removing unreachable block (ram,0x0800301d)
// WARNING: Removing unreachable block (ram,0x08002fcc)
// WARNING: Removing unreachable block (ram,0x08003018)
// WARNING: Removing unreachable block (ram,0x08002fdf)
// WARNING: Removing unreachable block (ram,0x08002f35)
// WARNING: Removing unreachable block (ram,0x0800302e)
// WARNING: Removing unreachable block (ram,0x08002f3d)
// WARNING: Removing unreachable block (ram,0x08002ef8)
// WARNING: Removing unreachable block (ram,0x08002f00)
// WARNING: Removing unreachable block (ram,0x08003040)
// WARNING: Removing unreachable block (ram,0x08003052)
// WARNING: Removing unreachable block (ram,0x08002f23)
// WARNING: Removing unreachable block (ram,0x08002ebf)
// WARNING: Removing unreachable block (ram,0x08002ed4)
// WARNING: Removing unreachable block (ram,0x08002edd)
// WARNING: Removing unreachable block (ram,0x08002e24)
// WARNING: Removing unreachable block (ram,0x08003006)
// WARNING: Removing unreachable block (ram,0x08002e72)
// WARNING: Removing unreachable block (ram,0x08002e97)
// WARNING: Removing unreachable block (ram,0x08002e9a)
// WARNING: Removing unreachable block (ram,0x08002ea0)
// WARNING: Removing unreachable block (ram,0x08003338)
// WARNING: Removing unreachable block (ram,0x080031af)

void sym.update_command(void)
{
    char *in_RCX;
    char unaff_BH;
    
    *in_RCX = *in_RCX + unaff_BH;
    // WARNING: Bad instruction - Truncating control flow here
    halt_baddata();
}


// WARNING: Control flow encountered bad instruction data
// WARNING: Possible PIC construction at 0x08003106: Changing call to branch
// WARNING: Possible PIC construction at 0x08003149: Changing call to branch
// WARNING: Possible PIC construction at 0x08003178: Changing call to branch
// WARNING: Possible PIC construction at 0x080031aa: Changing call to branch
// WARNING: Possible PIC construction at 0x08003200: Changing call to branch
// WARNING: Possible PIC construction at 0x0800333d: Changing call to branch
// WARNING: Possible PIC construction at 0x08003489: Changing call to branch
// WARNING: Possible PIC construction at 0x0800350d: Changing call to branch
// WARNING: Possible PIC construction at 0x080033f3: Changing call to branch
// WARNING: Possible PIC construction at 0x080034b4: Changing call to branch
// WARNING: Possible PIC construction at 0x08003252: Changing call to branch
// WARNING: Possible PIC construction at 0x08003289: Changing call to branch
// WARNING: Possible PIC construction at 0x080032e0: Changing call to branch
// WARNING: Possible PIC construction at 0x0800330b: Changing call to branch
// WARNING: Possible PIC construction at 0x08003333: Changing call to branch
// WARNING: Possible PIC construction at 0x0800360b: Changing call to branch
// WARNING: Possible PIC construction at 0x0800368b: Changing call to branch
// WARNING: Possible PIC construction at 0x08003725: Changing call to branch
// WARNING: Possible PIC construction at 0x08003760: Changing call to branch
// WARNING: Possible PIC construction at 0x080037a0: Changing call to branch
// WARNING: Possible PIC construction at 0x08003805: Changing call to branch
// WARNING: Possible PIC construction at 0x08003831: Changing call to branch
// WARNING: Possible PIC construction at 0x080038d9: Changing call to branch
// WARNING: Possible PIC construction at 0x08003953: Changing call to branch
// WARNING: Possible PIC construction at 0x08003893: Changing call to branch
// WARNING: Possible PIC construction at 0x080038b6: Changing call to branch
// WARNING: Possible PIC construction at 0x0800396c: Changing call to branch
// WARNING: Possible PIC construction at 0x080035d5: Changing call to branch
// WARNING: Removing unreachable block (ram,0x08003971)
// WARNING: Removing unreachable block (ram,0x080038bb)
// WARNING: Removing unreachable block (ram,0x080038c6)
// WARNING: Removing unreachable block (ram,0x08003898)
// WARNING: Removing unreachable block (ram,0x08003958)
// WARNING: Removing unreachable block (ram,0x080038de)
// WARNING: Removing unreachable block (ram,0x080038e6)
// WARNING: Removing unreachable block (ram,0x08003907)
// WARNING: Removing unreachable block (ram,0x08003836)
// WARNING: Removing unreachable block (ram,0x080038d0)
// WARNING: Removing unreachable block (ram,0x0800380a)
// WARNING: Removing unreachable block (ram,0x080037a5)
// WARNING: Removing unreachable block (ram,0x080037a9)
// WARNING: Removing unreachable block (ram,0x080037bb)
// WARNING: Removing unreachable block (ram,0x08003917)
// WARNING: Removing unreachable block (ram,0x08003819)
// WARNING: Removing unreachable block (ram,0x080037df)
// WARNING: Removing unreachable block (ram,0x08003765)
// WARNING: Removing unreachable block (ram,0x080039a3)
// WARNING: Removing unreachable block (ram,0x0800376d)
// WARNING: Removing unreachable block (ram,0x08003930)
// WARNING: Removing unreachable block (ram,0x0800384e)
// WARNING: Removing unreachable block (ram,0x080039af)
// WARNING: Removing unreachable block (ram,0x080039b4)
// WARNING: Removing unreachable block (ram,0x0800386e)
// WARNING: Removing unreachable block (ram,0x08003776)
// WARNING: Removing unreachable block (ram,0x08003950)
// WARNING: Removing unreachable block (ram,0x0800377f)
// WARNING: Removing unreachable block (ram,0x0800372a)
// WARNING: Removing unreachable block (ram,0x0800373c)
// WARNING: Removing unreachable block (ram,0x0800373f)
// WARNING: Removing unreachable block (ram,0x08003744)
// WARNING: Removing unreachable block (ram,0x08003790)
// WARNING: Removing unreachable block (ram,0x0800374a)
// WARNING: Removing unreachable block (ram,0x08003690)
// WARNING: Removing unreachable block (ram,0x080036cf)
// WARNING: Removing unreachable block (ram,0x080036b8)
// WARNING: Removing unreachable block (ram,0x080036db)
// WARNING: Removing unreachable block (ram,0x080036b0)
// WARNING: Removing unreachable block (ram,0x080036e2)
// WARNING: Removing unreachable block (ram,0x08003880)
// WARNING: Removing unreachable block (ram,0x080036f1)
// WARNING: Removing unreachable block (ram,0x08003614)
// WARNING: Removing unreachable block (ram,0x08003652)
// WARNING: Removing unreachable block (ram,0x08003656)
// WARNING: Removing unreachable block (ram,0x08003960)
// WARNING: Removing unreachable block (ram,0x0800365f)
// WARNING: Removing unreachable block (ram,0x08003669)
// WARNING: Removing unreachable block (ram,0x08003677)
// WARNING: Removing unreachable block (ram,0x08003338)
// WARNING: Removing unreachable block (ram,0x080031af)
// WARNING: Removing unreachable block (ram,0x08003310)
// WARNING: Removing unreachable block (ram,0x080032e5)
// WARNING: Removing unreachable block (ram,0x0800328e)
// WARNING: Removing unreachable block (ram,0x080032ee)
// WARNING: Removing unreachable block (ram,0x080032e0)
// WARNING: Removing unreachable block (ram,0x08003257)
// WARNING: Removing unreachable block (ram,0x08003512)
// WARNING: Removing unreachable block (ram,0x0800348e)
// WARNING: Removing unreachable block (ram,0x08003342)
// WARNING: Removing unreachable block (ram,0x08003205)
// WARNING: Removing unreachable block (ram,0x08003240)
// WARNING: Removing unreachable block (ram,0x08003260)
// WARNING: Removing unreachable block (ram,0x08003252)
// WARNING: Removing unreachable block (ram,0x08003209)
// WARNING: Removing unreachable block (ram,0x08003218)
// WARNING: Removing unreachable block (ram,0x0800333d)
// WARNING: Removing unreachable block (ram,0x0800322c)
// WARNING: Removing unreachable block (ram,0x0800317d)
// WARNING: Removing unreachable block (ram,0x0800314e)
// WARNING: Removing unreachable block (ram,0x08003186)
// WARNING: Removing unreachable block (ram,0x08003178)
// WARNING: Removing unreachable block (ram,0x0800310b)
// WARNING: Removing unreachable block (ram,0x08003270)
// WARNING: Removing unreachable block (ram,0x08003113)
// WARNING: Removing unreachable block (ram,0x080035da)
// WARNING: Removing unreachable block (ram,0x080030ff)

void sym.replot_command(void)
{
    uint32_t uVar1;
    code *pcVar2;
    char cVar3;
    char *pcVar4;
    char *in_RCX;
    code *unaff_RBX;
    undefined8 unaff_RBP;
    undefined8 unaff_R12;
    undefined8 unaff_R13;
    undefined8 unaff_R14;
    int64_t in_FS_OFFSET;
    
    if (*(char *)CONCAT44(*(undefined4 *)0x8000004, _segment.ehdr) == '\0') {
code_r0x080035fc:
        pcVar4 = (char *)0x0;
    } else {
        pcVar4 = (char *)(uint64_t)(uint8_t)reloc.replot_disabled;
        if ((reloc.volatile_data == (code)0x0) || (_reloc.refresh_ok == 0)) {
            if (reloc.replot_disabled == (code)0x0) {
                if (_reloc.term != 0) {
                    _segment.ehdr = _segment.ehdr + 1;
                    if ((*(uint8_t *)(_reloc.term + 0xa8) & 8) != 0) {
                        (**(code **)(_reloc.term + 0x30))();
                    }
code_r0x080030d4:
                    *(undefined8 *)((int64_t)*(undefined **)0x20 + -8) = unaff_R14;
                    *(undefined8 *)((int64_t)*(undefined **)0x20 + -0x10) = unaff_R13;
                    *(undefined8 *)((int64_t)*(undefined **)0x20 + -0x18) = unaff_R12;
                    *(undefined8 *)((int64_t)*(undefined **)0x20 + -0x20) = unaff_RBP;
                    *(code **)((int64_t)*(undefined **)0x20 + -0x28) = unaff_RBX;
                    *(undefined8 *)((int64_t)*(undefined **)0x20 + -0x30) = *(undefined8 *)(in_FS_OFFSET + 0x28);
                    *(undefined8 *)((int64_t)*(undefined **)0x20 + -0x40) = 0x8003140;
                    pcVar4 = (char *)func_0x080405e1(CONCAT44(*(undefined4 *)0x8000004, _segment.ehdr));
                    *(undefined8 *)((int64_t)*(undefined **)0x20 + -0x40) = 0x800314e;
                    goto code_r0x080405e1;
                }
                func_0x080405e1(_segment.ehdr, "use \'set term\' to set terminal type first");
                goto code_r0x080035fc;
            }
        } else {
            if (reloc.replot_disabled == (code)0x0) {
                _segment.ehdr = _segment.ehdr + 1;
                do {
                    *(undefined8 *)((int64_t)*(undefined **)0x20 + -8) = unaff_RBP;
                    *(code **)((int64_t)*(undefined **)0x20 + -0x10) = unaff_RBX;
                    if (((_reloc.first_plot == 0) && (_reloc.refresh_ok == 2)) ||
                       ((_reloc.first_3dplot == 0 && (_reloc.refresh_ok == 3)))) {
code_r0x080034a8:
                        pcVar4 = (char *)0x0;
                        *(undefined8 *)((int64_t)*(undefined **)0x20 + -0x20) = 0x80034b9;
                        goto code_r0x080405e1;
                    }
                    if (*(char *)CONCAT44(*(undefined4 *)0x8000004, _segment.ehdr) == '\0') {
                        if (_reloc.refresh_ok == 0) goto code_r0x080034a8;
                    } else {
                        if (_reloc.refresh_ok == 0) {
                            *(undefined8 *)((int64_t)*(undefined **)0x20 + -0x20) = 0x80034f1;
                            func_0x080405e1(0xffffffff, "cannot refresh from this state. trying full replot");
                            unaff_RBX = *(code **)((int64_t)*(undefined **)0x20 + -0x10);
                            unaff_RBP = *(undefined8 *)((int64_t)*(undefined **)0x20 + -8);
                            goto code_r0x080030d4;
                        }
                    }
                    reloc.retain_offsets = (code)0x1;
                    unaff_RBP = 0x8041d41;
                    pcVar2 = reloc.axis_array;
code_r0x08003404:
                    do {
                        unaff_RBX = pcVar2;
                        uVar1 = *(uint32_t *)(unaff_RBX + 4);
                        pcVar4 = (char *)(uint64_t)uVar1;
                        if (((uVar1 & 1) != 0) && (*(double *)(unaff_RBX + 0x30) < _reloc..LC105)) {
                            *(double *)(unaff_RBX + 0x20) = *(double *)(unaff_RBX + 0x30);
                            if ((uVar1 & 2) == 0) goto code_r0x08003419;
code_r0x080033cc:
                            if (*(double *)(unaff_RBX + 0x38) <= _reloc..LC106) goto code_r0x08003419;
                            *(double *)(unaff_RBX + 0x28) = *(double *)(unaff_RBX + 0x38);
                            if (*(int64_t *)(unaff_RBX + 0xa8) == 0) goto code_r0x0800342f;
code_r0x080033f0:
                            *(undefined8 *)((int64_t)*(undefined **)0x20 + -0x20) = 0x80033f8;
                            goto code_r0x080405e1;
                        }
                        *(undefined8 *)(unaff_RBX + 0x10) = *(undefined8 *)(unaff_RBX + 0x20);
                        if ((uVar1 & 2) != 0) goto code_r0x080033cc;
code_r0x08003419:
                        *(undefined8 *)(unaff_RBX + 0x18) = *(undefined8 *)(unaff_RBX + 0x28);
                        if (*(int64_t *)(unaff_RBX + 0xa8) != 0) goto code_r0x080033f0;
code_r0x0800342f:
                        if (*(int32_t **)(unaff_RBX + 0xa0) == (int32_t *)0x0) {
                            pcVar2 = unaff_RBX + 0x2a8;
                            if (unaff_RBX + 0x2a8 == (code *)0x8041d41) break;
                            goto code_r0x08003404;
                        }
                        if (**(int32_t **)(unaff_RBX + 0xa0) != 3) goto code_r0x080033f0;
                        pcVar2 = unaff_RBX + 0x2a8;
                    } while (unaff_RBX + 0x2a8 != (code *)0x8041d41);
                    unaff_RBX = unaff_RBX + 0x2a8;
                    pcVar4 = (char *)(uint64_t)_reloc.refresh_ok;
                    if (_reloc.refresh_ok == 2) {
                        *(undefined8 *)((int64_t)*(undefined **)0x20 + -0x20) = 0x8003512;
                        goto code_r0x080405e1;
                    }
                    if (_reloc.refresh_ok == 3) goto code_r0x08003468;
                    *(undefined8 *)((int64_t)*(undefined **)0x20 + -0x20) = 0x8003545;
                    func_0x080405e1(0xffffffff, "Internal error - refresh of unknown plot type");
                    _segment.ehdr = _segment.ehdr + 1;
                    *(undefined **)0x20 = (BADSPACEBASE *)((int64_t)*(undefined **)0x20 + -0x18);
                } while( true );
            }
        }
        reloc.replot_disabled = (code)0x0;
    }
code_r0x080405e1:
    cVar3 = (char)pcVar4;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *in_RCX = *in_RCX + (char)((uint64_t)unaff_RBX >> 8);
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    *pcVar4 = *pcVar4 + cVar3;
    // WARNING: Bad instruction - Truncating control flow here
    halt_baddata();
code_r0x08003468:
    *(undefined8 *)((int64_t)*(undefined **)0x20 + -0x20) = 0x800347a;
    pcVar4 = (char *)func_0x080405e1(_reloc.first_3dplot, _reloc.refresh_nplots);
    *(undefined8 *)((int64_t)*(undefined **)0x20 + -0x20) = 0x800348e;
    goto code_r0x080405e1;
}


// WARNING: Control flow encountered bad instruction data
// WARNING: Possible PIC construction at 0x080039ee: Changing call to branch
// WARNING: Possible PIC construction at 0x08003a20: Changing call to branch
// WARNING: Possible PIC construction at 0x08003a77: Changing call to branch
// WARNING: Possible PIC construction at 0x08003aac: Changing call to branch
// WARNING: Possible PIC construction at 0x08003af8: Changing call to branch
// WARNING: Possible PIC construction at 0x08003b41: Changing call to branch
// WARNING: Possible PIC construction at 0x08003b71: Changing call to branch
// WARNING: Possible PIC construction at 0x08003ca5: Changing call to branch
// WARNING: Possible PIC construction at 0x08003f6d: Changing call to branch
// WARNING: Possible PIC construction at 0x08003f8f: Changing call to branch
// WARNING: Possible PIC construction at 0x08003fae: Changing call to branch
// WARNING: Possible PIC construction at 0x08003fd6: Changing call to branch
// WARNING: Possible PIC construction at 0x0800401c: Changing call to branch
// WARNING: Possible PIC construction at 0x08003dee: Changing call to branch
// WARNING: Possible PIC construction at 0x08003f54: Changing call to branch
// WARNING: Possible PIC construction at 0x08003d06: Changing call to branch
// WARNING: Possible PIC construction at 0x08003d89: Changing call to branch
// WARNING: Possible PIC construction at 0x08003d51: Changing call to branch
// WARNING: Possible PIC construction at 0x08003e2a: Changing call to branch
// WARNING: Possible PIC construction at 0x08003e58: Changing call to branch
// WARNING: Possible PIC construction at 0x08003ea0: Changing call to branch
// WARNING: Possible PIC construction at 0x08003bd7: Changing call to branch
// WARNING: Possible PIC construction at 0x08003c05: Changing call to branch
// WARNING: Possible PIC construction at 0x08003f42: Changing call to branch
// WARNING: Possible PIC construction at 0x08003f21: Changing call to branch
// WARNING: Removing unreachable block (ram,0x08003c0a)
// WARNING: Removing unreachable block (ram,0x08003e10)
// WARNING: Removing unreachable block (ram,0x08003c48)
// WARNING: Removing unreachable block (ram,0x08003bdc)
// WARNING: Removing unreachable block (ram,0x08003c05)
// WARNING: Removing unreachable block (ram,0x08003ea5)
// WARNING: Removing unreachable block (ram,0x08003ead)
// WARNING: Removing unreachable block (ram,0x08003caa)
// WARNING: Removing unreachable block (ram,0x08003e5d)
// WARNING: Removing unreachable block (ram,0x08003e6b)
// WARNING: Removing unreachable block (ram,0x08003e7c)
// WARNING: Removing unreachable block (ram,0x08003fb3)
// WARNING: Removing unreachable block (ram,0x08003e90)
// WARNING: Removing unreachable block (ram,0x08003e2f)
// WARNING: Removing unreachable block (ram,0x08003e3d)
// WARNING: Removing unreachable block (ram,0x08003fc7)
// WARNING: Removing unreachable block (ram,0x08003e51)
// WARNING: Removing unreachable block (ram,0x08003d56)
// WARNING: Removing unreachable block (ram,0x08003d6f)
// WARNING: Removing unreachable block (ram,0x08003e20)
// WARNING: Removing unreachable block (ram,0x08003d79)
// WARNING: Removing unreachable block (ram,0x08003d8e)
// WARNING: Removing unreachable block (ram,0x08003d48)
// WARNING: Removing unreachable block (ram,0x08003d92)
// WARNING: Removing unreachable block (ram,0x08003d0b)
// WARNING: Removing unreachable block (ram,0x08003d98)
// WARNING: Removing unreachable block (ram,0x08003d13)
// WARNING: Removing unreachable block (ram,0x08003d32)
// WARNING: Removing unreachable block (ram,0x08003d9e)
// WARNING: Removing unreachable block (ram,0x08003cb8)
// WARNING: Removing unreachable block (ram,0x08003dd0)
// WARNING: Removing unreachable block (ram,0x08003ddd)
// WARNING: Removing unreachable block (ram,0x08003deb)
// WARNING: Removing unreachable block (ram,0x08003ccb)
// WARNING: Removing unreachable block (ram,0x08003dba)
// WARNING: Removing unreachable block (ram,0x08003d3d)
// WARNING: Removing unreachable block (ram,0x08003d84)
// WARNING: Removing unreachable block (ram,0x08003f59)
// WARNING: Removing unreachable block (ram,0x08003f72)
// WARNING: Removing unreachable block (ram,0x08003f5d)
// WARNING: Removing unreachable block (ram,0x08003df3)
// WARNING: Removing unreachable block (ram,0x08003ef6)
// WARNING: Removing unreachable block (ram,0x08003f47)
// WARNING: Removing unreachable block (ram,0x08003f0c)
// WARNING: Removing unreachable block (ram,0x08003dfb)
// WARNING: Removing unreachable block (ram,0x08004021)
// WARNING: Removing unreachable block (ram,0x08003fdb)
// WARNING: Removing unreachable block (ram,0x08004030)
// WARNING: Removing unreachable block (ram,0x08003ff1)
// WARNING: Removing unreachable block (ram,0x08004042)
// WARNING: Removing unreachable block (ram,0x0800400f)
// WARNING: Removing unreachable block (ram,0x08003b76)
// WARNING: Removing unreachable block (ram,0x08003f94)
// WARNING: Removing unreachable block (ram,0x08003fa5)
// WARNING: Removing unreachable block (ram,0x08003b8a)
// WARNING: Removing unreachable block (ram,0x08003c4e)
// WARNING: Removing unreachable block (ram,0x08003ba0)
// WARNING: Removing unreachable block (ram,0x08003bac)
// WARNING: Removing unreachable block (ram,0x08003bb7)
// WARNING: Removing unreachable block (ram,0x08003bc0)
// WARNING: Removing unreachable block (ram,0x08003f34)
// WARNING: Removing unreachable block (ram,0x08003bcd)
// WARNING: Removing unreachable block (ram,0x08003c56)
// WARNING: Removing unreachable block (ram,0x08003c73)
// WARNING: Removing unreachable block (ram,0x08003c80)
// WARNING: Removing unreachable block (ram,0x08003cd1)
// WARNING: Removing unreachable block (ram,0x08003c84)
// WARNING: Removing unreachable block (ram,0x08003c90)
// WARNING: Removing unreachable block (ram,0x08003c9c)
// WARNING: Removing unreachable block (ram,0x08003d00)
// WARNING: Removing unreachable block (ram,0x08003ca5)
// WARNING: Removing unreachable block (ram,0x08003b46)
// WARNING: Removing unreachable block (ram,0x08003afd)
// WARNING: Removing unreachable block (ram,0x08003ede)
// WARNING: Removing unreachable block (ram,0x08003ef1)
// WARNING: Removing unreachable block (ram,0x08003ab1)
// WARNING: Removing unreachable block (ram,0x08003ac4)
// WARNING: Removing unreachable block (ram,0x08003ac0)
// WARNING: Removing unreachable block (ram,0x08003acf)
// WARNING: Removing unreachable block (ram,0x08003f18)
// WARNING: Removing unreachable block (ram,0x08003ad8)
// WARNING: Removing unreachable block (ram,0x08003b2b)
// WARNING: Removing unreachable block (ram,0x08003b59)
// WARNING: Removing unreachable block (ram,0x08003b30)
// WARNING: Removing unreachable block (ram,0x08003aea)
// WARNING: Removing unreachable block (ram,0x08003a84)
// WARNING: Removing unreachable block (ram,0x08003a25)
// WARNING: Removing unreachable block (ram,0x08003a50)
// WARNING: Removing unreachable block (ram,0x08003a59)
// WARNING: Removing unreachable block (ram,0x08003a62)
// WARNING: Removing unreachable block (ram,0x08003a6b)
// WARNING: Removing unreachable block (ram,0x08003a41)
// WARNING: Removing unreachable block (ram,0x080039f3)
// WARNING: Removing unreachable block (ram,0x08003a14)
// WARNING: Removing unreachable block (ram,0x08003f26)
// WARNING: Removing unreachable block (ram,0x08003cd8)
// WARNING: Removing unreachable block (ram,0x08003f6d)
// WARNING: Removing unreachable block (ram,0x08003cec)

void sym.do_shell(int64_t arg7)
{
    char in_AL;
    unkbyte7 in_RAX;
    char *in_RCX;
    char unaff_BH;
    
    _segment.ehdr = _segment.ehdr + 1;
    reloc.screen_ok = (code)0x0;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *in_RCX = *in_RCX + unaff_BH;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    // WARNING: Bad instruction - Truncating control flow here
    halt_baddata();
}


// WARNING: Control flow encountered bad instruction data
// WARNING: Possible PIC construction at 0x0800405f: Changing call to branch
// WARNING: Possible PIC construction at 0x08004094: Changing call to branch
// WARNING: Possible PIC construction at 0x080040bf: Changing call to branch
// WARNING: Removing unreachable block (ram,0x08004064)
// WARNING: Removing unreachable block (ram,0x08004075)
// WARNING: Removing unreachable block (ram,0x08004070)
// WARNING: Removing unreachable block (ram,0x0800408a)
// WARNING: Removing unreachable block (ram,0x08004099)
// WARNING: Removing unreachable block (ram,0x080040c4)
// WARNING: Removing unreachable block (ram,0x080040b8)
// WARNING: Removing unreachable block (ram,0x080040bf)
// WARNING: Removing unreachable block (ram,0x080040d0)
// WARNING: Removing unreachable block (ram,0x080040af)
// WARNING: Removing unreachable block (ram,0x080040d8)

void sym.do_string_and_free(int64_t arg1)
{
    char in_AL;
    unkbyte7 in_RAX;
    char *in_RCX;
    char unaff_BH;
    
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *in_RCX = *in_RCX + unaff_BH;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    // WARNING: Bad instruction - Truncating control flow here
    halt_baddata();
}


// WARNING: Control flow encountered bad instruction data
// WARNING: Possible PIC construction at 0x080040e8: Changing call to branch
// WARNING: Possible PIC construction at 0x08004078: Changing call to branch
// WARNING: Possible PIC construction at 0x080040a0: Changing call to branch
// WARNING: Possible PIC construction at 0x08004070: Changing call to branch
// WARNING: Removing unreachable block (ram,0x0800407d)
// WARNING: Removing unreachable block (ram,0x08004070)
// WARNING: Removing unreachable block (ram,0x0800408a)
// WARNING: Removing unreachable block (ram,0x080040ed)
// WARNING: Removing unreachable block (ram,0x08004054)
// WARNING: Removing unreachable block (ram,0x08004075)
// WARNING: Removing unreachable block (ram,0x080040a5)
// WARNING: Removing unreachable block (ram,0x080040c4)
// WARNING: Removing unreachable block (ram,0x080040b8)
// WARNING: Removing unreachable block (ram,0x080040bf)
// WARNING: Removing unreachable block (ram,0x080040d0)
// WARNING: Removing unreachable block (ram,0x080040af)
// WARNING: Removing unreachable block (ram,0x080040d8)

void sym.do_string(void)
{
    char in_AL;
    unkbyte7 in_RAX;
    char *in_RCX;
    char unaff_BH;
    
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *in_RCX = *in_RCX + unaff_BH;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    *(char *)CONCAT71(in_RAX, in_AL) = *(char *)CONCAT71(in_RAX, in_AL) + in_AL;
    // WARNING: Bad instruction - Truncating control flow here
    halt_baddata();
}


// WARNING: Control flow encountered bad instruction data
// WARNING: Possible PIC construction at 0x0800413d: Changing call to branch
// WARNING: Possible PIC construction at 0x0800418a: Changing call to branch
// WARNING: Possible PIC construction at 0x0800442e: Changing call to branch
// WARNING: Possible PIC construction at 0x08004473: Changing call to branch
// WARNING: Possible PIC construction at 0x08004498: Changing call to branch
// WARNING: Possible PIC construction at 0x080044db: Changing call to branch
// WARNING: Possible PIC construction at 0x08004502: Changing call to branch
// WARNING: Possible PIC construction at 0x08004527: Changing call to branch
// WARNING: Possible PIC construction at 0x080045a7: Changing call to branch
// WARNING: Possible PIC construction at 0x080045c3: Changing call to branch
// WARNING: Possible PIC construction at 0x080045e2: Changing call to branch
// WARNING: Possible PIC construction at 0x08004633: Changing call to branch
// WARNING: Possible PIC construction at 0x080046a2: Changing call to branch
// WARNING: Possible PIC construction at 0x080046cf: Changing call to branch
// WARNING: Possible PIC construction at 0x08004743: Changing call to branch
// WARNING: Possible PIC construction at 0x0800476f: Changing call to branch
// WARNING: Possible PIC construction at 0x08004078: Changing call to branch
// WARNING: Possible PIC construction at 0x080040a0: Changing call to branch
// WARNING: Possible PIC construction at 0x08004070: Changing call to branch
// WARNING: Possible PIC construction at 0x080047cf: Changing call to branch
// WARNING: Possible PIC construction at 0x080047f4: Changing call to branch
// WARNING: Possible PIC construction at 0x08004ab9: Changing call to branch
// WARNING: Possible PIC construction at 0x08004c3e: Changing call to branch
// WARNING: Possible PIC construction at 0x08004c77: Changing call to branch
// WARNING: Possible PIC construction at 0x08004cb7: Changing call to branch
// WARNING: Possible PIC construction at 0x08004d05: Changing call to branch
// WARNING: Possible PIC construction at 0x08004d27: Changing call to branch
// WARNING: Possible PIC construction at 0x08004d60: Changing call to branch
// WARNING: Possible PIC construction at 0x08004c0d: Changing call to branch
// WARNING: Possible PIC construction at 0x08004c39: Changing call to branch
// WARNING: Possible PIC construction at 0x0800486a: Changing call to branch
// WARNING: Possible PIC construction at 0x08004a6b: Changing call to branch
// WARNING: Possible PIC construction at 0x0800495e: Changing call to branch
// WARNING: Possible PIC construction at 0x080049f2: Changing call to branch
// WARNING: Possible PIC construction at 0x08004a14: Changing call to branch
// WARNING: Possible PIC construction at 0x08004a5d: Changing call to branch
// WARNING: Possible PIC construction at 0x08004574: Changing call to branch
// WARNING: Possible PIC construction at 0x0800426f: Changing call to branch
// WARNING: Possible PIC construction at 0x080041b7: Changing call to branch
// WARNING: Possible PIC construction at 0x0800420b: Changing call to branch
// WARNING: Possible PIC construction at 0x08004246: Changing call to branch
// WARNING: Possible PIC construction at 0x080043bd: Changing call to branch
// WARNING: Possible PIC construction at 0x08004351: Changing call to branch
// WARNING: Possible PIC construction at 0x08004366: Changing call to branch
// WARNING: Possible PIC construction at 0x08004390: Changing call to branch
// WARNING: Possible PIC construction at 0x080043a0: Changing call to branch
// WARNING: Possible PIC construction at 0x08004404: Changing call to branch
// WARNING: Possible PIC construction at 0x080042bd: Changing call to branch
// WARNING: Possible PIC construction at 0x080042fc: Changing call to branch
// WARNING: Removing unreachable block (ram,0x080042c2)
// WARNING: Removing unreachable block (ram,0x080042ca)
// WARNING: Removing unreachable block (ram,0x08004409)
// WARNING: Removing unreachable block (ram,0x080043a5)
// WARNING: Removing unreachable block (ram,0x08004395)
// WARNING: Removing unreachable block (ram,0x0800436b)
// WARNING: Removing unreachable block (ram,0x0800436e)
// WARNING: Removing unreachable block (ram,0x08004377)
// WARNING: Removing unreachable block (ram,0x08004356)
// WARNING: Removing unreachable block (ram,0x080043e8)
// WARNING: Removing unreachable block (ram,0x0800435e)
// WARNING: Removing unreachable block (ram,0x080043c2)
// WARNING: Removing unreachable block (ram,0x080043ca)
// WARNING: Removing unreachable block (ram,0x0800424b)
// WARNING: Removing unreachable block (ram,0x08004255)
// WARNING: Removing unreachable block (ram,0x08004210)
// WARNING: Removing unreachable block (ram,0x080043b0)
// WARNING: Removing unreachable block (ram,0x08004218)
// WARNING: Removing unreachable block (ram,0x0800421e)
// WARNING: Removing unreachable block (ram,0x0800422a)
// WARNING: Removing unreachable block (ram,0x08004240)
// WARNING: Removing unreachable block (ram,0x080041bc)
// WARNING: Removing unreachable block (ram,0x080042b0)
// WARNING: Removing unreachable block (ram,0x080041c4)
// WARNING: Removing unreachable block (ram,0x080041d6)
// WARNING: Removing unreachable block (ram,0x08004328)
// WARNING: Removing unreachable block (ram,0x08004342)
// WARNING: Removing unreachable block (ram,0x080041ea)
// WARNING: Removing unreachable block (ram,0x08004204)
// WARNING: Removing unreachable block (ram,0x08004274)
// WARNING: Removing unreachable block (ram,0x0800427c)
// WARNING: Removing unreachable block (ram,0x08004296)
// WARNING: Removing unreachable block (ram,0x08004579)
// WARNING: Removing unreachable block (ram,0x08004581)
// WARNING: Removing unreachable block (ram,0x08004a19)
// WARNING: Removing unreachable block (ram,0x08004a50)
// WARNING: Removing unreachable block (ram,0x08004a1d)
// WARNING: Removing unreachable block (ram,0x080049f7)
// WARNING: Removing unreachable block (ram,0x08004963)
// WARNING: Removing unreachable block (ram,0x080049fe)
// WARNING: Removing unreachable block (ram,0x08004971)
// WARNING: Removing unreachable block (ram,0x08004985)
// WARNING: Removing unreachable block (ram,0x080049c4)
// WARNING: Removing unreachable block (ram,0x08004987)
// WARNING: Removing unreachable block (ram,0x08004a4c)
// WARNING: Removing unreachable block (ram,0x080049dc)
// WARNING: Removing unreachable block (ram,0x080049a1)
// WARNING: Removing unreachable block (ram,0x080049aa)
// WARNING: Removing unreachable block (ram,0x080049b3)
// WARNING: Removing unreachable block (ram,0x080049b9)
// WARNING: Removing unreachable block (ram,0x0800486f)
// WARNING: Removing unreachable block (ram,0x08004850)
// WARNING: Removing unreachable block (ram,0x08004873)
// WARNING: Removing unreachable block (ram,0x08004879)
// WARNING: Removing unreachable block (ram,0x08004a39)
// WARNING: Removing unreachable block (ram,0x08004896)
// WARNING: Removing unreachable block (ram,0x08004c12)
// WARNING: Removing unreachable block (ram,0x08004d65)
// WARNING: Removing unreachable block (ram,0x08004d2c)
// WARNING: Removing unreachable block (ram,0x08004d0a)
// WARNING: Removing unreachable block (ram,0x08004cbc)
// WARNING: Removing unreachable block (ram,0x08004d0f)
// WARNING: Removing unreachable block (ram,0x08004cc6)
// WARNING: Removing unreachable block (ram,0x08004cd0)
// WARNING: Removing unreachable block (ram,0x08004cf2)
// WARNING: Removing unreachable block (ram,0x08004cd8)
// WARNING: Removing unreachable block (ram,0x08004cb0)
// WARNING: Removing unreachable block (ram,0x08004c7c)
// WARNING: Removing unreachable block (ram,0x08004d54)
// WARNING: Removing unreachable block (ram,0x08004c85)
// WARNING: Removing unreachable block (ram,0x08004cb4)
// WARNING: Removing unreachable block (ram,0x08004c43)
// WARNING: Removing unreachable block (ram,0x08004abe)
// WARNING: Removing unreachable block (ram,0x08004b28)
// WARNING: Removing unreachable block (ram,0x08004c1c)
// WARNING: Removing unreachable block (ram,0x08004b36)
// WARNING: Removing unreachable block (ram,0x08004b80)
// WARNING: Removing unreachable block (ram,0x08004b48)
// WARNING: Removing unreachable block (ram,0x08004ac2)
// WARNING: Removing unreachable block (ram,0x08004c30)
// WARNING: Removing unreachable block (ram,0x08004ad5)
// WARNING: Removing unreachable block (ram,0x08004bf0)
// WARNING: Removing unreachable block (ram,0x08004b01)
// WARNING: Removing unreachable block (ram,0x08004b0a)
// WARNING: Removing unreachable block (ram,0x08004b13)
// WARNING: Removing unreachable block (ram,0x08004b19)
// WARNING: Removing unreachable block (ram,0x08004b5c)
// WARNING: Removing unreachable block (ram,0x08004c3e)
// WARNING: Removing unreachable block (ram,0x08004b70)
// WARNING: Removing unreachable block (ram,0x080047f9)
// WARNING: Removing unreachable block (ram,0x08004930)
// WARNING: Removing unreachable block (ram,0x08004801)
// WARNING: Removing unreachable block (ram,0x08004a62)
// WARNING: Removing unreachable block (ram,0x08004815)
// WARNING: Removing unreachable block (ram,0x08004837)
// WARNING: Removing unreachable block (ram,0x080048c0)
// WARNING: Removing unreachable block (ram,0x08004844)
// WARNING: Removing unreachable block (ram,0x08004867)
// WARNING: Removing unreachable block (ram,0x08004848)
// WARNING: Removing unreachable block (ram,0x080048a6)
// WARNING: Removing unreachable block (ram,0x08004915)
// WARNING: Removing unreachable block (ram,0x08004929)
// WARNING: Removing unreachable block (ram,0x080047d4)
// WARNING: Removing unreachable block (ram,0x08004a70)
// WARNING: Removing unreachable block (ram,0x08004a82)
// WARNING: Removing unreachable block (ram,0x080047dc)
// WARNING: Removing unreachable block (ram,0x080040a5)
// WARNING: Removing unreachable block (ram,0x080040c4)
// WARNING: Removing unreachable block (ram,0x080040b8)
// WARNING: Removing unreachable block (ram,0x080040bf)
// WARNING: Removing unreachable block (ram,0x080040d0)
// WARNING: Removing unreachable block (ram,0x080040af)
// WARNING: Removing unreachable block (ram,0x080040d8)
// WARNING: Removing unreachable block (ram,0x0800407d)
// WARNING: Removing unreachable block (ram,0x08004070)
// WARNING: Removing unreachable block (ram,0x0800408a)
// WARNING: Removing unreachable block (ram,0x08004774)
// WARNING: Removing unreachable block (ram,0x08004785)
// WARNING: Removing unreachable block (ram,0x08004779)
// WARNING: Removing unreachable block (ram,0x08004054)
// WARNING: Removing unreachable block (ram,0x08004075)
// WARNING: Removing unreachable block (ram,0x080046d4)
// WARNING: Removing unreachable block (ram,0x08004743)
// WARNING: Removing unreachable block (ram,0x08004701)
// WARNING: Removing unreachable block (ram,0x080046a7)
// WARNING: Removing unreachable block (ram,0x08004710)
// WARNING: Removing unreachable block (ram,0x08004719)
// WARNING: Removing unreachable block (ram,0x08004732)
// WARNING: Removing unreachable block (ram,0x08004738)
// WARNING: Removing unreachable block (ram,0x080046b9)
// WARNING: Removing unreachable block (ram,0x08004638)
// WARNING: Removing unreachable block (ram,0x08004748)
// WARNING: Removing unreachable block (ram,0x08004640)
// WARNING: Removing unreachable block (ram,0x0800468f)
// WARNING: Removing unreachable block (ram,0x080046c9)
// WARNING: Removing unreachable block (ram,0x08004698)
// WARNING: Removing unreachable block (ram,0x080045e7)
// WARNING: Removing unreachable block (ram,0x0800452c)
// WARNING: Removing unreachable block (ram,0x080045a7)
// WARNING: Removing unreachable block (ram,0x08004558)
// WARNING: Removing unreachable block (ram,0x08004507)
// WARNING: Removing unreachable block (ram,0x08004568)
// WARNING: Removing unreachable block (ram,0x08004571)
// WARNING: Removing unreachable block (ram,0x08004511)
// WARNING: Removing unreachable block (ram,0x08004518)
// WARNING: Removing unreachable block (ram,0x080044e0)
// WARNING: Removing unreachable block (ram,0x08004588)
// WARNING: Removing unreachable block (ram,0x08004598)
// WARNING: Removing unreachable block (ram,0x080044e8)
// WARNING: Removing unreachable block (ram,0x080044f0)
// WARNING: Removing unreachable block (ram,0x0800449d)
// WARNING: Removing unreachable block (ram,0x080045ac)
// WARNING: Removing unreachable block (ram,0x080044a5)
// WARNING: Removing unreachable block (ram,0x08004478)
// WARNING: Removing unreachable block (ram,0x080045c8)
// WARNING: Removing unreachable block (ram,0x0800448b)
// WARNING: Removing unreachable block (ram,0x08004142)
// WARNING: Removing unreachable block (ram,0x0800414a)
// WARNING: Removing unreachable block (ram,0x08004268)
// WARNING: Removing unreachable block (ram,0x0800416f)
// WARNING: Removing unreachable block (ram,0x08004176)
// WARNING: Removing unreachable block (ram,0x08004182)
// WARNING: Removing unreachable block (ram,0x0800418a)
// WARNING: Removing unreachable block (ram,0x08004301)
// WARNING: Removing unreachable block (ram,0x08004433)
// WARNING: Removing unreachable block (ram,0x08004315)
// WARNING: Removing unreachable block (ram,0x0800418f)
// WARNING: Removing unreachable block (ram,0x0800441a)
// WARNING: Removing unreachable block (ram,0x0800441f)
// WARNING: Removing unreachable block (ram,0x080041a3)

void sym.history_command(int64_t arg7)
{
    char cVar1;
    char *pcVar2;
    char *in_RCX;
    char unaff_BH;
    
    pcVar2 = (char *)(uint64_t)_segment.ehdr;
    cVar1 = (char)_segment.ehdr;
    _segment.ehdr = _segment.ehdr + 1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *in_RCX = *in_RCX + unaff_BH;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    *pcVar2 = *pcVar2 + cVar1;
    // WARNING: Bad instruction - Truncating control flow here
    halt_baddata();
}


/* r2dec pseudo code output */
/* /home/jmov/PycharmProjects/RadareQUI/Specimens/ObjFiles/command.o @ 0x8004100 */
#include <stdint.h>
 
int64_t history_command (int64_t arg7) {
    int64_t var_8h_5;
    int64_t var_4h;
    int64_t var_8h_4;
    int64_t var_8h_6;
    int64_t var_18h_2;
    int64_t var_1ch;
    int64_t var_20h;
    int64_t var_24h;
    int64_t var_28h;
    int64_t var_8h_3;
    int64_t var_10h;
    int64_t var_14h;
    int64_t var_18h;
    int64_t var_4h_2;
    int64_t var_8h_2;
    int64_t var_8h;
    xmm0 = arg7;
    __asm ("endbr64");
    rax = *(fs:0x28);
    *((rsp + 8)) = rax;
    eax = 0;
    eax = command.c;
    edi = rax + 1;
    *(obj.c_token) = edi;
    while (edi >= *(obj.c_token)) {
        r12d = *(reloc.history_quiet);
label_0:
        ebp = 0;
label_1:
        rax = equals ();
        rbx = rax;
        if (rax != 0) {
            rdi = name.12778;
            equals ();
            edi = command.c;
            *(obj.name.12778) = rbx;
            if (edi < *(obj.c_token)) {
                goto label_21;
            }
        }
label_2:
        rdx = loc__LC68;
label_3:
        rsi = loc__LC9;
        edi = ebp;
        if (r12b == 0) {
            rsi = *(obj.name.12778);
        }
        equals ();
label_5:
        rax = *((rsp + 8));
        rax ^= *(fs:0x28);
        if (r12b != 0) {
            goto label_22;
        }
        return rax;
        rsi = loc__LC18;
        eax = equals ();
        if (eax == 0) {
            goto label_23;
        }
label_4:
        edi = command.c;
    }
    rsi = loc__LC18;
    eax = equals ();
    if (eax == 0) {
        goto label_24;
    }
label_6:
    edi = command.c;
    r12d = *(reloc.history_quiet);
    if (edi >= *(obj.c_token)) {
        goto label_0;
    }
    rsi = loc__LC18;
    eax = equals ();
    if (eax == 0) {
        goto label_25;
    }
label_8:
    edi = command.c;
label_9:
    if (*(obj.c_token) <= edi) {
        goto label_0;
    }
    rsi = loc__LC18;
    ebp = 0;
    eax = equals ();
    if (eax != 0) {
        goto label_1;
    }
    edi = command.c;
    eax = equals ();
    if (eax == 0) {
        goto label_1;
    }
    eax = equals ();
    goto label_1;
label_21:
    rsi = loc__LC18;
    eax = equals ();
    if (eax != 0) {
        goto label_2;
    }
    edi = command.c;
    rsi = "ap$pend";
    eax = equals ();
    if (eax == 0) {
        goto label_2;
    }
    *(obj.c_token)++;
    rdx = loc__LC67;
    goto label_3;
label_23:
    edi = command.c;
    rsi = loc__LC126;
    eax = equals ();
    if (eax == 0) {
        goto label_4;
    }
    eax = command.c;
    rdi = obj_search_str_12771;
    esi = rax + 1;
    edx = esi;
    *(obj.c_token) = esi;
    eax = equals ();
    rdx = search_str.12771;
    eax = 0;
    edi = 1;
    rsi = "history ?%s\n";
    equals ();
    rdi = search_str.12771;
    eax = equals ();
    if (eax == 0) {
        goto label_26;
    }
label_7:
    *(obj.c_token)++;
    goto label_5;
label_24:
    edi = command.c;
    rsi = loc__LC129;
    eax = equals ();
    if (eax == 0) {
        goto label_6;
    }
    eax = command.c;
    edi = rax + 1;
    *(obj.c_token) = edi;
    eax = equals ();
    if (eax == 0) {
        goto label_27;
    }
    rax = equals ();
    rdi = rax;
    rax = equals ();
label_10:
    if (rbp == 0) {
        goto label_28;
    }
    rdi = rbp;
    eax = equals ();
    rdx = rbp;
    edi = 1;
    eax = 0;
    rsi = "  Executing:\n\t%s\n";
    equals ();
    rdi = rbp;
    rax = equals ();
    rdi = rax;
    equals ();
    goto label_7;
label_25:
    edi = command.c;
    rsi = "q$uiet";
    eax = equals ();
    if (eax == 0) {
        goto label_8;
    }
    eax = command.c;
    r12d = 1;
    edi = rax + 1;
    *(obj.c_token) = edi;
    goto label_9;
label_27:
    esi = command.c;
    rdi = rsp;
    edx = esi;
    equals (0);
    rdi = *(rsp);
    rax = equals ();
    rdi = *(rsp);
    equals ();
    goto label_10;
label_22:
    eax = equals ();
label_28:
    edi = command.c;
    rsi = "not in history";
    eax = 0;
    equals ();
label_26:
    edi = command.c;
    rsi = "not in history";
    equals ();
    __asm ("endbr64");
    rax = *(fs:0x28);
    *((rsp + 8)) = rax;
    eax = 0;
    *(obj.c_token)++;
    rax = equals (rbx, rbp);
    rdi = rax;
    al = equals ();
    if (al != 0) {
        goto label_29;
    }
    edi = command.c;
    rsi = "{}\xe6\xb1\xa3\xe7\x95\xa1\xe6\x95\xb3\xe4\x9c\x80\xe5\x99\x90\xe4\xb1\x81\xe5\x8d\x9f\xe5\x8d\x99\xe4\x95\x94\xe5\xbd\x8d\xe5\x89\x85\xe4\xb9\x92O\xe5\x81\x87\xe4\x85\x96\xe5\xbd\x8c\xe5\xa5\x93\xe5\x91\x93\xe4\xb5\x85\xe4\x95\x9f\xe5\x89\x92\xe5\x8d\x8dG\xe7\x81\xa7\xe6\xa5\x9f\xe7\x81\xae\xe7\x91\xb5\xe6\xb1\x9f\xe6\xb9\xa9e\xe7\xa1\xa5\xe6\x95\xb4\xe6\x91\xae\xe6\xa4\xa0\xe7\x81\xae\xe7\x91\xb5\xe6\xb0\xa0\xe6\xb9\xa9e>\xe7\x8c\x80\xe7\x89\xb4\xe6\xb9\xa9";
    eax = equals ();
    if (eax == 0) {
        goto label_30;
    }
    rsi = rsp + 4;
    rdi = rsp;
    eax = _text ();
    edi = *(rsp);
    esi = *((rsp + 4));
    ebx = eax;
    rax = new_clause ();
    rdi = rbp;
    *(obj.clause_depth)++;
    *(obj.c_token)++;
    r12 = rax;
    *(obj.iteration_depth)++;
    al = equals ();
    if (al != 0) {
        goto label_31;
    }
label_11:
    rdi = r12;
    *(obj.requested_continue) = "variable";
    rax = equals ();
    rdi = rax;
    equals ();
    eax = command_exit_requested;
    if (eax == 0) {
        goto label_32;
    }
    *(obj.requested_break) = 1;
    do {
label_12:
        rdi = r12;
        *(obj.iteration_depth)--;
        equals ();
        equals ();
        rdi = rbp;
        *(obj.c_token) = ebx;
        equals ();
        *(obj.requested_break) = 0;
        *(obj.requested_continue) = "variable";
        rax = *((rsp + 8));
        rax ^= *(fs:0x28);
        if (*(obj.iteration_depth) != 0) {
            goto label_33;
        }
        return rax;
label_32:
    } while (*(obj.requested_break) != 0);
    rdi = rbp;
    al = equals ();
    if (al != 0) {
        goto label_11;
    }
    goto label_12;
label_31:
    rdi = rbp;
    al = equals ();
    if (al != 0) {
        goto label_11;
    }
    edx = 0x3b;
    *(r12) = dx;
    goto label_11;
label_33:
    equals ();
label_30:
    rdi = rbp;
    eax = equals ();
    edi = command.c;
    rsi = "expecting {do-clause}";
    eax = 0;
    equals ();
label_29:
    rdi = rbp;
    equals ();
    eax = command.c;
    rsi = "unbounded iteration not accepted here";
    edi = rax - 2;
    eax = 0;
    equals ();
    __asm ("endbr64");
    rax = *(fs:0x28);
    *((rsp + 0x18)) = rax;
    eax = 0;
    eax = command.c;
    ebx = rax + 1;
    *(obj.c_token) = ebx;
    equals (rbx, rbp);
    edi = command.c;
    rsi = "{}\xe6\xb1\xa3\xe7\x95\xa1\xe6\x95\xb3\xe4\x9c\x80\xe5\x99\x90\xe4\xb1\x81\xe5\x8d\x9f\xe5\x8d\x99\xe4\x95\x94\xe5\xbd\x8d\xe5\x89\x85\xe4\xb9\x92O\xe5\x81\x87\xe4\x85\x96\xe5\xbd\x8c\xe5\xa5\x93\xe5\x91\x93\xe4\xb5\x85\xe4\x95\x9f\xe5\x89\x92\xe5\x8d\x8dG\xe7\x81\xa7\xe6\xa5\x9f\xe7\x81\xae\xe7\x91\xb5\xe6\xb1\x9f\xe6\xb9\xa9e\xe7\xa1\xa5\xe6\x95\xb4\xe6\x91\xae\xe6\xa4\xa0\xe7\x81\xae\xe7\x91\xb5\xe6\xb0\xa0\xe6\xb9\xa9e>\xe7\x8c\x80\xe7\x89\xb4\xe6\xb9\xa9";
    *((rsp + 8)) = xmm0;
    eax = equals ();
    if (eax == 0) {
        goto label_34;
    }
    rsi = rsp + 0x14;
    rdi = rsp + 0x10;
    eax = _text ();
    esi = *((rsp + 0x14));
    edi = *((rsp + 0x10));
    r12d = eax;
    rax = new_clause ();
    xmm2 = *((rsp + 8));
    xmm3 = 0;
    *(obj.clause_depth)++;
    *(obj.c_token)++;
    eax = iteration_depth;
    __asm ("ucomisd xmm2, xmm3");
    edx = rax + 1;
    *(obj.iteration_depth) = edx;
    __asm ("jp 0x8004698");
    if (*(obj.c_token) == 0) {
        goto label_14;
    }
    do {
label_13:
        rdi = rbp;
        *(obj.requested_continue) = "variable";
        rax = equals ();
        rdi = rax;
        equals ();
        eax = command_exit_requested;
        if (eax != 0) {
            eax = iteration_depth;
            *(obj.requested_break) = 1;
            eax--;
label_14:
            *(obj.iteration_depth) = eax;
            equals ();
            rdi = rbp;
            equals ();
            *(obj.c_token) = r12d;
            *(obj.requested_break) = 0;
            *(obj.requested_continue) = "variable";
            rax = *((rsp + 0x18));
            rax ^= *(fs:0x28);
            if (eax != 0) {
                goto label_35;
            }
            return rax;
        }
        if (*(obj.requested_break) != 0) {
            goto label_36;
        }
        *(obj.c_token) = ebx;
        equals ();
        xmm1 = 0;
        __asm ("ucomisd xmm0, xmm1");
        __asm ("jp 0x8004698");
    } while (1);
    if (*(obj.requested_break) != 0) {
        goto label_13;
    }
label_36:
    eax = iteration_depth;
    eax--;
    goto label_14;
label_35:
    equals ();
label_34:
    edi = command.c;
    rsi = "expecting {while-clause}";
    equals ();
    __asm ("endbr64");
    *(obj.c_token)++;
    rax = equals ();
    if (rax != 0) {
        rdi = rax;
        void (*0x8004050)() ();
    }
    edi = command.c;
    rsi = "Expected command string";
    eax = 0;
    rax = equals ();
    __asm ("endbr64");
    rsi = "(,\xe7\x95\xa6\xe6\x8d\xae\xe6\xa5\xb4\xe6\xb9\xaf\xe6\x90\xa0\xe6\x99\xa5\xe6\xb9\xa9\xe7\x91\xa9\xe6\xbd\xa9";
    rax = *(fs:0x28);
    *((rsp + 0x28)) = rax;
    eax = 0;
    eax = command.c;
    edi = rax + 1;
    *(obj.c_token) = edi;
    eax = equals (rbx);
    if (eax == 0) {
        goto label_37;
    }
    equals ();
    edi = command.c;
    rsi = "{}\xe6\xb1\xa3\xe7\x95\xa1\xe6\x95\xb3\xe4\x9c\x80\xe5\x99\x90\xe4\xb1\x81\xe5\x8d\x9f\xe5\x8d\x99\xe4\x95\x94\xe5\xbd\x8d\xe5\x89\x85\xe4\xb9\x92O\xe5\x81\x87\xe4\x85\x96\xe5\xbd\x8c\xe5\xa5\x93\xe5\x91\x93\xe4\xb5\x85\xe4\x95\x9f\xe5\x89\x92\xe5\x8d\x8dG\xe7\x81\xa7\xe6\xa5\x9f\xe7\x81\xae\xe7\x91\xb5\xe6\xb1\x9f\xe6\xb9\xa9e\xe7\xa1\xa5\xe6\x95\xb4\xe6\x91\xae\xe6\xa4\xa0\xe7\x81\xae\xe7\x91\xb5\xe6\xb0\xa0\xe6\xb9\xa9e>\xe7\x8c\x80\xe7\x89\xb4\xe6\xb9\xa9";
    *((rsp + 8)) = xmm0;
    eax = equals ();
    if (eax != 0) {
        goto label_38;
    }
    eax = clause_depth;
    edi = command.c;
    if (eax > 0) {
        goto label_39;
    }
    *(loc..LC2)++;
    xmm1 = *((rsp + 8));
    __asm ("ucomisd xmm1, qword [loc..LC65]");
    rax = *(obj.c_token);
    __asm ("jp 0x80048c0");
    rbx = loc__LC18;
    if (*(loc..LC2) != 0) {
        goto label_40;
    }
    if (edi < eax) {
        goto label_15;
    }
    goto label_41;
    do {
        eax = command.c;
        edi = rax + 1;
        *(obj.c_token) = edi;
        if (edi >= *(obj.c_token)) {
            goto label_42;
        }
label_15:
        rsi = rbx;
        eax = equals ();
    } while (eax == 0);
    edi = command.c;
label_42:
    edi++;
    rsi = "else";
    *(obj.c_token) = edi;
    eax = equals ();
    if (eax != 0) {
        goto label_43;
    }
    edi = command.c;
    eax = command.c;
    if (edi < eax) {
        goto label_15;
    }
label_41:
    *(obj.c_token) = 0;
    *(obj.c_token) = 0;
    goto label_18;
label_40:
    rcx = command.c;
    rax *= 5;
    edx = *((rcx + rax*8 - 8));
    edx += *((rcx + rax*8 - 4));
    eax = rdi - 1;
    *(obj.c_token) = eax;
    rax = (int64_t) eax;
    rax *= 5;
    rax = rcx + rax*8;
    ecx = rdx + 2;
    rdx = (int64_t) edx;
    *((rax + 0x24)) = 1;
    *((rax + 0x20)) = ecx;
    rax = command.c;
    *((rax + rdx + 2)) = 0x3b;
    rax = command.c;
    *((rax + rdx + 3)) = 0;
    *(obj.if_condition) = 1;
    do {
label_18:
        rax = *((rsp + 0x28));
        rax ^= *(fs:0x28);
        if (edx != 0) {
            goto label_44;
        }
        return rax;
label_38:
        rsi = rsp + 0x1c;
        rdi = rsp + 0x18;
        *((rsp + 0x20)) = 0;
        *((rsp + 0x24)) = 0;
        eax = _text ();
        rsi = "else";
        edi = eax;
        *(obj.c_token) = eax;
        eax = equals ();
        ebx = command.c;
        if (eax != 0) {
            goto label_45;
        }
label_17:
        xmm2 = *((rsp + 8));
        __asm ("ucomisd xmm2, qword [loc..LC65]");
        eax = *((rsp + 0x20));
        __asm ("jp 0x80049c4");
        if (eax != 0) {
            goto label_46;
        }
        *(obj.if_condition) = 0;
        esi = *((rsp + 0x24));
        loc..LC0 = (eax == 0) ? 1 : 0;
        if (eax != 0) {
            goto label_47;
        }
label_16:
        if (*(obj.requested_continue) == 0) {
            if (*(obj.requested_break) == 0) {
                goto label_48;
            }
        }
        ebx = command.c;
label_48:
        *(obj.c_token) = ebx;
    } while (1);
label_46:
    *(obj.if_condition) = 1;
    edi = *((rsp + 0x18));
    esi = *((rsp + 0x1c));
    loc..LC0 = (eax == 0) ? 1 : 0;
    do {
        rax = new_clause ();
        *(obj.clause_depth)++;
        rdi = rax;
        *(obj.c_token)++;
        equals ();
        equals ();
        goto label_16;
label_45:
        eax = command.c;
        rsi = "{}\xe6\xb1\xa3\xe7\x95\xa1\xe6\x95\xb3\xe4\x9c\x80\xe5\x99\x90\xe4\xb1\x81\xe5\x8d\x9f\xe5\x8d\x99\xe4\x95\x94\xe5\xbd\x8d\xe5\x89\x85\xe4\xb9\x92O\xe5\x81\x87\xe4\x85\x96\xe5\xbd\x8c\xe5\xa5\x93\xe5\x91\x93\xe4\xb5\x85\xe4\x95\x9f\xe5\x89\x92\xe5\x8d\x8dG\xe7\x81\xa7\xe6\xa5\x9f\xe7\x81\xae\xe7\x91\xb5\xe6\xb1\x9f\xe6\xb9\xa9e\xe7\xa1\xa5\xe6\x95\xb4\xe6\x91\xae\xe6\xa4\xa0\xe7\x81\xae\xe7\x91\xb5\xe6\xb0\xa0\xe6\xb9\xa9e>\xe7\x8c\x80\xe7\x89\xb4\xe6\xb9\xa9";
        edi = rax + 1;
        *(obj.c_token) = edi;
        eax = equals ();
        if (eax == 0) {
            goto label_49;
        }
        rsi = rsp + 0x24;
        rdi = rsp + 0x20;
        eax = _text ();
        *(obj.c_token) = eax;
        ebx = eax;
        goto label_17;
label_43:
        *(obj.c_token)--;
        *(obj.if_condition) = 0;
        goto label_18;
label_47:
        edi = eax;
    } while (1);
label_49:
    edi = command.c;
    rsi = "expected {else-clause}";
    eax = equals ();
label_39:
    rsi = "Old-style if/else statement encountered inside brackets";
    eax = 0;
    equals ();
label_37:
    edi = command.c;
    rsi = "expecting (expression)";
    equals ();
label_44:
    equals ();
    __asm ("endbr64");
    rsi = "{}\xe6\xb1\xa3\xe7\x95\xa1\xe6\x95\xb3\xe4\x9c\x80\xe5\x99\x90\xe4\xb1\x81\xe5\x8d\x9f\xe5\x8d\x99\xe4\x95\x94\xe5\xbd\x8d\xe5\x89\x85\xe4\xb9\x92O\xe5\x81\x87\xe4\x85\x96\xe5\xbd\x8c\xe5\xa5\x93\xe5\x91\x93\xe4\xb5\x85\xe4\x95\x9f\xe5\x89\x92\xe5\x8d\x8dG\xe7\x81\xa7\xe6\xa5\x9f\xe7\x81\xae\xe7\x91\xb5\xe6\xb1\x9f\xe6\xb9\xa9e\xe7\xa1\xa5\xe6\x95\xb4\xe6\x91\xae\xe6\xa4\xa0\xe7\x81\xae\xe7\x91\xb5\xe6\xb0\xa0\xe6\xb9\xa9e>\xe7\x8c\x80\xe7\x89\xb4\xe6\xb9\xa9";
    rax = *(fs:0x28);
    *((rsp + 8)) = rax;
    eax = 0;
    eax = command.c;
    edi = rax + 1;
    eax = equals (rbx);
    if (eax != 0) {
        edi = command.c;
        if (*(loc..LC0) == 0) {
            goto label_50;
        }
        edi++;
        rsi = rsp + 4;
        *(loc..LC0) = "{}\xe6\xb1\xa3\xe7\x95\xa1\xe6\x95\xb3\xe4\x9c\x80\xe5\x99\x90\xe4\xb1\x81\xe5\x8d\x9f\xe5\x8d\x99\xe4\x95\x94\xe5\xbd\x8d\xe5\x89\x85\xe4\xb9\x92O\xe5\x81\x87\xe4\x85\x96\xe5\xbd\x8c\xe5\xa5\x93\xe5\x91\x93\xe4\xb5\x85\xe4\x95\x9f\xe5\x89\x92\xe5\x8d\x8dG\xe7\x81\xa7\xe6\xa5\x9f\xe7\x81\xae\xe7\x91\xb5\xe6\xb1\x9f\xe6\xb9\xa9e\xe7\xa1\xa5\xe6\x95\xb4\xe6\x91\xae\xe6\xa4\xa0\xe7\x81\xae\xe7\x91\xb5\xe6\xb0\xa0\xe6\xb9\xa9e>\xe7\x8c\x80\xe7\x89\xb4\xe6\xb9\xa9";
        *(obj.c_token) = edi;
        rdi = rsp;
        eax = _text ();
        ebx = eax;
        if (*(obj.if_condition) == 0) {
            goto label_51;
        }
label_19:
        if (*(obj.requested_continue) == 0) {
            if (*(obj.requested_break) == 0) {
                goto label_52;
            }
        }
        ebx = command.c;
label_52:
        *(obj.c_token) = ebx;
    } else {
        eax = *(loc..LC2);
        if (eax <= 0) {
            goto label_53;
        }
        eax--;
        *(loc..LC2) = eax;
        if (*(obj.if_condition) == 0) {
            goto label_54;
        }
        *(obj.c_token) = 0;
        *(obj.c_token) = 0;
    }
    do {
        rax = *((rsp + 8));
        rax ^= *(fs:0x28);
        if (*(obj.if_condition) != 0) {
            goto label_55;
        }
        return rax;
label_54:
        rax = *(obj.c_token);
        rcx = command.c;
        rdx = rax * 5;
        rax = command.c;
        rdx = rax + rdx*8;
        eax = *((rdx + 0x20));
        *((rdx + 0x24)) = 1;
        rdx = (int64_t) eax;
        *((rcx + rdx)) = 0x3b;
        edx = rax + 1;
        rcx = command.c;
        rdx = (int64_t) edx;
        *((rcx + rdx)) = 0x20;
        edx = rax + 2;
        rcx = command.c;
        eax += 3;
        rdx = (int64_t) edx;
        rax = (int64_t) eax;
        *((rcx + rdx)) = 0x20;
        rdx = command.c;
        *((rdx + rax)) = 0x20;
        *(obj.if_condition) = 1;
    } while (1);
label_51:
    esi = *((rsp + 4));
    edi = *(rsp);
    rax = new_clause ();
    *(obj.clause_depth)++;
    rdi = rax;
    *(obj.c_token)++;
    equals ();
    eax = equals ();
    goto label_19;
label_53:
    edi = command.c;
    rsi = "else without if";
    eax = 0;
    eax = equals ();
label_50:
    rsi = "Invalid {else-clause}";
    eax = 0;
    equals ();
label_55:
    equals ();
    __asm ("endbr64");
    r14 = rsi;
    equals (rbx, rbp, r12, r13, r14);
    rsi = loc__LC40;
    rdi = rbp;
    rax = equals ();
    if (rax == 0) {
        goto label_56;
    }
    edi = 0x400;
    r12 = rax;
    r15d = 0;
    ebx = 0x400;
    rsi = "do_system_func";
    r13 = "extend in do_system_func";
    equals ();
    *(rax) = 0;
    while (ebx != eax) {
label_20:
        r15++;
        rdi = r12;
        eax = equals ();
        rdx = rbp + r15;
        if (eax == 0xffffffff) {
            goto label_57;
        }
        *(rdx) = al;
        eax = r15 + 1;
    }
    if (ebx <= 0xfffff) {
        ebx = r15 + 0x401;
        rdi = rbp;
        rdx = r13;
        rsi = (int64_t) ebx;
        rax = equals ();
        goto label_20;
    }
    rsi = "*very* long system call output has been truncated";
    edi = 0xffffffff;
    eax = 0;
    *((rsp + 8)) = rdx;
    equals ();
    rdx = *((rsp + 8));
label_57:
    *(rdx) = 0;
    rdi = r12;
    eax = equals ();
    edi = eax;
    eax = report_error ();
    rdi = rbp;
    r12d = eax;
    equals ();
    rdi = rbp;
    rdx = "do_system_func";
    rsi = rax + 1;
    rax = equals ();
    *(r14) = rax;
    eax = r12d;
    return rax;
label_56:
    rsi = "popen failed";
    edi |= 0xffffffff;
    eax = 0;
    return equals ();
}
   p p pd pd pdg pdg pdg  pdg  pdg @ pdg @ pdg @  pdg @  pdg @ s pdg @ s pdg @ sy pdg @ sy pdg @ sym pdg @ sym pdg @ sym. pdg @ sym. pdg @ sym.e pdg @ sym.e pdg @ sym.ex pdg @ sym.ex pdg @ sym.exp pdg @ sym.exp pdg @ sym.expa pdg @ sym.expa pdg @ sym.expan pdg @ sym.expan pdg @ sym.expand pdg @ sym.expand pdg @ sym.expand_ pdg @ sym.expand_ pdg @ sym.expand_1 pdg @ sym.expand_1 pdg @ sym.expand_1l pdg @ sym.expand_1l pdg @ sym.expand_1le pdg @ sym.expand_1le pdg @ sym.expand_1lev pdg @ sym.expand_1lev pdg @ sym.expand_1leve pdg @ sym.expand_1leve pdg @ sym.expand_1level pdg @ sym.expand_1level pdg @ sym.expand_1level_ pdg @ sym.expand_1level_ pdg @ sym.expand_1level_m pdg @ sym.expand_1level_m pdg @ sym.expand_1level_ma pdg @ sym.expand_1level_ma pdg @ sym.expand_1level_mac pdg @ sym.expand_1level_mac pdg @ sym.expand_1level_macr pdg @ sym.expand_1level_macr pdg @ sym.expand_1level_macro pdg @ sym.expand_1level_macro pdg @ sym.expand_1level_macros pdg @ sym.expand_1level_macros
int32_t sym.expand_1level_macros(void)
{
    uint8_t *puVar1;
    uint16_t uVar2;
    char *pcVar3;
    bool bVar4;
    bool bVar5;
    uint8_t uVar6;
    bool bVar7;
    char cVar8;
    int32_t iVar9;
    int64_t iVar10;
    undefined8 uVar11;
    uint8_t *puVar12;
    uint64_t uVar13;
    int64_t *piVar14;
    int64_t iVar15;
    int32_t iVar16;
    uint64_t uVar17;
    uint8_t *puVar18;
    uint8_t uVar19;
    int32_t iStack64;
    
    iVar10 = func_0x080405e1(_segment.ehdr, 0x40);
    iStack64 = 0;
    if (iVar10 != 0) {
        uVar11 = func_0x080405e1(_segment.ehdr, reloc..LC10);
        uVar13 = _segment.ehdr;
        iVar9 = func_0x080405e1(_segment.ehdr);
        uVar17 = SEXT48(iVar9);
        if (_segment.ehdr <= uVar17) {
            iVar9 = (int32_t)_segment.ehdr + -1;
            uVar17 = SEXT48(iVar9);
        }
        puVar12 = (uint8_t *)func_0x080405e1(uVar11, uVar13, uVar17);
        puVar12[uVar17] = 0;
        if (iVar9 == 0) {
            iStack64 = 0;
            iVar10 = 0;
        } else {
            uVar13 = 0;
            bVar4 = false;
            iVar16 = 0;
            iStack64 = 0;
            uVar6 = 0;
            bVar5 = false;
            bVar7 = false;
            puVar18 = puVar12;
            while( true ) {
                uVar19 = *puVar18;
                iVar10 = (int64_t)iVar16;
                if (uVar19 == 0) break;
                puVar1 = puVar18 + 1;
                if (uVar19 == 0x27) {
                    iVar16 = iVar16 + 1;
                    bVar7 = (bool)(bVar7 ^ 1);
                    bVar4 = false;
                    *(undefined *)(_segment.ehdr + iVar10) = 0x27;
                    iVar10 = (int64_t)iVar16;
                    puVar18 = puVar1;
                } else {
                    if ((char)uVar19 < '(') {
                        if (uVar19 == 0x22) {
                            if (!bVar4) {
                                bVar5 = (bool)(bVar5 ^ 1);
                            }
                            iVar16 = iVar16 + 1;
                            bVar4 = false;
                            *(undefined *)(_segment.ehdr + iVar10) = 0x22;
                            iVar10 = (int64_t)iVar16;
                            puVar18 = puVar1;
                        } else {
                            if (((uVar19 == 0x23) && (!bVar7)) && (!bVar5)) {
                                uVar6 = 1;
                            }
code_r0x0800072d:
                            iVar16 = iVar16 + 1;
                            bVar4 = false;
                            *(uint8_t *)(_segment.ehdr + iVar10) = uVar19;
                            iVar10 = (int64_t)iVar16;
                            puVar18 = puVar1;
                        }
                    } else {
                        if (uVar19 == 0x40) {
                            if (!(bool)(bVar7 | uVar6 | bVar5)) {
                                piVar14 = (int64_t *)func_0x080405e1();
                                uVar19 = puVar18[1];
                                uVar2 = *(uint16_t *)(*piVar14 + (uint64_t)uVar19 * 2);
                                if ((uVar2 & 0x400) != 0) {
                                    puVar18 = puVar1;
                                    if ((uVar2 & 8) == 0) goto code_r0x080008d9;
                                    do {
                                        do {
                                            uVar19 = puVar18[1];
                                            puVar18 = puVar18 + 1;
                                        } while ((*(uint8_t *)(*piVar14 + (uint64_t)uVar19 * 2) & 8) != 0);
code_r0x080008d9:
                                    } while (uVar19 == 0x5f);
                                    *puVar18 = 0;
                                    iVar15 = func_0x080405e1(puVar1);
                                    if ((iVar15 == 0) || (*(int32_t *)(iVar15 + 0x10) != 3)) {
                                        func_0x080405e1(0xffffffff, "", puVar1);
                                    } else {
                                        pcVar3 = *(char **)(iVar15 + 0x18);
                                        iStack64 = iStack64 + 1;
                                        while (iVar15 = func_0x080405e1(),
                                              _segment.ehdr < iVar15 + ((int64_t)iVar9 - uVar13) + iVar10) {
                                            func_0x080405e1();
                                        }
                                        cVar8 = *pcVar3;
                                        if (cVar8 != '\0') {
                                            iVar15 = iVar10;
                                            do {
                                                iVar16 = (int32_t)iVar15 + 1;
                                                *(char *)(_segment.ehdr + iVar15) = cVar8;
                                                iVar15 = iVar15 + 1;
                                                cVar8 = pcVar3[iVar15 - iVar10];
                                            } while (cVar8 != '\0');
                                            iVar10 = (int64_t)iVar16;
                                        }
                                    }
                                    *puVar18 = uVar19;
                                    uVar6 = 0;
                                    bVar5 = false;
                                    bVar7 = false;
                                    goto joined_r0x0800074b;
                                }
                            }
                            iVar16 = iVar16 + 1;
                            bVar4 = false;
                            *(undefined *)(_segment.ehdr + iVar10) = 0x40;
                            iVar10 = (int64_t)iVar16;
                            puVar18 = puVar1;
                        } else {
                            if (uVar19 != 0x5c) goto code_r0x0800072d;
                            if (bVar5) {
                                bVar4 = (bool)(bVar4 ^ 1);
                            }
                            iVar16 = iVar16 + 1;
                            *(undefined *)(_segment.ehdr + iVar10) = 0x5c;
                            iVar10 = (int64_t)iVar16;
                            puVar18 = puVar1;
                        }
                    }
                }
joined_r0x0800074b:
                if (iVar9 - 1 == uVar13) break;
                uVar13 = uVar13 + 1;
            }
        }
        *(undefined *)(_segment.ehdr + iVar10) = 0;
        func_0x080405e1(puVar12);
    }
    return iStack64;
}


