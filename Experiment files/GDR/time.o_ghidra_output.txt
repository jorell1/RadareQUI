int32_t sym.gdysize.part.0(uint32_t arg1)
{
    int32_t iVar1;
    uint32_t uVar2;
    
    // [01] -r-x section size 8077 named .text
    iVar1 = 0x16e;
    uVar2 = arg1 * -0x3d70a3d7 + 0x51eb850;
    if ((uVar2 >> 2 | arg1 * 0x40000000) < 0x28f5c29) {
        iVar1 = ((uVar2 >> 4 | arg1 * -0x70000000) < 0xa3d70b) + 0x16d;
    }
    return iVar1;
}


// WARNING: Type propagation algorithm not settling

uint64_t sym.xstrftime(int64_t arg7, int64_t arg8, undefined8 placeholder_2, double placeholder_3, double placeholder_4,
                      double placeholder_5, double placeholder_6, double placeholder_7, int64_t arg1, int64_t arg2,
                      int64_t arg3, int64_t arg4)
{
    int32_t iVar1;
    bool bVar2;
    uint8_t uVar3;
    int32_t iVar4;
    uint32_t uVar5;
    code *pcVar6;
    uint64_t uVar7;
    uint64_t uVar8;
    int32_t iVar9;
    uint8_t *puVar10;
    undefined2 *puVar11;
    int32_t iVar12;
    int64_t iVar13;
    char *pcVar14;
    uint64_t in_R9;
    uint64_t uVar15;
    int32_t iVar16;
    uint64_t uVar17;
    bool bVar18;
    double extraout_XMM0_Qa;
    double extraout_XMM0_Qa_00;
    double dVar19;
    double dVar20;
    undefined auVar21 [16];
    undefined auVar22 [16];
    double dVar23;
    double dVar24;
    undefined8 placeholder_2_00;
    double dVar25;
    double dVar26;
    undefined8 in_XMM2_Qb;
    double dStack104;
    double dStack96;
    
    auVar21 = CONCAT88(in_XMM2_Qb, placeholder_2);
    iVar12 = (int32_t)arg2;
    if (iVar12 < 1) {
        return 0;
    }
    uVar15 = SEXT48(iVar12);
    func_0x08011ff0(arg7, arg8, placeholder_2, arg1, 0, uVar15);
    uVar3 = *(uint8_t *)arg3;
    if (uVar3 == 0) {
        return 0;
    }
    bVar2 = false;
    uVar17 = 0;
    dStack104 = (double)arg8;
    dStack96 = (double)arg7;
    do {
        dVar23 = dStack96;
        dVar20 = _reloc..LC20;
        if (uVar3 != 0x25) {
            if ((uint64_t)(int64_t)(iVar12 + -1) <= uVar17) {
                return 0;
            }
            *(uint8_t *)arg1 = uVar3;
            arg3 = arg3 + 1;
            uVar17 = uVar17 + 1;
            arg1 = arg1 + 1;
            goto code_r0x080002a6;
        }
        uVar3 = *(uint8_t *)(arg3 + 1);
        puVar10 = (uint8_t *)(arg3 + 1);
        bVar18 = uVar3 == 0x30;
        if (bVar18) {
            uVar3 = *(uint8_t *)(arg3 + 2);
            puVar10 = (uint8_t *)(arg3 + 2);
        }
        uVar8 = 0;
        while (iVar4 = (int32_t)uVar8, (uint8_t)(uVar3 - 0x30) < 10) {
            puVar10 = puVar10 + 1;
            uVar8 = (uint64_t)(uint32_t)((char)uVar3 + -0x30 + iVar4 * 10);
            uVar3 = *puVar10;
        }
        arg3 = (int64_t)(puVar10 + 1);
        if (uVar3 == 0x2e) {
            uVar5 = SEXT14((char)puVar10[1]);
            if ((uint8_t)(puVar10[1] - 0x30) < 10) {
                iVar9 = 0;
                do {
                    arg3 = arg3 + 1;
                    iVar9 = (uVar5 - 0x30) + iVar9 * 10;
                    uVar5 = SEXT14((char)*(uint8_t *)arg3);
                } while ((uint8_t)(*(uint8_t *)arg3 - 0x30) < 10);
                puVar10 = (uint8_t *)arg3;
                if (6 < iVar9) {
                    iVar9 = 6;
                }
            } else {
                iVar9 = 0;
                puVar10 = (uint8_t *)arg3;
            }
            arg3 = (int64_t)(puVar10 + 1);
        } else {
            uVar5 = (uint32_t)*puVar10;
            iVar9 = 0;
        }
        placeholder_2_00 = SUB168(auVar21, 0);
        iVar16 = (int32_t)uVar17;
    // switch table (85 cases) at 0x80020a0
        switch(uVar5 - 0x25 & 0xff) {
        case 0:
            if (uVar15 < uVar17 + 1) {
                return 0;
            }
            *(uint8_t *)arg1 = 0x25;
            puVar11 = (undefined2 *)arg1;
            goto code_r0x08000460;
        default:
            goto code_r0x08000448;
        case 0x1c:
            iVar4 = *(int32_t *)(arg4 + 0x18);
            pcVar6 = reloc.full_day_names;
            goto code_r0x0800082b;
        case 0x1d:
            iVar4 = *(int32_t *)(arg4 + 0x10);
            pcVar6 = reloc.full_month_names;
code_r0x0800082b:
            pcVar6 = pcVar6 + (int64_t)iVar4 * 0x20;
            goto code_r0x0800054a;
        case 0x1f:
            iVar13 = sym.xstrftime(0, (int64_t)dStack104, placeholder_2_00, placeholder_3, placeholder_4, placeholder_5
                                   , placeholder_6, placeholder_7, arg1, (uint64_t)(uint32_t)(iVar12 - iVar16), 
                                   (int64_t)"%m/%d/%y", arg4);
            goto joined_r0x0800067f;
        case 0x21:
            iVar13 = sym.xstrftime(0, (int64_t)dStack104, placeholder_2_00, placeholder_3, placeholder_4, placeholder_5
                                   , placeholder_6, placeholder_7, arg1, (uint64_t)(uint32_t)(iVar12 - iVar16), 
                                   (int64_t)"%Y-%m-%d", arg4);
            goto joined_r0x0800067f;
        case 0x23:
            iVar9 = *(int32_t *)(arg4 + 8);
            break;
        case 0x24:
            iVar9 = (*(int32_t *)(arg4 + 8) + 0xb) % 0xc + 1;
            break;
        case 0x28:
            iVar9 = *(int32_t *)(arg4 + 4);
            break;
        case 0x2d:
            iVar13 = sym.xstrftime(0, (int64_t)dStack104, placeholder_2_00, placeholder_3, placeholder_4, placeholder_5
                                   , placeholder_6, placeholder_7, arg1, (uint64_t)(uint32_t)(iVar12 - iVar16), 
                                   (int64_t)"%H:%M", arg4);
            goto joined_r0x0800067f;
        case 0x2e:
            if (iVar4 == 0) {
                uVar8 = 2;
                pcVar14 = "%0*d";
            } else {
                pcVar14 = "%0*d";
                if (!bVar18) {
                    pcVar14 = (char *)reloc..LC7;
                }
            }
            iVar4 = func_0x08011ff0(arg1, (uVar15 - 1) - uVar17, 1, 0xffffffffffffffff, pcVar14, uVar8, 
                                    *(undefined4 *)arg4);
            if (uVar15 < (int64_t)iVar4 + uVar17) {
                return 0;
            }
            in_R9 = uVar8;
            if (iVar9 != 0) {
                func_0x08011ff0(_reloc..LC18, (double)iVar9);
                placeholder_4 = dStack96 * extraout_XMM0_Qa + _reloc..LC19;
                dVar23 = (double)((uint64_t)placeholder_4 & (uint64_t)_reloc..LC21);
                placeholder_3 = _reloc..LC21;
                placeholder_5 = _reloc..LC20;
                dVar20 = placeholder_4;
                if (dVar23 < _reloc..LC20) {
                    placeholder_3 = (double)(~(uint64_t)_reloc..LC21 & (uint64_t)placeholder_4);
                    dVar23 = (double)(int64_t)placeholder_4 -
                             (double)(-(uint64_t)(placeholder_4 < (double)(int64_t)placeholder_4) &
                                     (uint64_t)_reloc..LC3);
                    auVar21 = orpd(ZEXT816((uint64_t)dVar23), ZEXT816((uint64_t)placeholder_3));
                    dVar20 = SUB168(auVar21, 0);
                    placeholder_5 = _reloc..LC3;
                }
                auVar21 = ZEXT816((uint64_t)dVar23);
                iVar13 = func_0x08011ff0(arg1);
                iVar13 = arg1 + iVar13;
                uVar8 = (int64_t)(iVar9 + 1) + uVar17;
                dVar23 = extraout_XMM0_Qa;
joined_r0x08000e0d:
                if (uVar15 < uVar8) {
                    return 0;
                }
                uVar5 = (int32_t)dVar23 - 1;
                if ((int32_t)dVar20 < (int32_t)dVar23) {
                    uVar5 = (int32_t)dVar20;
                }
                in_R9 = (uint64_t)uVar5;
                func_0x08011ff0(iVar13, 1, 0xffffffffffffffff, ".%0*d", iVar9, in_R9);
            }
            goto code_r0x08000448;
        case 0x2f:
            iVar13 = sym.xstrftime(0, (int64_t)dStack104, placeholder_2_00, placeholder_3, placeholder_4, placeholder_5
                                   , placeholder_6, placeholder_7, arg1, (uint64_t)(uint32_t)(iVar12 - iVar16), 
                                   (int64_t)"%H:%M:%S", arg4);
            goto joined_r0x0800067f;
        case 0x30:
            iVar16 = *(int32_t *)(arg4 + 0x1c);
            iVar9 = *(int32_t *)(arg4 + 0x18);
            if (iVar9 < iVar16) {
                uVar5 = (iVar16 - iVar9) + 6;
                if (iVar9 < 0) {
                    uVar5 = (iVar16 - iVar9) - 1;
                }
                iVar9 = uVar5 / 7 + (uint32_t)(1 < uVar5 % 7);
            } else {
                iVar9 = 1;
                if (4 < *(int32_t *)(arg4 + 0xc) - iVar16) {
                    iVar9 = 0x34;
                }
            }
            if (iVar4 == 0) {
                uVar8 = 2;
                pcVar14 = "%0*d";
            } else {
                pcVar14 = "%0*d";
                if (!bVar18) {
                    pcVar14 = (char *)reloc..LC7;
                }
            }
            uVar5 = (uint32_t)uVar8;
            iVar13 = (uVar15 - 1) - uVar17;
            goto code_r0x080004bb;
        case 0x32:
            iVar16 = *(int32_t *)(arg4 + 0x1c);
            iVar1 = *(int32_t *)(arg4 + 0x18);
            if (iVar1 < iVar16) {
                uVar5 = iVar16 - iVar1;
                if (0 < iVar1) {
                    uVar5 = (iVar16 - iVar1) + 7;
                }
                iVar9 = uVar5 / 7 + (uint32_t)(2 < uVar5 % 7);
            } else {
                iVar9 = 1;
                if (4 < *(int32_t *)(arg4 + 0xc) - iVar16) {
                    iVar9 = 0x34;
                }
                if ((iVar1 == 0) && (iVar16 == 0)) {
                    iVar9 = 0x34;
                }
            }
            break;
        case 0x34:
            iVar9 = *(int32_t *)(arg4 + 0x14);
            if (iVar4 == 0) {
                uVar8 = 4;
                pcVar14 = "%0*d";
                goto code_r0x080004ae;
            }
            goto code_r0x0800049a;
        case 0x3c:
            pcVar6 = reloc.abbrev_day_names + (int64_t)*(int32_t *)(arg4 + 0x18) * 8;
            goto code_r0x0800054a;
        case 0x3d:
        case 0x43:
            pcVar6 = reloc.abbrev_month_names + (int64_t)*(int32_t *)(arg4 + 0x10) * 8;
code_r0x0800054a:
            iVar13 = func_0x08011ff0(pcVar6);
            if (uVar15 < iVar13 + uVar17) {
                return 0;
            }
            func_0x08011ff0(arg1, pcVar6, iVar13 + 1);
            goto code_r0x08000448;
        case 0x3f:
            iVar9 = *(int32_t *)(arg4 + 0xc);
            break;
        case 0x45:
            iVar9 = *(int32_t *)(arg4 + 0x1c) + 1;
            if (iVar4 != 0) goto code_r0x0800049a;
            uVar8 = 3;
            pcVar14 = "%0*d";
            goto code_r0x080004ae;
        case 0x46:
            iVar9 = *(int32_t *)(arg4 + 8);
            goto joined_r0x0800060b;
        case 0x47:
            iVar9 = (*(int32_t *)(arg4 + 8) + 0xb) % 0xc + 1;
joined_r0x0800060b:
            if (iVar4 != 0) goto code_r0x0800049a;
            pcVar14 = "%0*d";
            uVar8 = 2;
            if (!bVar18) {
                pcVar14 = (char *)reloc..LC7;
            }
            goto code_r0x080004ae;
        case 0x48:
            iVar9 = *(int32_t *)(arg4 + 0x10) + 1;
            break;
        case 0x4b:
            if (uVar15 < uVar17 + 2) {
                return 0;
            }
            pcVar6 = reloc..LC8;
            if (0xb < *(int32_t *)(arg4 + 8)) {
                pcVar6 = reloc..LC9;
            }
            uVar3 = *(uint8_t *)((int64_t)pcVar6 + 2);
            *(undefined2 *)arg1 = *(undefined2 *)pcVar6;
            *(uint8_t *)(arg1 + 2) = uVar3;
            goto code_r0x08000448;
        case 0x4d:
            iVar13 = sym.xstrftime(0, (int64_t)dStack104, placeholder_2_00, placeholder_3, placeholder_4, placeholder_5
                                   , placeholder_6, placeholder_7, arg1, (uint64_t)(uint32_t)(iVar12 - iVar16), 
                                   (int64_t)"%I:%M:%S %p", arg4);
joined_r0x0800067f:
            if (iVar13 == 0) {
                return 0;
            }
            goto code_r0x08000448;
        case 0x4e:
            if (uVar15 < uVar17 + 0xc) {
                return 0;
            }
            func_0x08011ff0(arg4);
            func_0x08011ff0(arg1, 1, 0xffffffffffffffff);
            goto code_r0x08000448;
        case 0x4f:
            uVar3 = puVar10[1];
            uVar7 = 0;
            arg3 = (int64_t)(puVar10 + 2);
            if (uVar3 != 0x4d) {
                if (uVar3 == 0x53) {
                    dVar24 = (double)((uint64_t)dStack104 & (uint64_t)_reloc..LC21);
                    dVar26 = (double)(_reloc..LC25 & (uint64_t)dVar24);
                    auVar21 = ZEXT816((uint64_t)dVar26);
                    dVar25 = dVar24;
                    if (dVar26 < _reloc..LC20) {
                        uVar7 = (uint64_t)dVar24;
                        placeholder_5 = (double)(~_reloc..LC25 & (uint64_t)dVar24);
                        auVar22 = orpd(ZEXT816((uint64_t)(double)uVar7), ZEXT816((uint64_t)placeholder_5));
                        dVar25 = SUB168(auVar22, 0);
                    }
                    dVar19 = 0.00000000;
                    if (dStack104 < 0.00000000) {
                        dVar19 = 0.00000000;
                        if (0.00000000 < dStack96) {
                            dVar19 = _reloc..LC3 - dStack96;
                            dStack96 = dVar19;
                        }
                        placeholder_6 = dVar23;
                        if (!bVar2) {
                            *(uint8_t *)arg1 = 0x2d;
                            uVar17 = uVar17 + 1;
                            arg1 = arg1 + 1;
                        }
                    }
                    if (iVar4 == 0) {
                        uVar8 = 2;
                        pcVar14 = "%0*d";
                    } else {
                        pcVar14 = "%0*d";
                        if (!bVar18) {
                            pcVar14 = (char *)reloc..LC7;
                        }
                    }
                    iVar4 = func_0x08011ff0(dVar19, dVar24, dVar26, arg1, (uVar15 - 1) - uVar17, 1, 0xffffffffffffffff, 
                                            pcVar14, uVar8, 
                                            uVar7 & 0xffffffff00000000 | (uint64_t)(uint32_t)(int32_t)dVar25);
                    if (uVar15 < (int64_t)iVar4 + uVar17) {
                        return 0;
                    }
                    in_R9 = uVar8;
                    placeholder_7 = dVar20;
                    if (iVar9 != 0) {
                        func_0x08011ff0(_reloc..LC18, (double)iVar9);
                        placeholder_3 = dStack96 * extraout_XMM0_Qa_00 + _reloc..LC19;
                        auVar21 = ZEXT816(_reloc..LC25 & (uint64_t)placeholder_3);
                        placeholder_7 = _reloc..LC20;
                        dVar20 = placeholder_3;
                        if ((double)(_reloc..LC25 & (uint64_t)placeholder_3) < _reloc..LC20) {
                            placeholder_7 = (double)-(uint64_t)(placeholder_3 < (double)(int64_t)placeholder_3);
                            auVar21 = CONCAT88(0xffffffffffffffff, ~_reloc..LC25 & (uint64_t)placeholder_3) &
                                      (undefined  [16])0xffffffffffffffff;
                            auVar22 = orpd(ZEXT816((uint64_t)
                                                   ((double)(int64_t)placeholder_3 -
                                                   (double)((uint64_t)placeholder_7 & (uint64_t)_reloc..LC3))), auVar21)
                            ;
                            dVar20 = SUB168(auVar22, 0);
                            placeholder_4 = _reloc..LC3;
                        }
                        iVar13 = func_0x08011ff0(dVar20, extraout_XMM0_Qa_00, SUB168(auVar21, 0), arg1);
                        iVar13 = arg1 + iVar13;
                        uVar8 = (int64_t)(iVar9 + 1) + uVar17;
                        dVar23 = extraout_XMM0_Qa_00;
                        goto joined_r0x08000e0d;
                    }
                } else {
                    if (uVar3 == 0x48) {
                        if (iVar9 != 0) {
                            iVar13 = (uVar15 - 1) - uVar17;
                            dVar20 = dStack104 / _reloc..LC11;
                            goto code_r0x08000c66;
                        }
                        if (dStack104 < 0.00000000) {
                            uVar17 = uVar17 + 1;
                            if (uVar15 < uVar17) {
                                return 0;
                            }
                            *(uint8_t *)arg1 = 0x2d;
                            arg1 = arg1 + 1;
                        }
                        placeholder_3 = (double)((uint64_t)(dStack104 / _reloc..LC11) & (uint64_t)_reloc..LC21);
                        placeholder_4 = (double)((uint64_t)placeholder_3 & (uint64_t)_reloc..LC21);
                        dVar20 = placeholder_3;
                        dVar23 = _reloc..LC21;
                        if (placeholder_4 < _reloc..LC20) {
                            dVar23 = (double)(~(uint64_t)_reloc..LC21 & (uint64_t)placeholder_3);
                            auVar21 = orpd(ZEXT816((uint64_t)(double)(int64_t)placeholder_3), ZEXT816((uint64_t)dVar23))
                            ;
                            dVar20 = SUB168(auVar21, 0);
                        }
                        in_R9 = in_R9 & 0xffffffff00000000 | (uint64_t)(uint32_t)(int32_t)dVar20;
                        placeholder_5 = _reloc..LC20;
                        func_0x08011ff0(dVar20, dVar23, 0, arg1, 1, 0xffffffffffffffff, "%0*d", uVar8, in_R9);
                        auVar21 = ZEXT816(0);
                        dVar23 = _reloc..LC11;
                        if (dStack104 <= 0.00000000) {
                            dVar23 = (double)(_reloc..LC10 & -(uint64_t)(dStack104 < 0.00000000));
                        }
                        bVar2 = true;
                        placeholder_6 = dStack104 - dVar20 * dVar23;
                        dStack104 = placeholder_6;
                    }
                }
                goto code_r0x08000448;
            }
            if (iVar9 == 0) {
                dVar25 = (double)((uint64_t)(dStack104 / _reloc..LC5) & (uint64_t)_reloc..LC21);
                placeholder_3 = (double)((uint64_t)dVar25 & (uint64_t)_reloc..LC21);
                dVar23 = _reloc..LC21;
                if (placeholder_3 < _reloc..LC20) {
                    uVar7 = (uint64_t)dVar25;
                    dVar23 = (double)(~(uint64_t)_reloc..LC21 & (uint64_t)dVar25);
                    auVar21 = orpd(ZEXT816((uint64_t)(double)uVar7), ZEXT816((uint64_t)dVar23));
                    dVar25 = SUB168(auVar21, 0);
                }
                if ((dStack104 < 0.00000000) && (!bVar2)) {
                    *(uint8_t *)arg1 = 0x2d;
                    uVar17 = uVar17 + 1;
                    arg1 = arg1 + 1;
                }
                if (iVar4 == 0) {
                    uVar8 = 2;
                    pcVar14 = "%0*d";
                } else {
                    pcVar14 = "%0*d";
                    if (!bVar18) {
                        pcVar14 = (char *)reloc..LC7;
                    }
                }
                iVar4 = func_0x08011ff0(dVar25, dVar23, 0, arg1, (uVar15 - 1) - uVar17, 1, 0xffffffffffffffff, pcVar14, 
                                        uVar8, uVar7 & 0xffffffff00000000 | (uint64_t)(uint32_t)(int32_t)dVar25);
                if (uVar15 < (int64_t)iVar4 + uVar17) {
                    return 0;
                }
                auVar21 = ZEXT816(0);
                dVar23 = _reloc..LC5;
                if (dStack104 <= 0.00000000) {
                    dVar23 = (double)(_reloc..LC12 & -(uint64_t)(dStack104 < 0.00000000));
                }
                bVar2 = true;
                placeholder_7 = dStack104 - dVar25 * dVar23;
                in_R9 = 0;
                placeholder_4 = dVar20;
                dStack104 = placeholder_7;
                goto code_r0x08000448;
            }
            dVar20 = dStack104;
            if (bVar2) {
                dVar20 = (double)((uint64_t)dStack104 & (uint64_t)_reloc..LC21);
            }
            dVar20 = dVar20 / _reloc..LC5;
            iVar13 = (uVar15 - 1) - uVar17;
code_r0x08000c66:
            iVar4 = func_0x08011ff0(dVar20, arg1, iVar13, 1, 0xffffffffffffffff, "%*.*f", uVar8, iVar9);
            goto code_r0x080004d4;
        case 0x52:
            iVar9 = *(int32_t *)(arg4 + 0x18);
            break;
        case 0x54:
            iVar9 = *(int32_t *)(arg4 + 0x14) % 100;
        }
        if (iVar4 == 0) {
            uVar8 = 2;
            pcVar14 = "%0*d";
        } else {
code_r0x0800049a:
            pcVar14 = "%0*d";
            if (!bVar18) {
                pcVar14 = (char *)reloc..LC7;
            }
        }
code_r0x080004ae:
        uVar5 = (uint32_t)uVar8;
        iVar13 = (uVar15 - 1) - uVar17;
code_r0x080004bb:
        uVar8 = (uint64_t)uVar5;
        iVar4 = func_0x08011ff0(arg1, iVar13, 1, 0xffffffffffffffff, pcVar14, uVar8, iVar9);
code_r0x080004d4:
        in_R9 = uVar8;
        if (uVar15 < (int64_t)iVar4 + uVar17) {
            return 0;
        }
code_r0x08000448:
        puVar11 = (undefined2 *)arg1;
        if (*(uint8_t *)arg1 == 0) {
code_r0x080002a6:
            uVar3 = *(uint8_t *)arg3;
        } else {
code_r0x08000460:
            do {
                puVar11 = (undefined2 *)((int64_t)puVar11 + 1);
                iVar13 = uVar17 - arg1;
            } while (*(uint8_t *)puVar11 != 0);
            uVar3 = *(uint8_t *)arg3;
            arg1 = (int64_t)puVar11;
            uVar17 = (int64_t)puVar11 + iVar13;
        }
        if (uVar3 == 0) {
            return uVar17;
        }
    } while( true );
}


void sym.gtimegm(int64_t arg1)
{
    int32_t iVar1;
    uint32_t arg1_00;
    uint32_t arg1_01;
    uint64_t uVar2;
    uint64_t uVar3;
    uint64_t uVar4;
    uint64_t uVar5;
    
    arg1_01 = *(uint32_t *)(arg1 + 0x14);
    uVar3 = (uint64_t)arg1_01;
    if ((int32_t)arg1_01 < 0x7b2) {
        do {
            if ((arg1_01 & 3) == 0) {
                sym.gdysize.part.0(arg1_01);
            }
            arg1_01 = arg1_01 + 1;
        } while (arg1_01 != 0x7b2);
        iVar1 = *(int32_t *)(arg1 + 0xc);
    } else {
        arg1_00 = 0x7b2;
        if (arg1_01 != 0x7b2) {
            while (arg1_00 = arg1_00 + 1, (uint32_t)uVar3 != arg1_00) {
                while ((arg1_00 & 3) == 0) {
                    sym.gdysize.part.0(arg1_00);
                    arg1_00 = arg1_00 + 1;
                    if ((uint32_t)uVar3 == arg1_00) goto code_r0x080000e9;
                }
            }
        }
code_r0x080000e9:
        iVar1 = *(int32_t *)(arg1 + 0xc);
    }
    if ((0 < iVar1) && (0 < *(int32_t *)(arg1 + 0x10))) {
        uVar4 = (uint64_t)(*(int32_t *)(arg1 + 0x10) - 1);
        uVar2 = 0;
        uVar5 = (uint64_t)((uint32_t)uVar3 & 3);
        while (uVar4 != uVar2) {
            if (((uint32_t)uVar5 | (uint32_t)uVar2) == 0) {
                sym.gdysize.part.0((uint32_t)uVar3);
            }
            uVar2 = uVar2 + 1;
        }
    }
    return;
}


undefined8
sym.ggmtime(int64_t arg7, undefined8 placeholder_1, undefined8 placeholder_2, undefined8 placeholder_3,
           undefined8 placeholder_4, undefined8 placeholder_5, undefined8 placeholder_6, undefined8 placeholder_7,
           undefined8 *placeholder_8, undefined8 placeholder_9, int64_t arg3)
{
    int32_t iVar1;
    uint32_t arg1;
    int32_t iVar2;
    undefined8 uVar3;
    int32_t iVar4;
    uint32_t uVar5;
    uint64_t uVar6;
    code *pcVar7;
    double extraout_XMM0_Qa;
    double dVar8;
    double extraout_XMM0_Qa_00;
    undefined auVar9 [16];
    
    if (_reloc..LC26 < (double)(arg7 & _reloc..LC21)) {
        func_0x08011ff0(arg7, arg7 & _reloc..LC21, placeholder_2, placeholder_3, 0xffffffff, "time value out of range");
        return 0xffffffff;
    }
    auVar9 = (undefined  [16])0x0;
    *(undefined4 *)((int64_t)placeholder_8 + 0x1c) = 0;
    *placeholder_8 = 0;
    placeholder_8[1] = 0;
    placeholder_8[2] = 0x7b200000000;
    placeholder_8[5] = 0;
    dVar8 = _reloc..LC28;
    if ((double)arg7 < 0.00000000) {
        uVar5 = 4;
        if ((double)arg7 < 0.00000000) {
            uVar6 = 4;
            iVar4 = 0x16d;
            uVar3 = 0x173;
            *(undefined4 *)((int64_t)placeholder_8 + 0x14) = 0x7b1;
            dVar8 = _reloc..LC28;
            while( true ) {
                uVar5 = (int32_t)uVar6 + ((int32_t)uVar3 - iVar4);
                uVar6 = (uint64_t)uVar5;
                arg7 = (int64_t)((double)arg7 + (double)iVar4 * dVar8);
                if (SUB168(auVar9, 0) <= (double)arg7) break;
                uVar5 = *(int32_t *)((int64_t)placeholder_8 + 0x14) - 1;
                iVar4 = 0x16d;
                *(uint32_t *)((int64_t)placeholder_8 + 0x14) = uVar5;
                if ((uVar5 & 3) == 0) {
                    iVar4 = sym.gdysize.part.0(uVar5);
                    arg7 = (int64_t)extraout_XMM0_Qa_00;
                }
            }
        }
    } else {
        arg1 = 0x7b3;
        uVar6 = 4;
        iVar4 = 0x16d;
        while( true ) {
            uVar5 = (uint32_t)uVar6;
            if ((double)arg7 < (double)iVar4 * dVar8) break;
            uVar6 = (uint64_t)((uVar5 - 0x16c) + iVar4);
            arg7 = (int64_t)((double)arg7 - (double)iVar4 * dVar8);
            *(uint32_t *)((int64_t)placeholder_8 + 0x14) = arg1;
            iVar4 = 0x16d;
            if ((arg1 & 3) == 0) {
                iVar4 = sym.gdysize.part.0(arg1);
                arg7 = (int64_t)extraout_XMM0_Qa;
            }
            arg1 = arg1 + 1;
        }
    }
    pcVar7 = obj.mndday;
    iVar2 = (int32_t)((double)arg7 / dVar8);
    *(int32_t *)((int64_t)placeholder_8 + 0x1c) = iVar2;
    dVar8 = (double)arg7 - dVar8 * (double)iVar2;
    iVar4 = (int32_t)dVar8 / 0xe10;
    *(int32_t *)(placeholder_8 + 1) = iVar4;
    dVar8 = dVar8 - (double)(iVar4 * 0xe10);
    iVar4 = (int32_t)dVar8 / 0x3c;
    *(int32_t *)((int64_t)placeholder_8 + 4) = iVar4;
    *(int32_t *)placeholder_8 = (int32_t)(dVar8 - (double)(iVar4 * 0x3c));
    iVar1 = 0;
    *(int32_t *)(placeholder_8 + 3) = (int32_t)(uVar5 + iVar2) % 7;
    iVar4 = 0x1f;
    do {
        if (iVar1 == 1) {
            if ((*(uint32_t *)((int64_t)placeholder_8 + 0x14) & 3) == 0) {
                iVar1 = sym.gdysize.part.0(*(uint32_t *)((int64_t)placeholder_8 + 0x14));
                iVar4 = iVar4 + (uint32_t)(0x16d < iVar1);
            }
            if (iVar2 < iVar4) {
code_r0x0800108e:
                *(int32_t *)((int64_t)placeholder_8 + 0xc) = iVar2 + 1;
                return 0;
            }
            *(undefined4 *)(placeholder_8 + 2) = 2;
            iVar2 = iVar2 - iVar4;
            iVar1 = 2;
            iVar4 = 0x1f;
        }
        if (iVar2 < iVar4) goto code_r0x0800108e;
        while( true ) {
            iVar1 = iVar1 + 1;
            iVar2 = iVar2 - iVar4;
            *(int32_t *)(placeholder_8 + 2) = iVar1;
            if (iVar1 < 0xc) break;
            iVar4 = 0x1f;
            *(int32_t *)((int64_t)placeholder_8 + 0x14) = *(int32_t *)((int64_t)placeholder_8 + 0x14) + 1;
            iVar1 = 0;
            *(undefined4 *)(placeholder_8 + 2) = 0;
            if (iVar2 < 0x1f) goto code_r0x0800108e;
        }
        iVar4 = *(int32_t *)(pcVar7 + (int64_t)iVar1 * 4);
    } while( true );
}


undefined8 sym.gstrptime(int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5)
{
    char *pcVar1;
    char cVar2;
    char cVar3;
    uint8_t uVar4;
    bool bVar5;
    bool bVar6;
    bool bVar7;
    int32_t iVar8;
    int32_t iVar9;
    int64_t iVar10;
    int64_t *piVar11;
    int64_t iVar12;
    int32_t iVar13;
    char *pcVar14;
    char *pcVar15;
    int32_t iVar16;
    code *pcVar17;
    bool bVar18;
    undefined8 uVar19;
    double dVar20;
    double dVar21;
    char *pcStack64;
    
    *(undefined8 *)(arg3 + 8) = 0x100000000;
    *(undefined8 *)arg3 = 0;
    *(undefined8 *)(arg3 + 0x10) = 0x7b200000000;
    *(undefined8 *)(arg3 + 0x28) = 0;
    *(undefined8 *)arg4 = 0;
    *(undefined8 *)(arg3 + 0x18) = 0xffffffffffffffff;
    iVar10 = func_0x08011ff0(arg2, reloc..LC29);
    bVar18 = iVar10 != 0;
    if (bVar18) {
        *(undefined4 *)(arg3 + 0xc) = 0xffffffff;
    }
    iVar10 = func_0x08011ff0(arg2, reloc..LC30);
    if ((iVar10 != 0) || (iVar10 = func_0x08011ff0(arg2, reloc..LC31), iVar10 != 0)) {
        *(undefined4 *)(arg3 + 0x14) = 0xffffffff;
        bVar18 = true;
    }
    iVar10 = func_0x08011ff0(arg2, reloc..LC32);
    if (((iVar10 != 0) || (iVar10 = func_0x08011ff0(arg2, reloc..LC33), iVar10 != 0)) ||
       (iVar10 = func_0x08011ff0(arg2, reloc..LC34), iVar10 != 0)) {
        *(undefined4 *)(arg3 + 0x10) = 0xffffffff;
        bVar18 = true;
    }
    iVar10 = func_0x08011ff0();
    if (iVar10 == 0) {
        cVar2 = *(char *)arg2;
        bVar5 = false;
        iVar9 = 0;
        if (cVar2 == '\0') goto code_r0x08001371;
    } else {
        *(undefined8 *)arg5 = 0;
        cVar2 = *(char *)arg2;
        if (cVar2 == '\0') {
            return 2;
        }
        bVar18 = false;
        bVar5 = true;
    }
    bVar7 = false;
    uVar4 = 0;
    bVar6 = false;
    iVar9 = 0;
    pcStack64 = (char *)arg1;
code_r0x08001277:
    if (cVar2 == '%') {
        pcVar1 = (char *)(arg2 + 1);
        pcVar15 = pcStack64;
        switch(*(char *)(arg2 + 1)) {
        case 'A':
        case 'a':
            piVar11 = (int64_t *)func_0x08011ff0();
            pcVar14 = pcStack64;
            do {
                pcStack64 = pcVar14;
                pcVar14 = pcStack64 + 1;
                pcVar15 = pcStack64;
            } while ((*(uint8_t *)(*piVar11 + 1 + (int64_t)*pcStack64 * 2) & 4) != 0);
            break;
        case 'B':
            iVar10 = 0;
            do {
                iVar12 = func_0x08011ff0(reloc.full_month_names + iVar10 * 0x20);
                iVar8 = func_0x08011ff0(pcStack64, reloc.full_month_names + iVar10 * 0x20, iVar12);
                if (iVar8 == 0) goto code_r0x08001c88;
                iVar10 = iVar10 + 1;
            } while (iVar10 != 0xc);
            goto code_r0x08001b63;
        default:
            func_0x08011ff0();
            break;
        case 'H':
            if ((uint8_t)(*pcStack64 - 0x30U) < 10) {
                pcVar15 = pcStack64 + 1;
                iVar8 = *pcStack64 + -0x30;
                if ((uint8_t)(*pcVar15 - 0x30U) < 10) {
                    pcStack64 = pcStack64 + 2;
                    iVar8 = *pcVar15 + -0x30 + iVar8 * 10;
                } else {
                    pcStack64 = pcStack64 + 1;
                }
            } else {
                iVar8 = 0;
            }
            *(int32_t *)(arg3 + 8) = iVar8;
            pcVar15 = pcStack64;
            break;
        case 'M':
            if ((uint8_t)(*pcStack64 - 0x30U) < 10) {
                pcVar15 = pcStack64 + 1;
                iVar8 = *pcStack64 + -0x30;
                if ((uint8_t)(*pcVar15 - 0x30U) < 10) {
                    pcStack64 = pcStack64 + 2;
                    iVar8 = *pcVar15 + -0x30 + iVar8 * 10;
                } else {
                    pcStack64 = pcStack64 + 1;
                }
            } else {
                iVar8 = 0;
            }
            *(int32_t *)(arg3 + 4) = iVar8;
            pcVar15 = pcStack64;
            break;
        case 'S':
            if ((uint8_t)(*pcStack64 - 0x30U) < 10) {
                pcVar15 = pcStack64 + 1;
                iVar8 = *pcStack64 + -0x30;
                if ((uint8_t)(*pcVar15 - 0x30U) < 10) {
                    pcStack64 = pcStack64 + 2;
                    iVar8 = *pcVar15 + -0x30 + iVar8 * 10;
                } else {
                    pcStack64 = pcStack64 + 1;
                }
            } else {
                iVar8 = 0;
            }
            *(int32_t *)arg3 = iVar8;
            pcVar15 = pcStack64;
            if ((*pcStack64 == '.') || ((_reloc.decimalsign != (char *)0x0 && (*pcStack64 == *_reloc.decimalsign)))) {
                uVar19 = func_0x08011ff0();
                *(undefined8 *)arg4 = uVar19;
            }
            break;
        case 'W':
        case 'w':
            piVar11 = (int64_t *)func_0x08011ff0();
            if (((*(uint8_t *)(*piVar11 + 1 + (int64_t)*pcStack64 * 2) & 8) != 0) &&
               (pcVar15 = pcStack64 + 1, (*(uint8_t *)(*piVar11 + 1 + (int64_t)pcStack64[1] * 2) & 8) != 0))
            goto code_r0x08001655;
            break;
        case 'Y':
            iVar8 = 0;
            pcVar15 = pcStack64 + 4;
            do {
                cVar2 = *pcStack64;
                if (9 < (uint8_t)(cVar2 - 0x30U)) break;
                pcStack64 = pcStack64 + 1;
                iVar8 = cVar2 + -0x30 + iVar8 * 10;
            } while (pcStack64 != pcVar15);
            *(int32_t *)(arg3 + 0x14) = iVar8;
            pcVar15 = pcStack64;
            break;
        case 'Z':
            cVar2 = *pcStack64;
            if (cVar2 != '\0') {
                piVar11 = (int64_t *)func_0x08011ff0();
                do {
                    pcVar14 = pcStack64 + 1;
                    pcVar15 = pcStack64;
                    if ((*(uint8_t *)(*piVar11 + 1 + (int64_t)cVar2 * 2) & 0x20) != 0) break;
                    cVar2 = *pcVar14;
                    pcStack64 = pcVar14;
                    pcVar15 = pcVar14;
                } while (cVar2 != '\0');
            }
            break;
        case 'b':
            iVar10 = 0;
            do {
                iVar12 = func_0x08011ff0(reloc.abbrev_month_names + iVar10 * 8);
                iVar8 = func_0x08011ff0(pcStack64, reloc.abbrev_month_names + iVar10 * 8, iVar12);
                if (iVar8 == 0) goto code_r0x08001c88;
                iVar10 = iVar10 + 1;
            } while (iVar10 != 0xc);
code_r0x08001b63:
            func_0x08011ff0();
            iVar8 = 0;
            goto code_r0x08001b7c;
        case 'd':
            if ((uint8_t)(*pcStack64 - 0x30U) < 10) {
                pcVar15 = pcStack64 + 1;
                iVar8 = *pcStack64 + -0x30;
                if ((uint8_t)(*pcVar15 - 0x30U) < 10) {
                    pcStack64 = pcStack64 + 2;
                    iVar8 = *pcVar15 + -0x30 + iVar8 * 10;
                } else {
                    pcStack64 = pcStack64 + 1;
                }
            } else {
                iVar8 = 0;
            }
            *(int32_t *)(arg3 + 0xc) = iVar8;
            pcVar15 = pcStack64;
            break;
        case 'j':
            iVar8 = 0;
            pcVar15 = pcStack64 + 3;
            do {
                cVar2 = *pcStack64;
                if (9 < (uint8_t)(cVar2 - 0x30U)) break;
                pcStack64 = pcStack64 + 1;
                iVar8 = cVar2 + -0x30 + iVar8 * 10;
            } while (pcStack64 != pcVar15);
            iVar9 = iVar9 + 1;
            bVar18 = true;
            *(int32_t *)(arg3 + 0x1c) = iVar8 + -1;
            pcVar15 = pcStack64;
            break;
        case 'm':
            cVar2 = *pcStack64;
            if ((uint8_t)(cVar2 - 0x30U) < 10) {
                pcVar15 = pcStack64 + 1;
                if ((uint8_t)(*pcVar15 - 0x30U) < 10) {
                    pcStack64 = pcStack64 + 2;
                    iVar8 = *pcVar15 + -0x31 + (cVar2 + -0x30) * 10;
                } else {
                    pcStack64 = pcStack64 + 1;
                    iVar8 = cVar2 + -0x31;
                }
            } else {
                iVar8 = -1;
            }
            goto code_r0x08001b7c;
        case 'p':
            cVar2 = *pcStack64;
            if ((cVar2 == 'p') && (pcStack64[1] == 'm')) {
                bVar6 = true;
            } else {
                if ((cVar2 == 'P') && (pcStack64[1] == 'M')) {
                    bVar6 = true;
                }
            }
            if ((cVar2 == 'a') && (pcStack64[1] == 'm')) {
                uVar4 = 1;
            } else {
                if ((cVar2 == 'A') && (pcStack64[1] == 'M')) {
                    uVar4 = 1;
                }
            }
code_r0x08001655:
            pcVar15 = pcStack64 + 2;
            break;
        case 's':
            iVar8 = 0x2e;
            if (_reloc.decimalsign != (char *)0x0) {
                iVar8 = (int32_t)*_reloc.decimalsign;
            }
            pcVar14 = (char *)func_0x08011ff0(pcStack64, iVar8);
            dVar20 = (double)func_0x08011ff0(pcStack64);
            func_0x08011ff0();
            dVar21 = 0.00000000;
            if (((pcVar14 == (char *)0x0) || (pcStack64 <= pcVar14)) ||
               (dVar21 = (double)func_0x08011ff0(), dVar21 < _reloc..LC3)) {
                *(double *)arg4 = dVar21;
            }
            *(double *)arg5 = dVar20;
            if (dVar20 < 0.00000000) {
                bVar5 = true;
            }
            break;
        case 't':
            if (*(double *)arg5 == 0.00000000) {
                piVar11 = (int64_t *)func_0x08011ff0();
                pcVar1 = pcStack64;
                do {
                    pcStack64 = pcVar1;
                    pcVar1 = pcStack64 + 1;
                } while ((*(uint8_t *)(*piVar11 + 1 + (int64_t)*pcStack64 * 2) & 0x20) != 0);
                if (*pcStack64 == '-') {
                    bVar7 = true;
                }
            }
            cVar2 = *(char *)(arg2 + 2);
            pcVar1 = (char *)(arg2 + 2);
            if (cVar2 == 'H') {
                dVar20 = (double)func_0x08011ff0();
                dVar20 = dVar20 * _reloc..LC11;
            } else {
                if (cVar2 == 'M') {
                    dVar20 = (double)func_0x08011ff0();
                    dVar20 = dVar20 * _reloc..LC5;
                } else {
                    if (cVar2 != 'S') {
                        return 4;
                    }
                    dVar20 = (double)func_0x08011ff0();
                }
            }
            dVar21 = *(double *)arg5;
            pcVar15 = pcStack64;
            if (dVar21 < 0.00000000) {
                *(double *)arg5 = dVar21 - (double)((uint64_t)dVar20 & _reloc..LC21);
            } else {
                if (dVar21 <= 0.00000000) {
                    if (bVar7) {
                        *(double *)arg5 = dVar21 - (double)((uint64_t)dVar20 & _reloc..LC21);
                    } else {
                        *(double *)arg5 = dVar20;
                    }
                } else {
                    *(double *)arg5 = (double)((uint64_t)dVar20 & _reloc..LC21) + dVar21;
                }
            }
            break;
        case 'y':
            cVar2 = *pcStack64;
            if ((uint8_t)(cVar2 - 0x30U) < 10) {
                pcVar15 = pcStack64 + 1;
                if ((uint8_t)(*pcVar15 - 0x30U) < 10) {
                    pcStack64 = pcStack64 + 2;
                    iVar16 = *pcVar15 + -0x30 + (cVar2 + -0x30) * 10;
                    *(int32_t *)(arg3 + 0x14) = iVar16;
                    iVar8 = iVar16 + 2000;
                    if (0x44 < iVar16) {
                        iVar8 = iVar16 + 0x76c;
                    }
                } else {
                    pcStack64 = pcStack64 + 1;
                    iVar8 = cVar2 + 0x7a0;
                }
            } else {
                iVar8 = 2000;
            }
            *(int32_t *)(arg3 + 0x14) = iVar8;
            pcVar15 = pcStack64;
            break;
        case 'z':
            cVar2 = *pcStack64;
            if (cVar2 == '-') {
                iVar10 = -1;
code_r0x08001d3f:
                pcVar14 = pcStack64 + 1;
                cVar2 = pcStack64[1];
            } else {
                iVar10 = 1;
                pcVar14 = pcStack64;
                if (cVar2 == '+') goto code_r0x08001d3f;
            }
            if ((uint8_t)(cVar2 - 0x30U) < 10) {
                pcVar15 = pcVar14 + 1;
                if ((uint8_t)(*pcVar15 - 0x30U) < 10) {
                    pcVar14 = pcVar14 + 2;
                    iVar8 = (*pcVar15 + -0x30 + (cVar2 + -0x30) * 10) * 0xe10;
                } else {
                    iVar8 = (cVar2 + -0x30) * 0xe10;
                    pcVar14 = pcVar14 + 1;
                }
            } else {
                iVar8 = 0;
            }
            cVar2 = *pcVar14;
            pcVar15 = pcVar14;
            if (cVar2 == ':') {
                pcVar15 = pcVar14 + 1;
                cVar2 = pcVar14[1];
            }
            if ((uint8_t)(cVar2 - 0x30U) < 10) {
                pcVar14 = pcVar15 + 1;
                if ((uint8_t)(*pcVar14 - 0x30U) < 10) {
                    pcVar15 = pcVar15 + 2;
                    iVar8 = iVar8 + (*pcVar14 + -0x30 + (cVar2 + -0x30) * 10) * 0x3c;
                } else {
                    pcVar15 = pcVar15 + 1;
                    iVar8 = iVar8 + (cVar2 + -0x30) * 0x3c;
                }
            }
            *(int64_t *)(arg3 + 0x28) = iVar10 * iVar8;
        }
        goto code_r0x08001505;
    }
    cVar3 = *pcStack64;
    pcVar1 = (char *)arg2;
    if (cVar2 == ' ') {
        while (pcVar15 = pcStack64, cVar3 == ' ') {
            pcStack64 = pcStack64 + 1;
            cVar3 = *pcStack64;
        }
        goto code_r0x08001505;
    }
    if (cVar2 != cVar3) goto code_r0x08001298;
    pcVar15 = pcStack64 + 1;
    goto code_r0x08001505;
code_r0x08001c88:
    iVar8 = (int32_t)iVar10;
    pcStack64 = pcStack64 + iVar12;
code_r0x08001b7c:
    *(int32_t *)(arg3 + 0x10) = iVar8;
    pcVar15 = pcStack64;
code_r0x08001505:
    pcStack64 = pcVar15;
    arg2 = (int64_t)(pcVar1 + 1);
    cVar2 = *(char *)arg2;
    if (cVar2 == '\0') goto code_r0x08001298;
    goto code_r0x08001277;
code_r0x08001298:
    if (bVar5) {
        return 2;
    }
    iVar8 = *(int32_t *)(arg3 + 8);
    iVar16 = *(int32_t *)arg3;
    iVar13 = *(int32_t *)(arg3 + 4);
    if ((iVar8 < 0xc) && (bVar6)) {
        iVar8 = iVar8 + 0xc;
        *(int32_t *)(arg3 + 8) = iVar8;
    }
    if ((bool)(iVar8 == 0xc & uVar4)) {
        *(undefined4 *)(arg3 + 8) = 0;
        iVar8 = 0;
    }
    if (0x3b < iVar16) {
        iVar13 = iVar13 + iVar16 / 0x3c;
        *(int32_t *)(arg3 + 4) = iVar13;
        *(int32_t *)arg3 = iVar16 % 0x3c;
    }
    if (0x3b < iVar13) {
        iVar8 = iVar8 + iVar13 / 0x3c;
        *(int32_t *)(arg3 + 8) = iVar8;
        *(int32_t *)(arg3 + 4) = iVar13 % 0x3c;
    }
    if (0x17 < iVar8) {
        if (iVar9 != 0) {
            *(int32_t *)(arg3 + 0x1c) = *(int32_t *)(arg3 + 0x1c) + iVar8 / 0x18;
        }
        *(int32_t *)(arg3 + 0xc) = *(int32_t *)(arg3 + 0xc) + iVar8 / 0x18;
        *(int32_t *)(arg3 + 8) = iVar8 % 0x18;
    }
code_r0x08001371:
    if (!bVar18) {
        return 1;
    }
    if (iVar9 == 0) {
        iVar9 = *(int32_t *)(arg3 + 0x10);
        if ((iVar9 < 0) || (iVar8 = *(int32_t *)(arg3 + 0xc), iVar8 < 1)) {
            return 4;
        }
        if (0xb < iVar9) {
            *(int32_t *)(arg3 + 0x14) = *(int32_t *)(arg3 + 0x14) + iVar9 / 0xc;
            iVar9 = iVar9 % 0xc;
            *(int32_t *)(arg3 + 0x10) = iVar9;
        }
    } else {
        if (*(int32_t *)(arg3 + 0x1c) < 0) {
            return 4;
        }
        iVar8 = *(int32_t *)(arg3 + 0x1c) + 1;
        *(undefined4 *)(arg3 + 0x10) = 0;
        iVar9 = 0;
        *(int32_t *)(arg3 + 0xc) = iVar8;
    }
    pcVar17 = obj.mndday;
    iVar16 = *(int32_t *)(obj.mndday + (int64_t)iVar9 * 4);
    do {
        if (iVar9 == 1) {
            if ((*(uint32_t *)(arg3 + 0x14) & 3) == 0) {
                iVar9 = sym.gdysize.part.0(*(uint32_t *)(arg3 + 0x14));
                iVar16 = iVar16 + (uint32_t)(0x16d < iVar9);
            }
            if (iVar8 <= iVar16) {
                return 1;
            }
            *(undefined4 *)(arg3 + 0x10) = 2;
            iVar13 = 0x1f;
            iVar9 = 2;
        } else {
            if (iVar8 <= iVar16) {
                return 1;
            }
            iVar9 = iVar9 + 1;
            *(int32_t *)(arg3 + 0x10) = iVar9;
            if (iVar9 == 0xc) {
                *(int32_t *)(arg3 + 0x14) = *(int32_t *)(arg3 + 0x14) + 1;
                iVar13 = 0x1f;
                iVar9 = 0;
                *(undefined4 *)(arg3 + 0x10) = 0;
            } else {
                iVar13 = *(int32_t *)(pcVar17 + (int64_t)iVar9 * 4);
            }
        }
        iVar8 = iVar8 - iVar16;
        *(int32_t *)(arg3 + 0xc) = iVar8;
        iVar16 = iVar13;
    } while( true );
}


// WARNING: Control flow encountered bad instruction data

void sym.gstrftime(int64_t arg7, undefined8 placeholder_1, undefined8 placeholder_2, undefined8 placeholder_3,
                  undefined8 placeholder_4, undefined8 placeholder_5, undefined8 placeholder_6, undefined8 placeholder_7
                  , int64_t arg1, int64_t arg2, int64_t arg3)
{
    char *pcVar1;
    undefined4 uVar2;
    uint32_t uVar3;
    undefined2 extraout_DX;
    int64_t in_FS_OFFSET;
    double placeholder_2_00;
    uint64_t placeholder_3_00;
    double placeholder_4_00;
    undefined auStack104 [56];
    int64_t iStack48;
    
    iStack48 = *(int64_t *)(in_FS_OFFSET + 0x28);
    func_0x08011ff0(arg7, placeholder_1, placeholder_2, auStack104);
    placeholder_3_00 = _reloc..LC21;
    placeholder_4_00 = _reloc..LC20;
    placeholder_2_00 = (double)arg7;
    if ((double)(arg7 & _reloc..LC21) < _reloc..LC20) {
        placeholder_3_00 = ~_reloc..LC21 & arg7;
        _placeholder_2_00 =
             orpd(ZEXT816((uint64_t)
                          ((double)(int64_t)(double)arg7 -
                          (double)(-(uint64_t)((double)arg7 < (double)(int64_t)(double)arg7) & (uint64_t)_reloc..LC3)))
                  , ZEXT816(placeholder_3_00));
        placeholder_2_00 = SUB168(_placeholder_2_00, 0);
        placeholder_4_00 = _reloc..LC3;
    }
    sym.xstrftime((int64_t)((double)arg7 - placeholder_2_00), arg7, placeholder_2_00, placeholder_3_00, placeholder_4_00
                  , placeholder_5, placeholder_6, placeholder_7, arg1, arg2 & 0xffffffff, arg3, (int64_t)auStack104);
    if (iStack48 == *(int64_t *)(in_FS_OFFSET + 0x28)) {
        return;
    }
    uVar3 = func_0x08011ff0();
    // [05] -r-- section size 195 named .rodata.str1.1
    uVar2 = in(extraout_DX);
    *(undefined4 *)arg1 = uVar2;
    pcVar1 = (char *)((uint64_t)(uVar3 & 0x2020) + 0x6d);
    *pcVar1 = *pcVar1 + (char)((uint16_t)extraout_DX >> 8);
    *(char *)0x6c254f4e = *(char *)0x6c254f4e + (char)((uint64_t)(uVar3 & 0x2020) >> 8);
    // WARNING: Bad instruction - Truncating control flow here
    halt_baddata();
}


