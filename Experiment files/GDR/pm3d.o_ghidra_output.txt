int32_t sym.compare_quadrangles(int64_t arg1, int64_t arg2)
{
    int32_t iVar1;
    
    iVar1 = 1;
    if (*(double *)(arg1 + 8) <= *(double *)(arg2 + 8)) {
        iVar1 = -(uint32_t)(*(double *)(arg1 + 8) < *(double *)(arg2 + 8));
    }
    return iVar1;
}


void sym.pm3d_rearrange_part
               (int64_t arg7, double placeholder_1, undefined8 placeholder_2, double placeholder_3,
               undefined8 placeholder_4, undefined8 placeholder_5, undefined8 placeholder_6, undefined8 placeholder_7,
               int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4)
{
    int32_t *piVar1;
    double *pdVar2;
    int32_t iVar3;
    char cVar4;
    bool bVar5;
    uint32_t uVar6;
    undefined4 uVar7;
    char *in_RAX;
    double *pdVar8;
    int64_t *piVar9;
    undefined8 *puVar10;
    undefined8 *puVar11;
    undefined4 *puVar12;
    double *pdVar13;
    int64_t iVar14;
    int64_t **ppiVar15;
    uint64_t extraout_RDX;
    double *pdVar16;
    double *pdVar17;
    int64_t iVar18;
    uint32_t uVar19;
    int32_t iVar20;
    int64_t iVar21;
    uint32_t uVar22;
    int64_t iVar23;
    int32_t iVar24;
    char *pcVar25;
    double *pdVar26;
    int32_t iVar27;
    int32_t iVar28;
    uint64_t uVar29;
    int64_t **unaff_R13;
    int64_t **ppiVar30;
    uint32_t uVar31;
    uint32_t uVar32;
    uint64_t unaff_R15;
    int64_t in_FS_OFFSET;
    undefined extraout_XMM0 [16];
    double dVar33;
    double dVar34;
    undefined8 in_XMM2_Qb;
    undefined auVar35 [16];
    double dVar36;
    double dVar37;
    double dVar38;
    double dVar39;
    double dVar40;
    double dStack376;
    double dStack368;
    int64_t iStack360;
    uint64_t uStack344;
    undefined8 *puStack336;
    double *pdStack328;
    int64_t **ppiStack320;
    undefined8 *puStack312;
    code *pcStack304;
    uint32_t uStack292;
    double *pdStack288;
    double *pdStack280;
    int32_t iStack272;
    char cStack265;
    undefined8 *puStack264;
    undefined8 *puStack256;
    double adStack248 [2];
    double dStack232;
    double adStack184 [2];
    double dStack168;
    double adStack120 [2];
    double dStack104;
    int64_t iStack64;
    
    auVar35 = CONCAT88(in_XMM2_Qb, placeholder_2);
    pdVar26 = (double *)(arg2 & 0xffffffff);
    cVar4 = (char)in_RAX;
    *in_RAX = *in_RAX + cVar4;
    *in_RAX = *in_RAX + cVar4;
    *in_RAX = *in_RAX + cVar4;
    iStack64 = *(int64_t *)(in_FS_OFFSET + 0x28);
    pcVar25 = "";
    pdVar8 = (double *)((int64_t)(int32_t)arg2 << 3);
    pcStack304 = (code *)0x80000c1;
    pdStack288 = pdVar8;
    puStack312 = (undefined8 *)
                 func_0x0802aa0f(arg7, placeholder_1, placeholder_2, placeholder_3, placeholder_4, placeholder_5, 
                                 placeholder_6, placeholder_7);
    uVar6 = (uint32_t)pcVar25;
    uStack292 = 0;
    *(undefined8 **)arg3 = puStack312;
    pdStack328 = pdVar26;
    if ((*(int32_t *)0x800000c == 0) && (ppiVar30 = (int64_t **)arg1, puVar10 = (undefined8 *)arg1, arg1 != 0)) {
        do {
            puStack256 = puVar10;
            puStack264 = puStack312;
            uVar6 = *(uint32_t *)((int64_t)ppiVar30 + 0xc);
            arg3 = ZEXT48(uVar6);
            uVar22 = (int32_t)pdVar26 - 1;
            uVar31 = uVar6 - 1;
            if ((int32_t)uVar31 < 1) {
                unaff_R13 = (int64_t **)*ppiVar30;
code_r0x080001ac:
                pdStack328 = (double *)(uint64_t)uVar22;
                cVar4 = '\x01';
            } else {
                piVar9 = ppiVar30[2];
                uVar32 = 0;
                do {
                    if (*(int32_t *)piVar9 != 2) {
                        auVar35 = (undefined  [16])0x0;
                        arg3 = ZEXT48(uVar32);
                        pdVar8 = adStack248;
                        pcStack304 = (code *)0x800027b;
                        func_0x0802aa0f(piVar9[1], piVar9[2], 0);
                        uVar6 = uVar32;
                        break;
                    }
                    uVar32 = uVar32 + 1;
                    piVar9 = piVar9 + 8;
                } while (uVar6 != uVar32);
                uVar19 = (uint32_t)arg3;
                uVar32 = uVar31;
                if ((int32_t)uVar6 < (int32_t)uVar31) {
                    piVar9 = ppiVar30[2] + (int64_t)(int32_t)uVar31 * 8;
                    uVar6 = uVar31;
                    do {
                        if (*(int32_t *)piVar9 != 2) {
                            pdVar8 = adStack184;
                            auVar35 = (undefined  [16])0x0;
                            pcStack304 = (code *)0x800017e;
                            func_0x0802aa0f(piVar9[1], piVar9[2], 0);
                            uVar32 = uVar6;
                            break;
                        }
                        uVar6 = uVar6 - 1;
                        piVar9 = piVar9 + -8;
                        uVar32 = uVar19;
                    } while (uVar19 != uVar6);
                }
                unaff_R15 = (uint64_t)(uVar32 - uVar19);
                unaff_R13 = (int64_t **)*ppiVar30;
                placeholder_1 = (double)uVar31 * _reloc..LC2;
                if ((double)(uVar32 - uVar19) <= placeholder_1) goto code_r0x080001ac;
                *(uint32_t *)pdStack280 = (uint32_t)(dStack168 <= dStack232);
                if ((int32_t)pdVar26 < 3) {
                    pdStack328 = (double *)(uint64_t)uVar22;
                    pdVar8 = pdStack280;
                } else {
                    iVar21 = (int64_t)(int32_t)uVar19;
                    unaff_R15 = iVar21 * 0x40;
                    do {
                        iVar20 = (int32_t)pdVar26;
                        pdStack328 = (double *)(uint64_t)(iVar20 - 2);
                        pdVar8 = pdStack328;
                        ppiVar15 = unaff_R13;
                        if (unaff_R13 != (int64_t **)0x0) {
                            do {
                                ppiVar15 = (int64_t **)*ppiVar15;
                                uVar6 = (int32_t)pdVar8 - 1;
                                pcVar25 = (char *)((uint64_t)pcVar25 & 0xffffffffffffff00 |
                                                  (uint64_t)(ppiVar15 != (int64_t **)0x0));
                                bVar5 = uVar6 != 0 && ppiVar15 != (int64_t **)0x0;
                                pdVar8 = (double *)(uint64_t)uVar6;
                            } while (bVar5);
                            if (((ppiVar15 != (int64_t **)0x0) &&
                                (iVar28 = *(int32_t *)((int64_t)ppiVar15 + 0xc), iVar28 != 0)) &&
                               ((int32_t)uVar19 < iVar28)) {
                                pcVar25 = (char *)ppiVar15[2];
                                piVar9 = (int64_t *)((int64_t)pcVar25 + iVar21 * 8 * 8);
                                do {
                                    if (*(int32_t *)piVar9 != 2) {
                                        placeholder_1 = (double)piVar9[2];
                                        auVar35 = (undefined  [16])0x0;
                                        pdVar8 = adStack120;
                                        pcStack304 = (code *)0x800037d;
                                        cStack265 = bVar5;
                                        func_0x0802aa0f(piVar9[1], placeholder_1, 0);
                                        unaff_R13 = (int64_t **)*ppiVar30;
                                        uStack292 = (uint32_t)(dStack104 <= dStack232);
                                        cVar4 = cStack265;
                                        goto code_r0x080001b4;
                                    }
                                    piVar9 = piVar9 + 8;
                                } while ((int64_t *)
                                         ((int64_t)pcVar25 + (((uint64_t)(iVar28 + ~uVar19) + iVar21) * 8 + 8) * 8) !=
                                         piVar9);
                            }
                        }
                        pdVar26 = (double *)(uint64_t)(iVar20 - 1);
                        pdVar8 = pdVar26;
                    } while (3 < iVar20);
                }
                cVar4 = '\x01';
            }
code_r0x080001b4:
            uVar6 = (uint32_t)pcVar25;
            arg1 = (int64_t)puStack256;
            puStack312 = puStack264;
        } while ((unaff_R13 != (int64_t **)0x0) &&
                (pdVar26 = pdStack328, ppiVar30 = unaff_R13, puVar10 = puStack256, cVar4 != '\0'));
    }
    iVar20 = *(int32_t *)0x800000c;
    if (0 < iStack272) {
        puVar10 = puStack312;
        do {
            while (pdVar8 = pdStack288, uVar6 = uStack292, iVar20 == 0) {
                if (uStack292 == 1) goto code_r0x0800020e;
code_r0x080001f5:
                *puVar10 = arg1;
                puVar10 = puVar10 + 1;
                arg1 = *(int64_t *)arg1;
                if (puStack312 + (uint64_t)(iStack272 - 1) + 1 == puVar10) goto code_r0x08000226;
            }
            if (iVar20 != 1) goto code_r0x080001f5;
code_r0x0800020e:
            puVar11 = puVar10 + 1;
            *(int64_t *)((int64_t)pdStack288 + (int64_t)puStack312 * 2 + (-8 - (int64_t)puVar10)) = arg1;
            arg1 = *(int64_t *)arg1;
            puVar10 = puVar11;
        } while (puStack312 + (uint64_t)(iStack272 - 1) + 1 != puVar11);
    }
code_r0x08000226:
    if (iStack64 == *(int64_t *)(in_FS_OFFSET + 0x28)) {
        return;
    }
    pcStack304 = sym.filled_polygon;
    func_0x0802aa0f();
    iVar20 = (int32_t)extraout_RDX;
    uVar29 = SEXT48(iVar20);
    iStack360 = *(int64_t *)(in_FS_OFFSET + 0x28);
    uStack344 = arg3;
    puStack336 = (undefined8 *)arg1;
    ppiStack320 = unaff_R13;
    pcStack304 = (code *)unaff_R15;
    if (_obj.max_vertices.12697 < iVar20) {
        _obj.max_vertices.12697 = iVar20;
        _obj.icorners.12698 = (undefined4 *)func_0x0802aa0f(_obj.icorners.12698, (int64_t)(iVar20 * 2) * 0xc, "");
        ""._0_8_ = (double *)func_0x0802aa0f(""._0_8_, (int64_t)(_obj.max_vertices.12697 * 2) << 5, "");
    }
    dVar37 = _reloc.yscale3d;
    dVar34 = _reloc.sqrt;
    pdVar26 = ""._0_8_;
    puVar12 = _obj.icorners.12698;
    if (((*(char *)0x8000009 == '\0') && (_obj.pm3d_plot_at != 0x62)) && (_obj.pm3d_plot_at != 0x74)) {
        uVar29 = extraout_RDX & 0xffffffff;
        iVar28 = (int32_t)uVar29;
        iVar21 = ""._0_8_;
        if (""._8_4_ < iVar20) {
            ""._8_4_ = iVar28;
            iVar21 = func_0x0802aa0f(_reloc.yscale3d, _reloc.sqrt, ""._0_8_, (int64_t)iVar28 << 2, 0);
            puVar12 = _obj.icorners.12698;
        }
        ""._0_8_ = iVar21;
        _obj.icorners.12698 = puVar12;
        if (0 < iVar28) {
            pdVar16 = pdVar8 + 2;
            iVar23 = 0;
            iVar27 = 0;
            iVar24 = 0;
            iVar20 = 0;
            do {
                while( true ) {
                    dVar33 = *pdVar16;
                    auVar35 = ZEXT816((uint64_t)dVar33);
                    if (dVar37 <= dVar34) break;
                    if ((dVar33 < dVar34) || (dVar37 < dVar33)) goto code_r0x08000630;
code_r0x08000604:
                    *(undefined4 *)(iVar21 + iVar23 * 4) = 0;
code_r0x0800060b:
                    iVar23 = iVar23 + 1;
                    pdVar16 = pdVar16 + 4;
                    if (iVar28 <= (int32_t)iVar23) goto code_r0x08000658;
                }
                if ((dVar37 <= dVar33) && (dVar33 <= dVar34)) goto code_r0x08000604;
code_r0x08000630:
                dVar33 = *pdVar16;
                auVar35 = ZEXT816((uint64_t)dVar33);
                if (dVar33 <= dVar37) {
                    if (dVar33 < dVar34) {
                        *(undefined4 *)(iVar21 + iVar23 * 4) = 0xffffffff;
                        iVar20 = iVar20 + 1;
                        iVar27 = iVar27 + 1;
                    }
                    goto code_r0x0800060b;
                }
                *(undefined4 *)(iVar21 + iVar23 * 4) = 1;
                iVar23 = iVar23 + 1;
                iVar20 = iVar20 + 1;
                iVar24 = iVar24 + 1;
                pdVar16 = pdVar16 + 4;
            } while ((int32_t)iVar23 < iVar28);
code_r0x08000658:
            dVar33 = SUB168(auVar35, 0);
            if (iVar20 != 0) {
                if ((iVar28 == iVar27) || (iVar28 == iVar24)) goto code_r0x08000512;
                iVar23 = 1;
                iVar20 = 0;
                pdVar16 = pdVar8;
                do {
                    iVar24 = *(int32_t *)(iVar21 + -4 + iVar23 * 4);
                    iVar18 = (int64_t)((int32_t)iVar23 % iVar28);
                    iVar27 = *(int32_t *)(iVar21 + iVar18 * 4);
                    if (iVar24 == 0) {
    // WARNING: Load size is inaccurate
                        iVar14 = (int64_t)iVar20;
    // WARNING: Store size is inaccurate
                        *(undefined *)(pdVar26 + iVar14 * 4) = *(undefined *)pdVar16;
    // WARNING: Load size is inaccurate
    // WARNING: Store size is inaccurate
                        *(undefined *)(pdVar26 + iVar14 * 4 + 2) = *(undefined *)(pdVar16 + 2);
                        iVar3 = iVar20 + 1;
                        if (iVar27 != 0) {
                            pdVar17 = pdVar8 + iVar18 * 4;
                            pdVar13 = pdVar26 + iVar14 * 4 + 4;
                            uVar29 = -(uint64_t)(dVar37 <= pdVar17[2]);
                            auVar35 = orpd(CONCAT88(0xffffffffffffffff, ~uVar29 & (uint64_t)dVar34) &
                                           (undefined  [16])0xffffffffffffffff, ZEXT816((uint64_t)dVar37 & uVar29));
                            dVar38 = (SUB168(auVar35, 0) - pdVar16[2]) / (pdVar17[2] - pdVar16[2]);
                            dVar33 = pdVar17[1];
                            *pdVar13 = (*pdVar17 - *pdVar16) * dVar38 + *pdVar16;
                            placeholder_3 = pdVar16[1];
                            pdVar13[2] = SUB168(auVar35, 0);
                            placeholder_3 = (dVar33 - placeholder_3) * dVar38 + placeholder_3;
                            pdVar13[1] = placeholder_3;
                            iVar3 = iVar20 + 2;
                        }
                    } else {
                        if (iVar27 == 0) {
                            uVar29 = -(uint64_t)(dVar37 <= pdVar16[2]);
                            pdVar17 = pdVar8 + iVar18 * 4;
                            pdVar13 = pdVar26 + (int64_t)iVar20 * 4;
                            auVar35 = orpd(CONCAT88(0xffffffffffffffff, ~uVar29 & (uint64_t)dVar34) &
                                           (undefined  [16])0xffffffffffffffff, ZEXT816((uint64_t)dVar37 & uVar29));
                            dVar38 = (SUB168(auVar35, 0) - pdVar17[2]) / (pdVar16[2] - pdVar17[2]);
                            *pdVar13 = (*pdVar16 - *pdVar17) * dVar38 + *pdVar17;
                            placeholder_3 = pdVar17[1];
                            dVar33 = pdVar16[1];
                            pdVar13[2] = SUB168(auVar35, 0);
                            placeholder_3 = (dVar33 - placeholder_3) * dVar38 + placeholder_3;
                            pdVar13[1] = placeholder_3;
                            iVar3 = iVar20 + 1;
                        } else {
                            iVar3 = iVar20;
                            if (iVar24 * iVar27 < 0) {
                                pdVar13 = pdVar8 + iVar18 * 4;
                                uVar29 = -(uint64_t)(dVar37 <= pdVar16[2]);
                                pdVar2 = pdVar26 + (int64_t)iVar20 * 4;
                                pdVar17 = pdVar26 + (int64_t)iVar20 * 4 + 4;
                                auVar35 = orpd(CONCAT88(0xffffffffffffffff, ~uVar29 & (uint64_t)dVar34) &
                                               (undefined  [16])0xffffffffffffffff, ZEXT816((uint64_t)dVar37 & uVar29));
                                dVar39 = SUB168(auVar35, 0);
                                dVar40 = (dVar39 - pdVar13[2]) / (pdVar16[2] - pdVar13[2]);
                                dVar36 = *pdVar13 + (*pdVar16 - *pdVar13) * dVar40;
                                placeholder_3 = pdVar13[1];
                                *pdVar2 = dVar36;
                                dVar33 = pdVar16[1];
                                pdVar2[2] = dVar39;
                                dVar38 = pdVar13[2];
                                uVar29 = -(uint64_t)(dVar37 <= dVar38);
                                placeholder_3 = (dVar33 - placeholder_3) * dVar40 + placeholder_3;
                                auVar35 = orpd(CONCAT88(0xffffffffffffffff, ~uVar29 & (uint64_t)dVar34) &
                                               (undefined  [16])0xffffffffffffffff, ZEXT816((uint64_t)dVar37 & uVar29));
                                pdVar2[1] = placeholder_3;
                                dVar38 = (SUB168(auVar35, 0) - dVar39) / (dVar38 - dVar39);
                                *pdVar17 = (*pdVar13 - dVar36) * dVar38 + dVar36;
                                dVar33 = pdVar13[1];
                                pdVar17[2] = SUB168(auVar35, 0);
                                dVar33 = (dVar33 - placeholder_3) * dVar38 + placeholder_3;
                                auVar35 = ZEXT816((uint64_t)dVar33);
                                pdVar17[1] = dVar33;
                                iVar3 = iVar20 + 2;
                            }
                        }
                    }
                    iVar20 = iVar3;
                    dVar33 = SUB168(auVar35, 0);
                    iVar23 = iVar23 + 1;
                    pdVar16 = pdVar16 + 4;
                } while ((uint64_t)(iVar28 - 1) + 2 != iVar23);
                if (iVar20 < 2) goto code_r0x08000512;
                uVar29 = SEXT48(iVar20);
                pdVar8 = ""._0_8_;
            }
code_r0x0800040a:
            iVar21 = 0;
            do {
                pdVar26 = pdVar8 + 2;
                auVar35 = ZEXT816((uint64_t)*pdVar26);
                dVar34 = pdVar8[1];
                dVar37 = *pdVar8;
                pdVar8 = pdVar8 + 4;
                func_0x0802aa0f(dVar37, dVar34, *pdVar26, &dStack376, &dStack368);
                puVar12 = _obj.icorners.12698;
                iVar23 = iVar21 + 1;
                piVar1 = _obj.icorners.12698 + iVar21 * 3;
                *piVar1 = (int32_t)dStack376;
                piVar1[1] = (int32_t)dStack368;
                iVar21 = iVar23;
            } while ((int32_t)iVar23 < (int32_t)uVar29);
        }
    } else {
        dVar34 = placeholder_1;
        if (0 < iVar20) goto code_r0x0800040a;
    }
    if (uVar6 == 0) {
        if (_reloc.default_fillstyle == 0) {
            puVar12[2] = 0x641;
        } else {
            uVar7 = func_0x0802aa0f(reloc.default_fillstyle);
            puVar12[2] = uVar7;
            puVar12 = _obj.icorners.12698;
        }
    } else {
        puVar12[2] = uVar6;
    }
    (**(code **)(_reloc.term + 0xe8))(uVar29 & 0xffffffff, puVar12);
    dVar33 = SUB168(auVar35, 0);
    if (*(int32_t *)0x800002c != -3) {
        if (*(int32_t *)0x800002c != -7) {
            func_0x0802aa0f(0x8000028);
        }
        (**(code **)(_reloc.term + 0x58))(*_obj.icorners.12698, _obj.icorners.12698[1]);
        dVar33 = SUB168(auVar35, 0);
        uVar6 = (int32_t)uVar29 - 1;
        if (-1 < (int32_t)uVar6) {
            iVar21 = (int64_t)(int32_t)uVar6 * 0xc;
            do {
                puVar12 = (undefined4 *)((int64_t)_obj.icorners.12698 + iVar21);
                iVar21 = iVar21 + -0xc;
                (**(code **)(_reloc.term + 0x60))(*puVar12, puVar12[1]);
                dVar33 = SUB168(auVar35, 0);
            } while (iVar21 != (uVar29 - uVar6) * 0xc + -0x18);
        }
    }
code_r0x08000512:
    if (iStack360 == *(int64_t *)(in_FS_OFFSET + 0x28)) {
        return;
    }
    func_0x0802aa0f();
    dVar37 = SUB168(extraout_XMM0, 0) * dVar34 * dVar33 * placeholder_3;
    if (dVar37 != 0.00000000) {
        iVar20 = (uint32_t)(SUB168(extraout_XMM0, 0) < 0.00000000) + (uint32_t)(dVar34 < 0.00000000) +
                 (uint32_t)(dVar33 < 0.00000000) + (uint32_t)(placeholder_3 < 0.00000000);
        if (2 < iVar20 - 1U) {
            dVar37 = (double)((uint64_t)dVar37 & _reloc..LC4);
            auVar35 = CONCAT88(SUB168(extraout_XMM0 >> 0x40, 0) & *(uint64_t *)0x80040c8, dVar37);
            auVar35 = sqrtsd(auVar35, auVar35);
            if (dVar37 < 0.00000000) {
                func_0x0802aa0f(dVar37, 0, SUB168(auVar35, 0));
                auVar35 = auVar35 & (undefined  [16])0xffffffffffffffff;
            }
            dVar34 = SUB168(auVar35, 0);
            auVar35 = sqrtsd(auVar35, auVar35);
            if (dVar34 < 0.00000000) {
                func_0x0802aa0f(dVar34, SUB168(auVar35, 0), dVar34);
            }
            if (iVar20 != 0) {
                return;
            }
        }
        return;
    }
    return;
}
















undefined8 * sym.get_pm3d_at_option(int64_t arg1)
{
    char cVar1;
    uint32_t uVar2;
    int32_t iVar3;
    int64_t *piVar4;
    int32_t iVar5;
    uint32_t uVar6;
    int64_t iVar7;
    undefined8 *puVar8;
    undefined8 *puVar9;
    uint64_t uVar10;
    int32_t iVar11;
    int64_t iVar12;
    int32_t iVar13;
    
    if ((_reloc.c_token < _reloc.num_tokens) && (iVar5 = func_0x0802aa0f(_reloc.c_token, reloc..LC14), iVar5 == 0)) {
        iVar7 = (int64_t)_reloc.c_token;
        iVar12 = _reloc.token + iVar7 * 0x28;
        uVar2 = *(uint32_t *)(iVar12 + 0x24);
        if (uVar2 < 7) {
            iVar12 = *(int32_t *)(iVar12 + 0x20) + _reloc.gp_input_line;
            if (uVar2 != 0) {
                uVar6 = 0;
                do {
                    uVar10 = (uint64_t)uVar6;
                    uVar6 = uVar6 + 1;
                    *(undefined *)(arg1 + uVar10) = *(undefined *)(iVar12 + uVar10);
                } while (uVar6 < uVar2);
                iVar7 = (int64_t)_reloc.c_token;
            }
            *(undefined *)(arg1 + *(int32_t *)(_reloc.token + 0x24 + iVar7 * 0x28)) = 0;
            cVar1 = *(char *)arg1;
            while( true ) {
                if (cVar1 == '\0') {
                    _reloc.c_token = _reloc.c_token + 1;
                    return (undefined8 *)0x0;
                }
                if ((1 < (uint8_t)(cVar1 + 0x8dU)) && (cVar1 != 'b')) break;
                cVar1 = *(char *)(arg1 + 1);
                arg1 = arg1 + 1;
            }
            func_0x0802aa0f(_reloc.c_token, 
                            
                            "parameter to `pm3d at` requires combination of up to 6 characters b,s,t\n\t(drawing at bottom, surface, top)"
                           );
        }
    }
    iVar11 = 0x8003f78;
    iVar5 = _reloc.c_token;
    func_0x0802aa0f();
    puVar9 = _reloc.first_label;
    if (*(int32_t *)0x8000014 != 1) {
        puVar9 = _reloc.first_plot;
        puVar8 = _reloc.first_label;
        if (iVar11 == 1) {
            while (puVar9 != (undefined8 *)0x0) {
                if (*(int32_t *)(puVar9 + 2) == 0x640) {
                    obj.plot_has_palette = (code)0x1;
                    return _reloc.first_label;
                }
                if (*(int32_t *)(puVar9 + 0xc) - 4U < 3) {
                    obj.plot_has_palette = (code)0x1;
                    return _reloc.first_label;
                }
                if ((puVar9[0x2b] != 0) && (*(int32_t *)(puVar9[0x2b] + 0x58) - 4U < 3)) {
                    obj.plot_has_palette = (code)0x1;
                    return _reloc.first_label;
                }
                puVar9 = (undefined8 *)*puVar9;
            }
        } else {
            if (iVar11 == 2) {
                iVar13 = 1;
                if (0 < iVar5) {
                    iVar3 = *(int32_t *)(_reloc.first_3dplot + 2);
                    piVar4 = _reloc.first_3dplot;
                    while( true ) {
                        if (iVar3 == 0x640) {
                            obj.plot_has_palette = (code)0x1;
                            return _reloc.first_label;
                        }
                        if (iVar3 == 0x588) {
                            obj.plot_has_palette = (code)0x1;
                            return _reloc.first_label;
                        }
                        if (2 < *(int32_t *)(piVar4 + 0xc) - 1U) {
                            obj.plot_has_palette = (code)0x1;
                            return _reloc.first_label;
                        }
                        if ((piVar4[0x2b] != 0) && (3 < *(uint32_t *)(piVar4[0x2b] + 0x58))) {
                            obj.plot_has_palette = (code)0x1;
                            return _reloc.first_label;
                        }
                        iVar13 = iVar13 + 1;
                        piVar4 = (int64_t *)*piVar4;
                        if (iVar5 + 1 == iVar13) break;
                        iVar3 = *(int32_t *)(piVar4 + 2);
                    }
                }
            }
        }
        while (puVar8 != (undefined8 *)0x0) {
            if (*(int32_t *)(puVar8 + 0xb) - 4U < 3) {
                obj.plot_has_palette = (code)0x1;
                return puVar8;
            }
            puVar8 = (undefined8 *)*puVar8;
        }
        puVar9 = (undefined8 *)(uint64_t)(_reloc.not_a_number - 4U);
        if ((((2 < _reloc.not_a_number - 4U) &&
             (puVar9 = (undefined8 *)(uint64_t)(*(int32_t *)0x802b187 - 4U), 2 < *(int32_t *)0x802b187 - 4U)) &&
            (puVar9 = (undefined8 *)(uint64_t)(*(int32_t *)0x802aedf - 4U), 2 < *(int32_t *)0x802aedf - 4U)) &&
           ((puVar9 = (undefined8 *)(uint64_t)(*(int32_t *)0x802bc27 - 4U), 2 < *(int32_t *)0x802bc27 - 4U &&
            (puVar9 = (undefined8 *)(uint64_t)(*(int32_t *)0x802b97f - 4U), 2 < *(int32_t *)0x802b97f - 4U)))) {
            if ((iVar11 == 2) && (*(int32_t *)0x802ac37 - 4U < 3)) {
                obj.plot_has_palette = (code)0x1;
                return (undefined8 *)(uint64_t)(*(int32_t *)0x802ac37 - 4U);
            }
            puVar9 = (undefined8 *)(uint64_t)(*(int32_t *)0x802b42f - 4U);
            puVar8 = _reloc.first_object;
            if (2 < *(int32_t *)0x802b42f - 4U) {
                while( true ) {
                    if (puVar8 == (undefined8 *)0x0) {
                        obj.plot_has_palette = (code)0x0;
                        return (undefined8 *)0x0;
                    }
                    if (*(int32_t *)(puVar8 + 0xd) - 4U < 3) break;
                    puVar8 = (undefined8 *)*puVar8;
                }
                obj.plot_has_palette = (code)0x1;
                return puVar8;
            }
        }
    }
    obj.plot_has_palette = (code)0x1;
    return puVar9;
}


code sym.is_plot_with_palette(void)
{
    return obj.plot_has_palette;
}


code sym.is_plot_with_colorbox(void)
{
    code cVar1;
    
    cVar1 = obj.plot_has_palette;
    if (obj.plot_has_palette != (code)0x0) {
        cVar1 = (code)(reloc.color_box != (code)0x6e);
    }
    return cVar1;
}


void sym.pm3d_init_lighting_model(void)
{
    double extraout_XMM0_Qa;
    double extraout_XMM0_Qa_00;
    double dVar1;
    double dStack24;
    undefined8 auStack16 [2];
    
    func_0x0802aa0f((double)*(int32_t *)0x8000024 * _reloc..LC9, auStack16, &dStack24);
    dVar1 = (double)*(int32_t *)0x8000020 * _reloc..LC15 + _reloc..LC16;
    func_0x0802aa0f(dVar1, dVar1);
    _obj.light = extraout_XMM0_Qa * dStack24;
    func_0x0802aa0f((uint64_t)dVar1 ^ _reloc..LC5, (uint64_t)dVar1 ^ _reloc..LC5);
    *(undefined8 *)0x8003f28 = auStack16[0];
    *(double *)0x8003f30 = extraout_XMM0_Qa_00 * dStack24;
    return;
}




// WARNING: [r2ghidra] Failed to match type signed int for variable var_64h to Decompiler type: Unknown type identifier
// signed
// WARNING: [r2ghidra] Failed to match type signed int64_t for variable var_44h to Decompiler type: Unknown type
// identifier signed
// WARNING: [r2ghidra] Failed to match type signed int for variable var_90h to Decompiler type: Unknown type identifier
// signed
// WARNING: [r2ghidra] Failed to match type signed int for variable var_70h to Decompiler type: Unknown type identifier
// signed

void sym.pm3d_draw_one(uint32_t arg1)
{
    code cVar1;
    code *pcVar2;
    undefined4 in_RDI;
    int64_t arg1_00;
    double placeholder_0;
    int64_t in_XMM1_Qa;
    undefined8 in_XMM2_Qa;
    undefined8 in_XMM3_Qa;
    undefined8 in_XMM4_Qa;
    undefined8 in_XMM5_Qa;
    undefined8 in_XMM6_Qa;
    undefined8 in_XMM7_Qa;
    
    arg1_00 = CONCAT44(in_RDI, arg1);
    if (*(char *)(arg1_00 + 0x1b8) == '\0') {
        pcVar2 = segment.ehdr;
        if (segment.ehdr == (code)0x0) {
            return;
        }
    } else {
        pcVar2 = (code *)(arg1_00 + 0x1b8);
    }
    placeholder_0 = (double)CONCAT71(*(unkbyte7 *)0x8000001, segment.ehdr);
    if (_reloc..LC1 < placeholder_0) {
        placeholder_0 = (double)func_0x0802aa0f();
    }
    cVar1 = *pcVar2;
    if (cVar1 == (code)0x0) {
        return;
    }
    do {
        pcVar2 = pcVar2 + 1;
        placeholder_0 =
             (double)sym.pm3d_plot(placeholder_0, in_XMM1_Qa, in_XMM2_Qa, in_XMM3_Qa, in_XMM4_Qa, in_XMM5_Qa, in_XMM6_Qa
                                   , in_XMM7_Qa, arg1_00, (int32_t)(char)cVar1);
        cVar1 = *pcVar2;
    } while (cVar1 != (code)0x0);
    return;
}


void sym.pm3d_add_polygon
               (undefined8 placeholder_0, int64_t arg8, int64_t arg9, int64_t arg10, int64_t arg11,
               undefined8 placeholder_5, undefined8 placeholder_6, undefined8 placeholder_7, int64_t arg1, int64_t arg2,
               int64_t arg3)
{
    double dVar1;
    undefined4 uVar2;
    undefined4 uVar3;
    undefined4 uVar4;
    undefined2 uVar5;
    int32_t iVar6;
    int64_t iVar7;
    undefined *puVar8;
    undefined *puVar9;
    int32_t iVar10;
    int64_t iVar11;
    double *unaff_RBX;
    double *unaff_RBP;
    double *pdVar12;
    double *pdVar13;
    double *pdVar14;
    uint32_t uVar15;
    double *unaff_R12;
    uint64_t unaff_R13;
    int64_t in_FS_OFFSET;
    double dVar16;
    double extraout_XMM0_Qa;
    
    do {
        *(uint64_t *)((int64_t)*(undefined **)0x20 + -8) = unaff_R13;
        unaff_R13 = arg3 & 0xffffffff;
        *(double **)((int64_t)*(undefined **)0x20 + -0x10) = unaff_R12;
        *(double **)((int64_t)*(undefined **)0x20 + -0x18) = unaff_RBP;
        *(double **)((int64_t)*(undefined **)0x20 + -0x20) = unaff_RBX;
        pdVar14 = (double *)((int64_t)*(undefined **)0x20 + -0x168);
        iVar11 = (int64_t)_obj.current_quadrangle;
        *(undefined8 *)((int64_t)*(undefined **)0x20 + -0x30) = *(undefined8 *)(in_FS_OFFSET + 0x28);
        if (((double *)arg1 == (double *)0x0) || (*(int32_t *)(arg1 + 0x10) == 0x928)) {
            if ("\x06"._0_4_ <= _obj.current_quadrangle + 99) {
                dVar16 = (double)"\x06"._0_4_;
                "\x06"._0_4_ = (int32_t)(dVar16 + _reloc..LC24);
                *(undefined8 *)((int64_t)*(undefined **)0x20 + -0x170) = 0x8003bf1;
                _obj.quadrangles =
                     func_0x0802aa0f(dVar16 + _reloc..LC24, _obj.quadrangles, (int64_t)"\x06"._0_4_ * 0xa0, "\x06");
                iVar11 = (int64_t)_obj.current_quadrangle;
            }
            uVar2 = *(undefined4 *)(arg2 + 4);
            uVar3 = *(undefined4 *)(arg2 + 8);
            uVar4 = *(undefined4 *)(arg2 + 0xc);
            _obj.current_quadrangle = (int32_t)iVar11 + 1;
            unaff_RBP = (double *)(iVar11 * 0xa0 + _obj.quadrangles);
            *(undefined4 *)(unaff_RBP + 2) = *(undefined4 *)arg2;
            *(undefined4 *)((int64_t)unaff_RBP + 0x14) = uVar2;
            *(undefined4 *)(unaff_RBP + 3) = uVar3;
            *(undefined4 *)((int64_t)unaff_RBP + 0x1c) = uVar4;
            dVar16 = *(double *)(arg2 + 0x18);
            unaff_RBP[4] = *(double *)(arg2 + 0x10);
            unaff_RBP[5] = dVar16;
            dVar16 = *(double *)(arg2 + 0x28);
            unaff_RBP[6] = *(double *)(arg2 + 0x20);
            unaff_RBP[7] = dVar16;
            dVar16 = *(double *)(arg2 + 0x38);
            unaff_RBP[8] = *(double *)(arg2 + 0x30);
            unaff_RBP[9] = dVar16;
            dVar16 = *(double *)(arg2 + 0x48);
            unaff_RBP[10] = *(double *)(arg2 + 0x40);
            unaff_RBP[0xb] = dVar16;
            dVar16 = *(double *)(arg2 + 0x58);
            unaff_RBP[0xc] = *(double *)(arg2 + 0x50);
            unaff_RBP[0xd] = dVar16;
            dVar16 = *(double *)(arg2 + 0x68);
            unaff_RBP[0xe] = *(double *)(arg2 + 0x60);
            unaff_RBP[0xf] = dVar16;
            uVar2 = *(undefined4 *)(arg2 + 0x74);
            uVar3 = *(undefined4 *)(arg2 + 0x78);
            uVar4 = *(undefined4 *)(arg2 + 0x7c);
            *(undefined4 *)(unaff_RBP + 0x10) = *(undefined4 *)(arg2 + 0x70);
            *(undefined4 *)((int64_t)unaff_RBP + 0x84) = uVar2;
            *(undefined4 *)(unaff_RBP + 0x11) = uVar3;
            *(undefined4 *)((int64_t)unaff_RBP + 0x8c) = uVar4;
            if ((double *)arg1 != (double *)0x0) goto code_r0x0800398d;
            pdVar13 = (double *)0x0;
            *(undefined2 *)(unaff_RBP + 0x13) = 0;
        } else {
            if ("\x06"._0_4_ < *(int32_t *)((int64_t)*(double *)(arg1 + 0x1b0) + 0xc) + _obj.current_quadrangle) {
                "\x06"._0_4_ = "\x06"._0_4_ + *(int32_t *)((int64_t)*(double *)(arg1 + 0x1b0) + 0xc) * 2;
                *(undefined8 *)((int64_t)*(undefined **)0x20 + -0x170) = 0x8003cc7;
                _obj.quadrangles = func_0x0802aa0f(_obj.quadrangles, (int64_t)"\x06"._0_4_ * 0xa0, "\x06");
                iVar11 = (int64_t)_obj.current_quadrangle;
            }
            uVar2 = *(undefined4 *)(arg2 + 4);
            uVar3 = *(undefined4 *)(arg2 + 8);
            uVar4 = *(undefined4 *)(arg2 + 0xc);
            _obj.current_quadrangle = (int32_t)iVar11 + 1;
            unaff_RBP = (double *)(iVar11 * 0xa0 + _obj.quadrangles);
            *(undefined4 *)(unaff_RBP + 2) = *(undefined4 *)arg2;
            *(undefined4 *)((int64_t)unaff_RBP + 0x14) = uVar2;
            *(undefined4 *)(unaff_RBP + 3) = uVar3;
            *(undefined4 *)((int64_t)unaff_RBP + 0x1c) = uVar4;
            uVar2 = *(undefined4 *)(arg2 + 0x14);
            uVar3 = *(undefined4 *)(arg2 + 0x18);
            uVar4 = *(undefined4 *)(arg2 + 0x1c);
            *(undefined4 *)(unaff_RBP + 4) = *(undefined4 *)(arg2 + 0x10);
            *(undefined4 *)((int64_t)unaff_RBP + 0x24) = uVar2;
            *(undefined4 *)(unaff_RBP + 5) = uVar3;
            *(undefined4 *)((int64_t)unaff_RBP + 0x2c) = uVar4;
            dVar16 = *(double *)(arg2 + 0x28);
            unaff_RBP[6] = *(double *)(arg2 + 0x20);
            unaff_RBP[7] = dVar16;
            dVar16 = *(double *)(arg2 + 0x38);
            unaff_RBP[8] = *(double *)(arg2 + 0x30);
            unaff_RBP[9] = dVar16;
            dVar16 = *(double *)(arg2 + 0x48);
            unaff_RBP[10] = *(double *)(arg2 + 0x40);
            unaff_RBP[0xb] = dVar16;
            dVar16 = *(double *)(arg2 + 0x58);
            unaff_RBP[0xc] = *(double *)(arg2 + 0x50);
            unaff_RBP[0xd] = dVar16;
            dVar16 = *(double *)(arg2 + 0x68);
            unaff_RBP[0xe] = *(double *)(arg2 + 0x60);
            unaff_RBP[0xf] = dVar16;
            dVar16 = *(double *)(arg2 + 0x78);
            unaff_RBP[0x10] = *(double *)(arg2 + 0x70);
            unaff_RBP[0x11] = dVar16;
code_r0x0800398d:
            pdVar13 = (double *)(arg1 + 0x138);
            *(undefined8 *)((int64_t)*(undefined **)0x20 + -0x170) = 0x800399a;
            uVar5 = func_0x0802aa0f();
            *(undefined2 *)(unaff_RBP + 0x13) = uVar5;
        }
        pdVar12 = (double *)0x0;
        dVar16 = *(double *)(arg2 + 0x60);
        dVar1 = *(double *)(arg2 + 0x40);
        *(undefined2 *)((int64_t)unaff_RBP + 0x9a) = 0;
        if (((dVar16 == dVar1) && (dVar16 = *(double *)(arg2 + 0x68), dVar16 == *(double *)(arg2 + 0x48))) &&
           (dVar16 = *(double *)(arg2 + 0x70), dVar16 == *(double *)(arg2 + 0x50))) {
            *(undefined2 *)((int64_t)unaff_RBP + 0x9a) = 3;
        }
        iVar6 = (int32_t)unaff_R13;
        unaff_R12 = (double *)arg1;
        if (iVar6 < 5) {
            if ((double *)arg1 != (double *)0x0) goto code_r0x080039f3;
code_r0x08003b93:
            if (*(double *)(arg2 + 0x18) == _reloc..LC26) {
                *unaff_RBP = _reloc..LC11;
            } else {
                *(int32_t *)(unaff_RBP + 0x12) = (int32_t)(int64_t)*(double *)(arg2 + 0x18);
                *unaff_RBP = _reloc..LC12;
            }
            *(int16_t *)(unaff_RBP + 0x13) = (int16_t)(int32_t)*(double *)(arg2 + 0x38);
        } else {
            iVar10 = iVar6 + "\x01"._16_4_;
            if ("\x01"._8_4_ <= iVar10) {
                "\x01"._8_4_ = iVar6 + "\x01"._8_4_ * 2;
                *(undefined8 *)((int64_t)*(undefined **)0x20 + -0x170) = 0x8003d19;
                _obj.polygonlist = func_0x0802aa0f(dVar16, _obj.polygonlist, (int64_t)"\x01"._8_4_ << 5, 0);
                iVar10 = iVar6 + "\x01"._16_4_;
            }
            iVar11 = _obj.polygonlist;
            iVar7 = (int64_t)"\x01"._16_4_;
            "\x01"._12_4_ = "\x01"._16_4_;
            *(int32_t *)(unaff_RBP + 2) = "\x01"._16_4_;
            "\x01"._16_4_ = iVar10;
            *(undefined2 *)((int64_t)unaff_RBP + 0x9a) = 5;
            pdVar13 = (double *)(iVar11 + iVar7 * 0x20);
            *(undefined8 *)((int64_t)*(undefined **)0x20 + -0x170) = 0x8003b7c;
            pdVar12 = (double *)arg2;
            iVar11 = func_0x0802aa0f(pdVar13, arg2, (int64_t)iVar6 << 5);
            *(double *)(iVar11 + 0x58) = (double)iVar6;
            if ((double *)arg1 == (double *)0x0) goto code_r0x08003b93;
code_r0x080039f3:
            if (*(char *)(arg1 + 0x183) == '\0') {
                if (*(int32_t *)(arg1 + 0x60) == 6) {
                    dVar16 = *(double *)(arg2 + 0x30);
                    *(undefined8 *)((int64_t)*(undefined **)0x20 + -0x170) = 0x8003d42;
                    func_0x0802aa0f(dVar16);
                    "\x01"[0] = '\0';
                    *unaff_RBP = extraout_XMM0_Qa;
                    if (_reloc..LC1 < _segment.ehdr) {
code_r0x08003c95:
                        *(undefined8 *)((int64_t)*(undefined **)0x20 + -0x170) = 0x8003c9d;
                        pdVar13 = unaff_RBP;
                        sym.illuminate_one_quadrangle(unaff_RBP, *(undefined *)((int64_t)*(undefined **)0x20 + -0x170));
                        unaff_R12 = (double *)arg1;
                    }
                } else {
                    iVar6 = *(int32_t *)(arg1 + 0x10);
                    if ((iVar6 == 0x928) || (iVar6 == 0x988)) {
                        iVar10 = (int32_t)*(double *)(arg2 + 0x18);
                        dVar16 = _reloc..LC12;
                        if (*(double *)(arg2 + 0x18) == _reloc..LC26) {
                            dVar16 = _reloc..LC11;
                        }
                        *unaff_RBP = dVar16;
                        if ((iVar6 == 0x928) && (0 < *(int32_t *)0x802ab83)) {
                            puVar8 = (undefined *)((int64_t)*(undefined **)0x20 + -0xf8);
                            pdVar13 = (double *)arg2;
                            do {
                                puVar9 = puVar8 + 0x40;
                                arg2 = (int64_t)(pdVar13 + 4);
                                *(double *)(puVar8 + 8) = *pdVar13;
                                *(double *)(puVar8 + 0x10) = pdVar13[1];
                                dVar16 = pdVar13[2];
                                *(double *)(puVar8 + 0x18) = dVar16;
                                puVar8 = puVar9;
                                pdVar13 = (double *)arg2;
                            } while ((undefined *)((int64_t)*(undefined **)0x20 + -0x38) != puVar9);
                            uVar15 = *(int32_t *)(arg1 + 0x188) + 1;
                            *(undefined8 *)((int64_t)*(undefined **)0x20 + -0x170) = 0x8003de9;
                            iVar6 = func_0x0802aa0f(dVar16, (undefined *)((int64_t)*(undefined **)0x20 + -0xf8), 
                                                    (undefined *)((int64_t)*(undefined **)0x20 + -0xb8), 
                                                    (undefined *)((int64_t)*(undefined **)0x20 + -0x78));
                            if (iVar6 < 0) {
                                uVar15 = uVar15 + *(int32_t *)0x802ab83;
                            }
                            arg1 = ZEXT48(uVar15);
                            *(undefined8 *)((int64_t)*(undefined **)0x20 + -0x170) = 0x8003dff;
                            pdVar12 = (double *)arg1;
                            func_0x0802aa0f();
                            iVar10 = *(int32_t *)((int64_t)*(undefined **)0x20 + -0x134);
                            pdVar13 = pdVar14;
                        }
                        dVar1 = _reloc..LC1;
                        dVar16 = _segment.ehdr;
                        *(int32_t *)(unaff_RBP + 0x12) = iVar10;
                        unaff_R12 = (double *)arg1;
                        if (dVar1 < dVar16) {
                            "\x01"[0] = '\x01';
                            *unaff_RBP = (double)iVar10;
                            goto code_r0x08003c95;
                        }
                    } else {
                        unaff_RBP[0x12] = (double)(double *)(arg1 + 0x148);
                        *unaff_RBP = _reloc..LC10;
                        unaff_R12 = (double *)(arg1 + 0x148);
                    }
                }
            } else {
                "\x01"[0] = '\x01';
                if (_reloc..LC1 < _segment.ehdr) {
                    *unaff_RBP = (double)*(int32_t *)(arg1 + 100);
                    *(undefined8 *)((int64_t)*(undefined **)0x20 + -0x170) = 0x8003cf5;
                    pdVar13 = unaff_RBP;
                    sym.illuminate_one_quadrangle(unaff_RBP, *(undefined *)((int64_t)*(undefined **)0x20 + -0x170));
                } else {
                    *(int32_t *)(unaff_RBP + 0x12) = *(int32_t *)(arg1 + 100);
                    *unaff_RBP = _reloc..LC12;
                }
            }
        }
        if (*(int64_t *)((int64_t)*(undefined **)0x20 + -0x30) == *(int64_t *)(in_FS_OFFSET + 0x28)) {
            return;
        }
        *(undefined8 *)((int64_t)*(undefined **)0x20 + -0x170) = 0x8003e0d;
        func_0x0802aa0f();
        arg3 = 4;
        unaff_RBX = (double *)arg2;
        *(undefined **)0x20 = (BADSPACEBASE *)((int64_t)*(undefined **)0x20 + -0x168);
        arg2 = (int64_t)pdVar12;
        arg1 = (int64_t)pdVar13;
    } while( true );
}


void sym.pm3d_reset_after_error(void)
{
    _obj.pm3d_plot_at = 0;
    func_0x0802aa0f(_obj.polygonlist);
    _obj.polygonlistsize = 0;
    _obj.current_polygon = 0;
    _obj.next_polygon = 0;
    _obj.polygonlist = 0;
    return;
}


double sym.filled_polygon(int64_t arg1, int64_t arg2, int64_t arg3)
{
    uint64_t *puVar1;
    uint64_t *puVar2;
    int32_t *piVar3;
    double *pdVar4;
    undefined8 uVar5;
    undefined8 *puVar6;
    int32_t iVar7;
    uint32_t uVar8;
    undefined4 uVar9;
    undefined4 *puVar10;
    double *pdVar11;
    int64_t iVar12;
    double *pdVar13;
    int64_t iVar14;
    double *pdVar15;
    int32_t iVar16;
    int64_t iVar17;
    int64_t iVar18;
    int32_t iVar19;
    int32_t iVar20;
    int32_t iVar21;
    uint64_t uVar22;
    int64_t in_FS_OFFSET;
    double dVar23;
    uint64_t extraout_XMM0_Qb;
    undefined in_XMM1 [16];
    double dVar24;
    double dVar25;
    undefined in_XMM2 [16];
    undefined auVar26 [16];
    double in_XMM3_Qa;
    double dVar27;
    double dVar28;
    double dVar29;
    double dVar30;
    double dStack80;
    double dStack72;
    int64_t iStack64;
    
    iVar16 = (int32_t)arg3;
    uVar22 = SEXT48(iVar16);
    iStack64 = *(int64_t *)(in_FS_OFFSET + 0x28);
    if (_obj.max_vertices.12697 < iVar16) {
        _obj.max_vertices.12697 = iVar16;
        _obj.icorners.12698 = (undefined4 *)func_0x0802aa0f(_obj.icorners.12698, (int64_t)(iVar16 * 2) * 0xc, "");
        ""._0_8_ = (undefined8 *)func_0x0802aa0f(""._0_8_, (int64_t)(_obj.max_vertices.12697 * 2) << 5, "");
    }
    dVar23 = _reloc.yscale3d;
    dVar25 = _reloc.sqrt;
    puVar6 = ""._0_8_;
    puVar10 = _obj.icorners.12698;
    if (((*(char *)0x8000009 == '\0') && (_obj.pm3d_plot_at != 0x62)) && (_obj.pm3d_plot_at != 0x74)) {
        uVar22 = arg3 & 0xffffffff;
        iVar21 = (int32_t)uVar22;
        iVar17 = ""._0_8_;
        if (""._8_4_ < iVar16) {
            ""._8_4_ = iVar21;
            iVar17 = func_0x0802aa0f(_reloc.yscale3d, _reloc.sqrt, ""._0_8_, (int64_t)iVar21 << 2, 0);
            puVar10 = _obj.icorners.12698;
        }
        in_XMM1 = ZEXT816((uint64_t)dVar25);
        ""._0_8_ = iVar17;
        _obj.icorners.12698 = puVar10;
        if (0 < iVar21) {
            pdVar13 = (double *)(arg1 + 0x10);
            iVar18 = 0;
            iVar20 = 0;
            iVar19 = 0;
            iVar16 = 0;
            do {
                while( true ) {
                    dVar24 = *pdVar13;
                    auVar26 = ZEXT816((uint64_t)dVar24);
                    if (dVar25 < dVar23) break;
                    if ((dVar24 < dVar23) || (dVar25 < dVar24)) goto code_r0x08000630;
code_r0x08000604:
                    *(undefined4 *)(iVar17 + iVar18 * 4) = 0;
code_r0x0800060b:
                    iVar18 = iVar18 + 1;
                    pdVar13 = pdVar13 + 4;
                    if (iVar21 <= (int32_t)iVar18) goto code_r0x08000658;
                }
                if ((dVar25 <= dVar24) && (dVar24 <= dVar23)) goto code_r0x08000604;
code_r0x08000630:
                dVar24 = *pdVar13;
                auVar26 = ZEXT816((uint64_t)dVar24);
                if (dVar24 <= dVar23) {
                    if (dVar24 < dVar25) {
                        *(undefined4 *)(iVar17 + iVar18 * 4) = 0xffffffff;
                        iVar16 = iVar16 + 1;
                        iVar20 = iVar20 + 1;
                    }
                    goto code_r0x0800060b;
                }
                *(undefined4 *)(iVar17 + iVar18 * 4) = 1;
                iVar18 = iVar18 + 1;
                iVar16 = iVar16 + 1;
                iVar19 = iVar19 + 1;
                pdVar13 = pdVar13 + 4;
            } while ((int32_t)iVar18 < iVar21);
code_r0x08000658:
            dVar24 = SUB168(auVar26, 0);
            if (iVar16 != 0) {
                if ((iVar21 == iVar20) || (iVar21 == iVar19)) goto code_r0x08000512;
                iVar18 = 1;
                iVar16 = 0;
                pdVar13 = (double *)arg1;
                do {
                    iVar19 = *(int32_t *)(iVar17 + -4 + iVar18 * 4);
                    iVar14 = (int64_t)((int32_t)iVar18 % iVar21);
                    iVar20 = *(int32_t *)(iVar17 + iVar14 * 4);
                    if (iVar19 == 0) {
    // WARNING: Load size is inaccurate
                        iVar12 = (int64_t)iVar16;
    // WARNING: Store size is inaccurate
                        *(undefined *)(puVar6 + iVar12 * 4) = *(undefined *)pdVar13;
    // WARNING: Load size is inaccurate
    // WARNING: Store size is inaccurate
                        *(undefined *)(puVar6 + iVar12 * 4 + 2) = *(undefined *)(pdVar13 + 2);
                        iVar7 = iVar16 + 1;
                        if (iVar20 != 0) {
                            pdVar15 = (double *)(iVar14 * 0x20 + arg1);
                            pdVar11 = (double *)(puVar6 + iVar12 * 4 + 4);
                            uVar22 = -(uint64_t)(dVar23 <= pdVar15[2]);
                            auVar26 = orpd(ZEXT816(~uVar22 & (uint64_t)dVar25), ZEXT816((uint64_t)dVar23 & uVar22));
                            dVar28 = (SUB168(auVar26, 0) - pdVar13[2]) / (pdVar15[2] - pdVar13[2]);
                            dVar24 = pdVar15[1];
                            *pdVar11 = (*pdVar15 - *pdVar13) * dVar28 + *pdVar13;
                            in_XMM3_Qa = pdVar13[1];
                            pdVar11[2] = SUB168(auVar26, 0);
                            in_XMM3_Qa = (dVar24 - in_XMM3_Qa) * dVar28 + in_XMM3_Qa;
                            pdVar11[1] = in_XMM3_Qa;
                            iVar7 = iVar16 + 2;
                        }
                    } else {
                        if (iVar20 == 0) {
                            uVar22 = -(uint64_t)(dVar23 <= pdVar13[2]);
                            pdVar15 = (double *)(iVar14 * 0x20 + arg1);
                            pdVar11 = (double *)(puVar6 + (int64_t)iVar16 * 4);
                            auVar26 = orpd(ZEXT816(~uVar22 & (uint64_t)dVar25), ZEXT816((uint64_t)dVar23 & uVar22));
                            dVar28 = (SUB168(auVar26, 0) - pdVar15[2]) / (pdVar13[2] - pdVar15[2]);
                            *pdVar11 = (*pdVar13 - *pdVar15) * dVar28 + *pdVar15;
                            in_XMM3_Qa = pdVar15[1];
                            dVar24 = pdVar13[1];
                            pdVar11[2] = SUB168(auVar26, 0);
                            in_XMM3_Qa = (dVar24 - in_XMM3_Qa) * dVar28 + in_XMM3_Qa;
                            pdVar11[1] = in_XMM3_Qa;
                            iVar7 = iVar16 + 1;
                        } else {
                            iVar7 = iVar16;
                            if (iVar19 * iVar20 < 0) {
                                pdVar11 = (double *)(arg1 + iVar14 * 0x20);
                                uVar22 = -(uint64_t)(dVar23 <= pdVar13[2]);
                                pdVar4 = (double *)(puVar6 + (int64_t)iVar16 * 4);
                                pdVar15 = (double *)(puVar6 + (int64_t)iVar16 * 4 + 4);
                                auVar26 = orpd(ZEXT816(~uVar22 & (uint64_t)dVar25), ZEXT816((uint64_t)dVar23 & uVar22));
                                dVar29 = SUB168(auVar26, 0);
                                dVar30 = (dVar29 - pdVar11[2]) / (pdVar13[2] - pdVar11[2]);
                                dVar27 = *pdVar11 + (*pdVar13 - *pdVar11) * dVar30;
                                in_XMM3_Qa = pdVar11[1];
                                *pdVar4 = dVar27;
                                dVar24 = pdVar13[1];
                                pdVar4[2] = dVar29;
                                dVar28 = pdVar11[2];
                                uVar22 = -(uint64_t)(dVar23 <= dVar28);
                                in_XMM3_Qa = (dVar24 - in_XMM3_Qa) * dVar30 + in_XMM3_Qa;
                                auVar26 = orpd(ZEXT816(~uVar22 & (uint64_t)dVar25), ZEXT816((uint64_t)dVar23 & uVar22));
                                pdVar4[1] = in_XMM3_Qa;
                                dVar28 = (SUB168(auVar26, 0) - dVar29) / (dVar28 - dVar29);
                                *pdVar15 = (*pdVar11 - dVar27) * dVar28 + dVar27;
                                dVar24 = pdVar11[1];
                                pdVar15[2] = SUB168(auVar26, 0);
                                dVar24 = (dVar24 - in_XMM3_Qa) * dVar28 + in_XMM3_Qa;
                                auVar26 = ZEXT816((uint64_t)dVar24);
                                pdVar15[1] = dVar24;
                                iVar7 = iVar16 + 2;
                            }
                        }
                    }
                    iVar16 = iVar7;
                    dVar24 = SUB168(auVar26, 0);
                    iVar18 = iVar18 + 1;
                    pdVar13 = pdVar13 + 4;
                } while ((uint64_t)(iVar21 - 1) + 2 != iVar18);
                if (iVar16 < 2) goto code_r0x08000512;
                uVar22 = SEXT48(iVar16);
                arg1 = (int64_t)""._0_8_;
            }
code_r0x0800040a:
            iVar17 = 0;
            do {
                puVar1 = (uint64_t *)(arg1 + 0x10);
                in_XMM2 = ZEXT816(*puVar1);
                puVar2 = (uint64_t *)(arg1 + 8);
                in_XMM1 = ZEXT816(*puVar2);
                uVar5 = *(undefined8 *)arg1;
                arg1 = arg1 + 0x20;
                func_0x0802aa0f(uVar5, *puVar2, *puVar1, &dStack80, &dStack72);
                puVar10 = _obj.icorners.12698;
                iVar18 = iVar17 + 1;
                piVar3 = _obj.icorners.12698 + iVar17 * 3;
                *piVar3 = (int32_t)dStack80;
                piVar3[1] = (int32_t)dStack72;
                iVar17 = iVar18;
            } while ((int32_t)iVar18 < (int32_t)uVar22);
        }
    } else {
        if (0 < iVar16) goto code_r0x0800040a;
    }
    if ((int32_t)arg2 == 0) {
        if (_reloc.default_fillstyle == 0) {
            puVar10[2] = 0x641;
        } else {
            uVar9 = func_0x0802aa0f(reloc.default_fillstyle);
            puVar10[2] = uVar9;
            puVar10 = _obj.icorners.12698;
        }
    } else {
        puVar10[2] = (int32_t)arg2;
    }
    dVar23 = (double)(**(code **)(_reloc.term + 0xe8))(uVar22 & 0xffffffff, puVar10);
    dVar24 = SUB168(in_XMM2, 0);
    dVar25 = SUB168(in_XMM1, 0);
    if (*(int32_t *)0x800002c != -3) {
        if (*(int32_t *)0x800002c != -7) {
            func_0x0802aa0f(0x8000028);
        }
        dVar23 = (double)(**(code **)(_reloc.term + 0x58))(*_obj.icorners.12698, _obj.icorners.12698[1]);
        dVar24 = SUB168(in_XMM2, 0);
        dVar25 = SUB168(in_XMM1, 0);
        uVar8 = (int32_t)uVar22 - 1;
        if (-1 < (int32_t)uVar8) {
            iVar17 = (int64_t)(int32_t)uVar8 * 0xc;
            do {
                puVar10 = (undefined4 *)((int64_t)_obj.icorners.12698 + iVar17);
                iVar17 = iVar17 + -0xc;
                dVar23 = (double)(**(code **)(_reloc.term + 0x60))(*puVar10, puVar10[1]);
                dVar24 = SUB168(in_XMM2, 0);
                dVar25 = SUB168(in_XMM1, 0);
            } while (iVar17 != (uVar22 - uVar8) * 0xc + -0x18);
        }
    }
code_r0x08000512:
    if (iStack64 == *(int64_t *)(in_FS_OFFSET + 0x28)) {
        return dVar23;
    }
    dVar23 = (double)func_0x0802aa0f();
    dVar28 = dVar23 * dVar25 * dVar24 * in_XMM3_Qa;
    if (dVar28 == 0.00000000) {
        return 0.00000000;
    }
    dVar27 = 0.00000000;
    iVar16 = (uint32_t)(dVar23 < 0.00000000) + (uint32_t)(dVar25 < 0.00000000) + (uint32_t)(dVar24 < 0.00000000) +
             (uint32_t)(in_XMM3_Qa < 0.00000000);
    if (2 < iVar16 - 1U) {
        dVar28 = (double)((uint64_t)dVar28 & _reloc..LC4);
        auVar26 = CONCAT88(extraout_XMM0_Qb & *(uint64_t *)0x80040c8, dVar28);
        auVar26 = sqrtsd(auVar26, auVar26);
        if (dVar28 < 0.00000000) {
            func_0x0802aa0f(dVar28, 0, SUB168(auVar26, 0));
            auVar26 = auVar26 & (undefined  [16])0xffffffffffffffff;
        }
        dVar25 = SUB168(auVar26, 0);
        auVar26 = sqrtsd(auVar26, auVar26);
        dVar27 = SUB168(auVar26, 0);
        if (dVar25 < 0.00000000) {
            func_0x0802aa0f(dVar25, dVar27, dVar25);
        }
        if (iVar16 != 0) {
            return (double)((uint64_t)dVar27 ^ _reloc..LC5);
        }
    }
    return dVar27;
}


 pdg  pdg  pdg @ pdg @ pdg @  pdg @  pdg @ s pdg @ s pdg @ sy pdg @ sy pdg @ sym pdg @ sym pdg @ sym. pdg @ sym. pdg @ sym.g pdg @ sym.g pdg @ sym.ge pdg @ sym.ge pdg @ sym.geo pdg @ sym.geo pdg @ sym.geom pdg @ sym.geom pdg @ sym.geome pdg @ sym.geome pdg @ sym.geomea pdg @ sym.geomea pdg @ sym.geomean pdg @ sym.geomean pdg @ sym.geomean4 pdg @ sym.geomean4Ghidra Decompiler Error: Deleting integrated varnode


