

// WARNING: Could not reconcile some variable overlaps

void sym.parse_unary_expression
               (undefined8 placeholder_0, undefined8 placeholder_1, int64_t arg9, int64_t arg10, int64_t arg11)
{
    undefined4 uVar1;
    uint64_t uVar2;
    int32_t iVar3;
    int32_t iVar4;
    uint64_t *puVar5;
    undefined4 *puVar6;
    int64_t iVar7;
    undefined *puVar8;
    undefined8 *puVar9;
    undefined8 uVar10;
    undefined8 *puVar11;
    int32_t *piVar12;
    int64_t *piVar13;
    int64_t iVar14;
    undefined8 *unaff_RBP;
    uint8_t *puVar15;
    uint8_t *puVar16;
    uint32_t uVar17;
    uint8_t *puVar18;
    int64_t in_FS_OFFSET;
    bool bVar19;
    undefined uVar20;
    undefined uVar21;
    bool bVar22;
    undefined uVar23;
    uint8_t uVar24;
    undefined8 placeholder_0_00;
    undefined8 placeholder_0_01;
    undefined8 placeholder_0_02;
    undefined8 placeholder_0_03;
    undefined8 placeholder_0_04;
    undefined8 placeholder_0_05;
    undefined8 placeholder_0_06;
    undefined8 in_XMM1_Qb;
    undefined auVar25 [16];
    undefined8 in_XMM2_Qb;
    undefined auVar26 [16];
    undefined8 in_XMM3_Qb;
    undefined auVar27 [16];
    undefined8 in_XMM4_Qb;
    undefined auVar28 [16];
    undefined auStack72 [16];
    undefined8 uStack56;
    int64_t iStack48;
    
    auVar28 = CONCAT88(in_XMM4_Qb, arg11);
    auVar27 = CONCAT88(in_XMM3_Qb, arg10);
    auVar26 = CONCAT88(in_XMM2_Qb, arg9);
    auVar25 = CONCAT88(in_XMM1_Qb, placeholder_1);
    uVar24 = 0;
    iVar4 = 0x8002ae6;
    iStack48 = *(int64_t *)(in_FS_OFFSET + 0x28);
    while (iVar3 = func_0x0801ad3d(_reloc.c_token, reloc..LC6), iVar3 == 0) {
        iVar3 = func_0x0801ad3d(_reloc.c_token, reloc..LC7);
        if (iVar3 != 0) {
            _reloc.c_token = _reloc.c_token + 1;
            sym.parse_unary_expression
                      (placeholder_0_00, SUB168(auVar25, 0), SUB168(auVar26, 0), SUB168(auVar27, 0), SUB168(auVar28, 0))
            ;
            sym.add_action(10);
            goto code_r0x080003bf;
        }
        iVar3 = func_0x0801ad3d(_reloc.c_token, reloc..LC8);
        if (iVar3 != 0) {
            _reloc.c_token = _reloc.c_token + 1;
            sym.parse_unary_expression
                      (placeholder_0_01, SUB168(auVar25, 0), SUB168(auVar26, 0), SUB168(auVar27, 0), SUB168(auVar28, 0))
            ;
            uVar2 = _reloc..LC9;
            puVar5 = (uint64_t *)(_obj.at + (int64_t)*_obj.at * 8);
            if (*(int32_t *)(puVar5 + -3) == 1) {
                if (*(int32_t *)(puVar5 + -2) == 1) {
                    puVar5[-1] = -puVar5[-1];
                    goto code_r0x080003bf;
                }
                if (*(int32_t *)(puVar5 + -2) == 2) {
                    auVar25 = ZEXT816(_reloc..LC9);
                    puVar5[-1] = puVar5[-1] ^ _reloc..LC9;
                    *puVar5 = *puVar5 ^ uVar2;
                    goto code_r0x080003bf;
                }
            }
            sym.add_action(0xb);
            goto code_r0x080003bf;
        }
        iVar3 = func_0x0801ad3d(_reloc.c_token, reloc..LC10);
        if (iVar3 == 0) {
            iVar3 = func_0x0801ad3d(_reloc.c_token, reloc..LC11);
            if (iVar3 != 0) {
                _reloc.c_token = _reloc.c_token + 1;
                sym.parse_expression();
                while (iVar4 = func_0x0801ad3d(_reloc.c_token, reloc..LC12), iVar4 != 0) {
                    _reloc.c_token = _reloc.c_token + 1;
                    sym.add_action(5);
                    sym.parse_expression();
                }
                iVar4 = func_0x0801ad3d(_reloc.c_token, reloc..LC13);
                if (iVar4 != 0) {
                    _reloc.c_token = _reloc.c_token + 1;
                    uVar17 = _reloc.c_token;
                    goto code_r0x08000667;
                }
                goto code_r0x08000f3d;
            }
            iVar3 = func_0x0801ad3d(_reloc.c_token, reloc..LC15);
            if (iVar3 != 0) {
                _reloc.c_token = _reloc.c_token + 1;
                iVar4 = func_0x0801ad3d();
                if (iVar4 == 0) {
                    iVar4 = func_0x0801ad3d(_reloc.c_token + 1, reloc..LC16);
                    if (iVar4 == 0) goto code_r0x08000f4f;
                    _reloc.c_token = _reloc.c_token - 1;
                    func_0x0801ad3d();
                    iVar7 = func_0x0801ad3d();
                    if (iVar7 != 0) {
                        piVar13 = (int64_t *)sym.add_action(0);
                        *piVar13 = iVar7;
                        uVar17 = _reloc.c_token;
                        goto code_r0x08000667;
                    }
                    func_0x0801ad3d(_reloc.c_token - 2, reloc..LC17);
                    goto code_r0x08000f3d;
                }
                iVar7 = (int64_t)(int32_t)_reloc.c_token;
                _reloc.c_token = _reloc.c_token + 1;
                iVar7 = _reloc.token + iVar7 * 0x28;
    // WARNING: Load size is inaccurate
                auVar26 = *(undefined *)(iVar7 + 8);
                uStack56 = *(undefined8 *)(iVar7 + 0x18);
                iVar14 = *(int64_t *)(iVar7 + 0x10);
                auStack72 = auVar26;
                if ((*(int32_t *)(iVar7 + 8) != 1) || (iVar14 < 0)) goto code_r0x0800100d;
                if (_reloc.at_highest_column_used < iVar14) {
                    _reloc.at_highest_column_used = (int32_t)iVar14;
                }
                puVar8 = (undefined *)sym.add_action(0x21);
                auStack72 = CONCAT124(auStack72._4_12_, 1);
                auStack72 = CONCAT88(iVar14, auStack72._0_8_);
    // WARNING: Store size is inaccurate
                *(undefined *)puVar8 = auStack72;
                *(undefined8 *)(puVar8 + 0x10) = uStack56;
                auVar27 = auStack72;
                uVar17 = _reloc.c_token;
                goto code_r0x08000667;
            }
            iVar3 = func_0x0801ad3d(_reloc.c_token, reloc..LC20);
            if (iVar3 != 0) {
                _reloc.c_token = _reloc.c_token + 1;
                iVar4 = func_0x0801ad3d(_reloc.c_token, reloc..LC15);
                if (iVar4 == 0) {
                    _reloc.c_token = _reloc.c_token + 1;
                    iVar7 = func_0x0801ad3d();
                    if (*(int32_t *)(iVar7 + 0x10) != 5) {
                        func_0x0801ad3d(_reloc.c_token - 1, "not an array");
code_r0x08000ac0:
                        iVar4 = func_0x0801ad3d(_reloc.c_token);
                        if (iVar4 == 0) goto code_r0x0800101b;
                        puVar6 = (undefined4 *)sym.add_action(1);
                        *puVar6 = 3;
                        uVar17 = _reloc.c_token;
                        *(undefined8 *)(puVar6 + 2) = 0;
                        func_0x0801ad3d(puVar6 + 2, uVar17, uVar17);
                        _reloc.c_token = _reloc.c_token + 1;
                        uVar17 = _reloc.c_token;
                        goto code_r0x08000667;
                    }
                } else {
                    func_0x0801ad3d();
                    iVar7 = func_0x0801ad3d();
                    if (iVar7 == 0) {
                        piVar12 = (int32_t *)func_0x0801ad3d(_reloc.c_token - 1, "no such datablock");
                        goto code_r0x08000eff;
                    }
                }
                piVar13 = (int64_t *)sym.add_action(0);
                uVar17 = _reloc.c_token;
                *piVar13 = iVar7;
                iVar4 = func_0x0801ad3d(uVar17, reloc..LC20);
                if (iVar4 == 0) goto code_r0x08000ffb;
                _reloc.c_token = _reloc.c_token + 1;
                sym.add_action(0x27);
                uVar17 = _reloc.c_token;
                goto code_r0x08000667;
            }
            iVar3 = func_0x0801ad3d();
            if (iVar3 != 0) {
                puVar8 = (undefined *)sym.add_action(1);
                iVar7 = _reloc.token + (int64_t)(int32_t)_reloc.c_token * 0x28;
                uVar17 = _reloc.c_token + 1;
    // WARNING: Load size is inaccurate
                auVar28 = *(undefined *)(iVar7 + 8);
    // WARNING: Store size is inaccurate
                *(undefined *)puVar8 = auVar28;
                _reloc.c_token = uVar17;
                *(undefined8 *)(puVar8 + 0x10) = *(undefined8 *)(iVar7 + 0x18);
                goto code_r0x08000667;
            }
            iVar3 = func_0x0801ad3d();
            if (iVar3 == 0) goto code_r0x08000ac0;
            iVar3 = func_0x0801ad3d(_reloc.c_token + 1, reloc..LC11);
            if (iVar3 == 0) {
                iVar3 = func_0x0801ad3d(_reloc.c_token, reloc..LC27);
                if ((iVar3 == 0) || (iVar3 = func_0x0801ad3d(_reloc.c_token + 1, reloc..LC16), iVar3 == 0)) {
                    unaff_RBP = (undefined8 *)(uint64_t)_reloc.c_token;
                    if (_reloc.dummy_func == 0) goto code_r0x08000c9c;
                    iVar4 = func_0x0801ad3d(_reloc.c_token, 0x8000000);
                    if (iVar4 == 0) goto code_r0x08000c4e;
                    _reloc.c_token = _reloc.c_token + 1;
                    piVar13 = (int64_t *)sym.add_action(2);
                    uVar17 = _reloc.c_token;
                    *piVar13 = _reloc.dummy_func;
                    _segment.ehdr = _segment.ehdr + 1;
                } else {
                    auStack72 = auStack72 & (undefined  [16])0xffffffffffffffff;
                    _reloc.c_token = _reloc.c_token + 2;
                    iVar3 = func_0x0801ad3d();
                    if (iVar3 == 0) {
code_r0x08000f6f:
                        func_0x0801ad3d(_reloc.c_token, "Expecting \'sum [<var> = <start>:<end>] <expression>\'\n");
                        goto code_r0x08000f81;
                    }
                    func_0x0801ad3d(auStack72, _reloc.c_token, _reloc.c_token);
                    func_0x0801ad3d(_reloc.c_token);
                    uVar10 = sym.add_action(1);
                    func_0x0801ad3d(uVar10, auStack72._0_8_);
                    _reloc.c_token = _reloc.c_token + 1;
                    iVar3 = func_0x0801ad3d(_reloc.c_token, reloc..LC29);
                    if (iVar3 == 0) goto code_r0x08000f6f;
                    _reloc.c_token = _reloc.c_token + 1;
                    iVar3 = sym.parse_assignment_expression();
                    if (iVar3 == 0) {
                        sym.parse_expression.part.0();
                    }
                    iVar3 = func_0x0801ad3d(_reloc.c_token, reloc..LC30);
                    if (iVar3 == 0) goto code_r0x08000f6f;
                    _reloc.c_token = _reloc.c_token + 1;
                    iVar3 = sym.parse_assignment_expression();
                    if (iVar3 == 0) {
                        sym.parse_expression.part.0();
                    }
                    iVar3 = func_0x0801ad3d(_reloc.c_token, reloc..LC31);
                    piVar12 = _obj.at;
                    uVar1 = _reloc..LC12;
                    if (iVar3 == 0) goto code_r0x08000f6f;
                    _reloc.c_token = _reloc.c_token + 1;
                    _obj.at = (int32_t *)0x0;
                    puVar11 = (undefined8 *)func_0x0801ad3d(0x148, reloc..LC27);
                    *puVar11 = 0;
                    puVar11[1] = 0;
                    uVar10 = func_0x0801ad3d();
                    puVar11[3] = 0;
                    puVar11[2] = uVar10;
                    *(undefined4 *)(puVar11 + 4) = 0;
                    puVar9 = puVar11 + 5;
                    do {
                        unaff_RBP = puVar9 + 3;
                        func_0x0801ad3d(puVar9, 0);
                        puVar9 = unaff_RBP;
                    } while (puVar11 + 0x29 != unaff_RBP);
                    _reloc..LC12 = uVar1;
                    _obj.at = piVar12;
                    puVar9 = (undefined8 *)sym.add_action(8);
                    uVar17 = _reloc.c_token;
                    *puVar9 = puVar11;
                }
                goto code_r0x08000667;
            }
            if (*(int64_t *)0x801b055 == 0) goto code_r0x08000b17;
            piVar13 = (int64_t *)0x801b065;
            unaff_RBP = (undefined8 *)0x2d;
            goto code_r0x08000998;
        }
        _reloc.c_token = _reloc.c_token + 1;
    }
    _reloc.c_token = _reloc.c_token + 1;
    sym.parse_unary_expression
              (placeholder_0_02, SUB168(auVar25, 0), SUB168(auVar26, 0), SUB168(auVar27, 0), SUB168(auVar28, 0));
    sym.add_action(9);
code_r0x080003bf:
    if (iStack48 == *(int64_t *)(in_FS_OFFSET + 0x28)) {
        return;
    }
    func_0x0801ad3d();
code_r0x08000ffb:
    func_0x0801ad3d(_reloc.c_token, reloc..LC23);
code_r0x0800100d:
    func_0x0801ad3d();
code_r0x0800101b:
    func_0x0801ad3d(_reloc.c_token, reloc..LC32);
    while( true ) {
        while( true ) {
            while (iVar4 = func_0x0801ad3d(_reloc.c_token, reloc..LC34), iVar4 != 0) {
                _reloc.c_token = _reloc.c_token + 1;
                sym.parse_unary_expression
                          (placeholder_0_04, SUB168(auVar25, 0), SUB168(auVar26, 0), SUB168(auVar27, 0), 
                           SUB168(auVar28, 0));
                sym.add_action(0x1b);
            }
            iVar4 = func_0x0801ad3d(_reloc.c_token, reloc..LC37);
            if (iVar4 == 0) break;
            _reloc.c_token = _reloc.c_token + 1;
            sym.parse_unary_expression
                      (placeholder_0_05, SUB168(auVar25, 0), SUB168(auVar26, 0), SUB168(auVar27, 0), SUB168(auVar28, 0))
            ;
            sym.add_action(0x1c);
        }
        iVar4 = func_0x0801ad3d(_reloc.c_token, reloc..LC38);
        if (iVar4 == 0) break;
        _reloc.c_token = _reloc.c_token + 1;
        sym.parse_unary_expression
                  (placeholder_0_06, SUB168(auVar25, 0), SUB168(auVar26, 0), SUB168(auVar27, 0), SUB168(auVar28, 0));
        sym.add_action(0x1d);
    }
    return;
code_r0x08000998:
    iVar4 = func_0x0801ad3d();
    if (iVar4 == 0) {
        iVar7 = *piVar13;
        piVar13 = piVar13 + 2;
        unaff_RBP = (undefined8 *)(uint64_t)((int32_t)unaff_RBP + 1);
        if (iVar7 == 0) goto code_r0x08000b17;
        goto code_r0x08000998;
    }
    _reloc.c_token = _reloc.c_token + 2;
    sym.parse_expression();
    iVar7 = 1;
    while( true ) {
        iVar4 = func_0x0801ad3d(_reloc.c_token, reloc..LC12);
        if (iVar4 == 0) break;
        _reloc.c_token = _reloc.c_token + 1;
        sym.parse_expression();
        iVar7 = iVar7 + 1;
    }
    iVar4 = func_0x0801ad3d(_reloc.c_token, reloc..LC13);
    if (iVar4 == 0) goto code_r0x08000f3d;
    _reloc.c_token = _reloc.c_token + 1;
    iVar14 = 8;
    bVar19 = false;
    bVar22 = unaff_RBP == (undefined8 *)0x0;
    puVar16 = *(uint8_t **)(reloc.ft + (int64_t)unaff_RBP * 0x10);
    puVar15 = puVar16;
    puVar18 = (uint8_t *)"sprintf";
    do {
        if (iVar14 == 0) break;
        iVar14 = iVar14 + -1;
        bVar19 = *puVar15 < *puVar18;
        bVar22 = *puVar15 == *puVar18;
        puVar15 = puVar15 + (uint64_t)uVar24 * -2 + 1;
        puVar18 = puVar18 + (uint64_t)uVar24 * -2 + 1;
    } while (bVar22);
    uVar20 = 0;
    uVar23 = (!bVar19 && !bVar22) == bVar19;
    if ((bool)uVar23) {
        puVar6 = (undefined4 *)sym.add_action(1);
        *puVar6 = 1;
        *(int64_t *)(puVar6 + 2) = iVar7;
    }
    iVar14 = 0xb;
    puVar15 = puVar16;
    puVar18 = (uint8_t *)"timecolumn";
    do {
        if (iVar14 == 0) break;
        iVar14 = iVar14 + -1;
        uVar20 = *puVar15 < *puVar18;
        uVar23 = *puVar15 == *puVar18;
        puVar15 = puVar15 + (uint64_t)uVar24 * -2 + 1;
        puVar18 = puVar18 + (uint64_t)uVar24 * -2 + 1;
    } while ((bool)uVar23);
    uVar21 = 0;
    uVar20 = (!(bool)uVar20 && !(bool)uVar23) == (bool)uVar20;
    if ((bool)uVar20) {
        puVar6 = (undefined4 *)sym.add_action(1);
        *puVar6 = 1;
        *(int64_t *)(puVar6 + 2) = iVar7;
    }
    iVar7 = 7;
    puVar15 = (uint8_t *)"column";
    do {
        if (iVar7 == 0) break;
        iVar7 = iVar7 + -1;
        uVar21 = *puVar16 < *puVar15;
        uVar20 = *puVar16 == *puVar15;
        puVar16 = puVar16 + (uint64_t)uVar24 * -2 + 1;
        puVar15 = puVar15 + (uint64_t)uVar24 * -2 + 1;
    } while ((bool)uVar20);
    if ((!(bool)uVar21 && !(bool)uVar20) == (bool)uVar21) goto code_r0x08000e68;
    goto code_r0x08000a6f;
code_r0x08000b17:
    _reloc.c_token = _reloc.c_token + 2;
    unaff_RBP = (undefined8 *)0x6;
    sym.parse_expression();
    iVar4 = func_0x0801ad3d(_reloc.c_token, reloc..LC12);
    if (iVar4 != 0) {
        iVar7 = 1;
        while( true ) {
            iVar4 = func_0x0801ad3d(_reloc.c_token, reloc..LC12);
            if (iVar4 == 0) break;
            _reloc.c_token = _reloc.c_token + 1;
            sym.parse_expression();
            iVar7 = iVar7 + 1;
        }
        puVar6 = (undefined4 *)sym.add_action(1);
        *puVar6 = 1;
        *(int64_t *)(puVar6 + 2) = iVar7;
        unaff_RBP = (undefined8 *)0x7;
    }
    iVar4 = func_0x0801ad3d(_reloc.c_token, reloc..LC13);
    if (iVar4 == 0) {
code_r0x08000f3d:
        func_0x0801ad3d(_reloc.c_token, reloc..LC14);
code_r0x08000f4f:
        func_0x0801ad3d(_reloc.c_token, "Column number or datablock line expected");
        goto code_r0x08000f63;
    }
    _reloc.c_token = _reloc.c_token + 1;
    puVar9 = (undefined8 *)sym.add_action((int64_t)unaff_RBP);
    uVar10 = func_0x0801ad3d();
    uVar17 = _reloc.c_token;
    *puVar9 = uVar10;
code_r0x08000667:
    do {
        while( true ) {
            while (iVar4 = func_0x0801ad3d(uVar17, reloc..LC6), iVar4 != 0) {
                _reloc.c_token = _reloc.c_token + 1;
                sym.add_action(0x1f);
                uVar17 = _reloc.c_token;
            }
            iVar4 = func_0x0801ad3d(_reloc.c_token, reloc..LC33);
            if (iVar4 == 0) break;
            _reloc.c_token = _reloc.c_token + 1;
            sym.parse_unary_expression
                      (placeholder_0_03, SUB168(auVar25, 0), SUB168(auVar26, 0), SUB168(auVar27, 0), SUB168(auVar28, 0))
            ;
            sym.add_action(0x1e);
            uVar17 = _reloc.c_token;
        }
        iVar4 = func_0x0801ad3d(_reloc.c_token, reloc..LC16);
        if ((iVar4 == 0) || (iVar4 = func_0x0801ad3d(), iVar4 != 0)) goto code_r0x080003bf;
        _reloc.c_token = _reloc.c_token + 1;
        iVar4 = func_0x0801ad3d(_reloc.c_token, reloc..LC34);
        if ((iVar4 == 0) && (iVar4 = func_0x0801ad3d(_reloc.c_token, reloc..LC30), iVar4 == 0)) {
            sym.parse_expression();
code_r0x08000795:
            iVar4 = func_0x0801ad3d(_reloc.c_token, reloc..LC31);
        } else {
            puVar6 = (undefined4 *)sym.add_action(1);
            *puVar6 = 1;
            uVar17 = _reloc.c_token;
            *(undefined8 *)(puVar6 + 2) = 1;
            iVar4 = func_0x0801ad3d(uVar17, reloc..LC34);
            if (iVar4 == 0) goto code_r0x08000795;
            _reloc.c_token = _reloc.c_token + 1;
            iVar4 = func_0x0801ad3d(_reloc.c_token, reloc..LC31);
        }
        if (iVar4 == 0) {
            iVar4 = func_0x0801ad3d(_reloc.c_token, reloc..LC30);
            if (iVar4 == 0) {
                func_0x0801ad3d(_reloc.c_token, reloc..LC35);
code_r0x08000e68:
                piVar12 = _obj.at + (int64_t)*_obj.at * 8;
                if (piVar12[-6] == 1) {
code_r0x08000eff:
                    if (piVar12[-4] == 3) {
code_r0x08000f63:
                        reloc.parse_1st_row_as_headers = (code)0x1;
                    } else {
                        if ((piVar12[-4] == 1) &&
                           (iVar7 = *(int64_t *)(piVar12 + -2), _reloc.at_highest_column_used < iVar7))
                        goto code_r0x08000eab;
                    }
                } else {
                    if ((piVar12[-6] == 0) &&
                       ((*(int32_t *)(*(int64_t *)(piVar12 + -4) + 0x10) == 1 &&
                        (iVar7 = *(int64_t *)(*(int64_t *)(piVar12 + -4) + 0x18), _reloc.at_highest_column_used < iVar7)
                        ))) {
code_r0x08000eab:
                        _reloc.at_highest_column_used = (int32_t)iVar7;
                    }
                }
code_r0x08000a6f:
                sym.add_action((uint64_t)unaff_RBP & 0xffffffff);
                uVar17 = _reloc.c_token;
            } else {
                _reloc.c_token = _reloc.c_token + 1;
                iVar4 = func_0x0801ad3d(_reloc.c_token, reloc..LC34);
                if ((iVar4 == 0) && (iVar4 = func_0x0801ad3d(_reloc.c_token, reloc..LC31), iVar4 == 0)) {
                    sym.parse_expression();
                } else {
                    puVar6 = (undefined4 *)sym.add_action(1);
                    *puVar6 = 1;
                    uVar17 = _reloc.c_token;
                    *(undefined8 *)(puVar6 + 2) = 0xffff;
                    iVar4 = func_0x0801ad3d(uVar17, reloc..LC34);
                    if (iVar4 != 0) {
                        _reloc.c_token = _reloc.c_token + 1;
                    }
                }
                iVar4 = func_0x0801ad3d(_reloc.c_token, reloc..LC31);
                if (iVar4 == 0) {
                    func_0x0801ad3d(_reloc.c_token, reloc..LC36);
code_r0x08000c4e:
                    iVar4 = 2;
                    unaff_RBP = (undefined8 *)0x8000066;
                    iVar3 = func_0x0801ad3d(_reloc.c_token, 0x8000033);
                    if (iVar3 == 0) {
                        do {
                            iVar3 = func_0x0801ad3d(_reloc.c_token, unaff_RBP);
                            if (iVar3 != 0) goto code_r0x08000f81;
                            iVar4 = iVar4 + 1;
                            unaff_RBP = (undefined8 *)((int64_t)unaff_RBP + 0x33);
                        } while (iVar4 != 0xc);
                        unaff_RBP = (undefined8 *)(uint64_t)_reloc.c_token;
code_r0x08000c9c:
                        puVar9 = (undefined8 *)sym.add_action(0);
                        uVar10 = func_0x0801ad3d();
                        *puVar9 = uVar10;
                        _reloc.c_token = _reloc.c_token + 1;
                        uVar17 = _reloc.c_token;
                    } else {
                        _reloc.c_token = _reloc.c_token + 1;
                        piVar13 = (int64_t *)sym.add_action(3);
                        uVar17 = _reloc.c_token;
                        *piVar13 = _reloc.dummy_func;
                        *(int32_t *)0x8000004 = *(int32_t *)0x8000004 + 1;
                    }
                } else {
                    _reloc.c_token = _reloc.c_token + 1;
                    sym.add_action(0x25);
                    uVar17 = _reloc.c_token;
                }
            }
        } else {
            _reloc.c_token = _reloc.c_token + 1;
            sym.add_action(0x26);
            uVar17 = _reloc.c_token;
        }
    } while( true );
code_r0x08000f81:
    _reloc.c_token = _reloc.c_token + 1;
    puVar6 = (undefined4 *)sym.add_action(1);
    *puVar6 = 1;
    *(int64_t *)(puVar6 + 2) = (int64_t)iVar4;
    piVar13 = (int64_t *)sym.add_action(4);
    uVar17 = _reloc.c_token;
    *piVar13 = _reloc.dummy_func;
    piVar12 = (int32_t *)((int64_t)iVar4 * 4 + 0x8000000);
    *piVar12 = *piVar12 + 1;
    goto code_r0x08000667;
}




void sym.parse_additive_expression
               (undefined8 param_1, undefined8 param_2, int64_t param_3, int64_t param_4, int64_t param_5)
{
    int32_t iVar1;
    undefined8 placeholder_0;
    undefined8 placeholder_0_00;
    undefined8 placeholder_0_01;
    
    while( true ) {
        while (iVar1 = func_0x0801ad3d(_reloc.c_token, reloc..LC39), iVar1 != 0) {
            _reloc.c_token = _reloc.c_token + 1;
            sym.parse_unary_expression(placeholder_0, param_2, param_3, param_4, param_5);
            sym.parse_multiplicative_expression();
            sym.add_action(0x22);
        }
        if ((reloc.string_result_only != (code)0x0) && (_obj.parse_recursion_level == 1)) break;
        iVar1 = func_0x0801ad3d(_reloc.c_token, reloc..LC10);
        if (iVar1 == 0) {
            iVar1 = func_0x0801ad3d(_reloc.c_token, reloc..LC8);
            if (iVar1 == 0) {
                return;
            }
            _reloc.c_token = _reloc.c_token + 1;
            sym.parse_unary_expression(placeholder_0_01, param_2, param_3, param_4, param_5);
            sym.parse_multiplicative_expression();
            sym.add_action(0x1a);
        } else {
            _reloc.c_token = _reloc.c_token + 1;
            sym.parse_unary_expression(placeholder_0_00, param_2, param_3, param_4, param_5);
            sym.parse_multiplicative_expression();
            sym.add_action(0x19);
        }
    }
    return;
}


void sym.accept_bitshift_expression
               (undefined8 param_1, undefined8 param_2, int64_t param_3, int64_t param_4, int64_t param_5)
{
    int32_t iVar1;
    undefined8 placeholder_0;
    undefined8 placeholder_0_00;
    
    sym.parse_unary_expression(param_1, param_2, param_3, param_4, param_5);
    sym.parse_multiplicative_expression();
    sym.parse_additive_expression();
    while( true ) {
        while( true ) {
            iVar1 = func_0x0801ad3d(_reloc.c_token, reloc..LC40);
            if (iVar1 == 0) break;
            _reloc.c_token = _reloc.c_token + 1;
            sym.parse_unary_expression(placeholder_0, param_2, param_3, param_4, param_5);
            sym.parse_multiplicative_expression();
            sym.parse_additive_expression();
            sym.add_action(0x17);
        }
        iVar1 = func_0x0801ad3d(_reloc.c_token, reloc..LC41);
        if (iVar1 == 0) break;
        _reloc.c_token = _reloc.c_token + 1;
        sym.parse_unary_expression(placeholder_0_00, param_2, param_3, param_4, param_5);
        sym.parse_multiplicative_expression();
        sym.parse_additive_expression();
        sym.add_action(0x18);
    }
    return;
}


void sym.parse_relational_expression(void)
{
    int32_t iVar1;
    
    while( true ) {
        while( true ) {
            while( true ) {
                while (iVar1 = func_0x0801ad3d(_reloc.c_token, reloc..LC42), iVar1 != 0) {
                    _reloc.c_token = _reloc.c_token + 1;
                    sym.accept_bitshift_expression();
                    sym.add_action(0x13);
                }
                iVar1 = func_0x0801ad3d(_reloc.c_token, reloc..LC43);
                if (iVar1 == 0) break;
                iVar1 = _reloc.c_token + 1;
                if (reloc.scanning_range_in_progress != (code)0x0) {
                    iVar1 = func_0x0801ad3d(_reloc.c_token + 1, reloc..LC34);
                    if (iVar1 != 0) {
                        return;
                    }
                    iVar1 = _reloc.c_token + 1;
                }
                _reloc.c_token = iVar1;
                sym.accept_bitshift_expression();
                sym.add_action(0x14);
            }
            iVar1 = func_0x0801ad3d(_reloc.c_token, reloc..LC44);
            if (iVar1 == 0) break;
            _reloc.c_token = _reloc.c_token + 1;
            sym.accept_bitshift_expression();
            sym.add_action(0x15);
        }
        iVar1 = func_0x0801ad3d(_reloc.c_token, reloc..LC45);
        if (iVar1 == 0) break;
        _reloc.c_token = _reloc.c_token + 1;
        sym.accept_bitshift_expression();
        sym.add_action(0x16);
    }
    return;
}


void sym.parse_equality_expression(void)
{
    int32_t iVar1;
    
    while( true ) {
        while( true ) {
            while( true ) {
                while( true ) {
                    iVar1 = func_0x0801ad3d(_reloc.c_token, reloc..LC46);
                    if (iVar1 == 0) break;
                    _reloc.c_token = _reloc.c_token + 1;
                    sym.accept_bitshift_expression();
                    sym.parse_relational_expression();
                    sym.add_action(0x11);
                }
                iVar1 = func_0x0801ad3d(_reloc.c_token, reloc..LC47);
                if (iVar1 == 0) break;
                _reloc.c_token = _reloc.c_token + 1;
                sym.accept_bitshift_expression();
                sym.parse_relational_expression();
                sym.add_action(0x12);
            }
            iVar1 = func_0x0801ad3d(_reloc.c_token, reloc..LC48);
            if (iVar1 == 0) break;
            _reloc.c_token = _reloc.c_token + 1;
            sym.accept_bitshift_expression();
            sym.parse_relational_expression();
            sym.add_action(0x23);
        }
        iVar1 = func_0x0801ad3d(_reloc.c_token, reloc..LC49);
        if (iVar1 == 0) break;
        _reloc.c_token = _reloc.c_token + 1;
        sym.accept_bitshift_expression();
        sym.parse_relational_expression();
        sym.add_action(0x24);
    }
    return;
}


void sym.accept_AND_expression(void)
{
    int32_t iVar1;
    
    sym.accept_bitshift_expression();
    sym.parse_relational_expression();
    sym.parse_equality_expression();
    while( true ) {
        iVar1 = func_0x0801ad3d(_reloc.c_token, reloc..LC50);
        if (iVar1 == 0) break;
        _reloc.c_token = _reloc.c_token + 1;
        sym.accept_bitshift_expression();
        sym.parse_relational_expression();
        sym.parse_equality_expression();
        sym.add_action(0x10);
    }
    return;
}


void sym.parse_exclusive_OR_expression(void)
{
    int32_t iVar1;
    
    while( true ) {
        iVar1 = func_0x0801ad3d(_reloc.c_token, reloc..LC51);
        if (iVar1 == 0) break;
        _reloc.c_token = _reloc.c_token + 1;
        sym.accept_AND_expression();
        sym.add_action(0xf);
    }
    return;
}


void sym.parse_inclusive_OR_expression(void)
{
    int32_t iVar1;
    
    while( true ) {
        iVar1 = func_0x0801ad3d(_reloc.c_token, reloc..LC20);
        if (iVar1 == 0) break;
        _reloc.c_token = _reloc.c_token + 1;
        sym.accept_AND_expression();
        sym.parse_exclusive_OR_expression();
        sym.add_action(0xe);
    }
    return;
}


void sym.parse_logical_AND_expression(void)
{
    int32_t iVar1;
    
    while( true ) {
        iVar1 = func_0x0801ad3d(_reloc.c_token, reloc..LC52);
        if (iVar1 == 0) break;
        _reloc.c_token = _reloc.c_token + 1;
        iVar1 = *_obj.at;
        sym.add_action(0x2a);
        sym.accept_AND_expression();
        sym.parse_exclusive_OR_expression();
        sym.parse_inclusive_OR_expression();
        _obj.at[(int64_t)iVar1 * 8 + 4] = *_obj.at - iVar1;
        sym.add_action(0x20);
    }
    return;
}


void sym.parse_reset_after_error(void)
{
    reloc.string_result_only = (code)0x0;
    _obj.parse_recursion_level = 0;
    return;
}


void sym.create_call_column_at(int64_t arg1)
{
    undefined4 *puVar1;
    
    puVar1 = (undefined4 *)func_0x0801ad3d(0x44, reloc..LC1);
    *puVar1 = 2;
    puVar1[2] = 1;
    puVar1[4] = 3;
    *(int64_t *)(puVar1 + 6) = arg1;
    puVar1[10] = 0x2f;
    puVar1[0xc] = 0;
    return;
}


void sym.create_call_columnhead(void)
{
    undefined4 *puVar1;
    
    puVar1 = (undefined4 *)func_0x0801ad3d(0x45, reloc..LC1);
    *puVar1 = 2;
    puVar1[2] = 1;
    puVar1[4] = 1;
    *(undefined8 *)(puVar1 + 6) = 0xffffffffffffffff;
    puVar1[10] = 0x32;
    puVar1[0xc] = 0;
    return;
}


int64_t * sym.add_udv(int64_t arg1)
{
    int32_t iVar1;
    int64_t *piVar2;
    int64_t iVar3;
    code *pcVar4;
    uint64_t uVar5;
    undefined *puVar6;
    int64_t iVar7;
    int64_t in_FS_OFFSET;
    undefined auStack88 [56];
    int64_t iStack32;
    
    puVar6 = auStack88;
    iStack32 = *(int64_t *)(in_FS_OFFSET + 0x28);
    func_0x0801ad3d(auStack88, arg1 & 0xffffffff, 0x32);
    if (0x31 < *(int32_t *)(_reloc.token + (int64_t)(int32_t)(arg1 & 0xffffffffU) * 0x28 + 0x24)) {
        func_0x0801ad3d(arg1 & 0xffffffffU, "truncating variable name that is too long");
    }
    piVar2 = (int64_t *)func_0x0801ad3d(auStack88);
    if (iStack32 == *(int64_t *)(in_FS_OFFSET + 0x28)) {
        return piVar2;
    }
    func_0x0801ad3d();
    uVar5 = (uint64_t)puVar6 & 0xffffffff;
    pcVar4 = reloc.first_udf;
    piVar2 = _reloc.first_udf;
    while (piVar2 != (int64_t *)0x0) {
        iVar1 = func_0x0801ad3d(uVar5, piVar2[1]);
        if (iVar1 != 0) {
            return *(int64_t **)pcVar4;
        }
        pcVar4 = *(code **)pcVar4;
        piVar2 = *(int64_t **)pcVar4;
    }
    if (*(int64_t *)0x801b055 != 0) {
        piVar2 = (int64_t *)0x801b065;
        do {
            iVar1 = func_0x0801ad3d(uVar5);
            if (iVar1 != 0) {
                func_0x0801ad3d(uVar5, "Warning : udf shadowed by built-in function of the same name");
                break;
            }
            iVar3 = *piVar2;
            piVar2 = piVar2 + 2;
        } while (iVar3 != 0);
    }
    piVar2 = (int64_t *)func_0x0801ad3d(0x148, "");
    *(int64_t **)pcVar4 = piVar2;
    *piVar2 = 0;
    piVar2 = *(int64_t **)pcVar4;
    piVar2[3] = 0;
    piVar2[2] = 0;
    iVar3 = func_0x0801ad3d(uVar5);
    piVar2 = *(int64_t **)pcVar4;
    iVar3 = func_0x0801ad3d(iVar3 + 1, "");
    piVar2[1] = iVar3;
    iVar1 = func_0x0801ad3d(uVar5);
    iVar3 = 0x28;
    func_0x0801ad3d((*(int64_t **)pcVar4)[1], uVar5, iVar1 + 1);
    do {
        iVar7 = (int64_t)*(int64_t **)pcVar4 + iVar3;
        iVar3 = iVar3 + 0x18;
        func_0x0801ad3d(iVar7, 0);
    } while (iVar3 != 0x148);
    return *(int64_t **)pcVar4;
}


void sym.perm_at(void)
{
    func_0x0801ad3d();
    func_0x0801ad3d(_obj.at, (int64_t)(*_obj.at + -0x96) * 0x20 + 0x12c8, "perm_at");
    _obj.at = (int32_t *)0x0;
    return;
}


undefined8 * sym.temp_at(void)
{
    int32_t iVar1;
    undefined8 *puVar2;
    uint64_t uVar3;
    uint8_t uVar4;
    
    uVar4 = 0;
    if (_obj.at != (undefined8 *)0x0) {
        func_0x0801ad3d();
        _obj.at = (undefined8 *)0x0;
    }
    puVar2 = (undefined8 *)func_0x0801ad3d(0x12c8, "action table");
    _obj.at = puVar2;
    *puVar2 = 0;
    puVar2[600] = 0;
    uVar3 = (uint64_t)
            (((int32_t)puVar2 - (int32_t)(undefined8 *)((uint64_t)(puVar2 + 1) & 0xfffffffffffffff8)) + 0x12c8U >> 3);
    puVar2 = (undefined8 *)((uint64_t)(puVar2 + 1) & 0xfffffffffffffff8);
    while (uVar3 != 0) {
        uVar3 = uVar3 - 1;
        *puVar2 = 0;
        puVar2 = puVar2 + (uint64_t)uVar4 * 0x1ffffffffffffffe + 1;
    }
    _reloc..LC12 = 0x96;
    _obj.parse_recursion_level = 0;
    iVar1 = sym.parse_assignment_expression();
    if (iVar1 == 0) {
        sym.parse_expression.part.0();
    }
    return _obj.at;
}


int64_t sym.const_express(int64_t arg7, undefined8 placeholder_1, undefined8 placeholder_2, undefined8 placeholder_3,
                         undefined8 placeholder_4, undefined8 placeholder_5, undefined8 placeholder_6,
                         undefined8 placeholder_7, int64_t arg1)
{
    int32_t iVar1;
    undefined8 uVar2;
    uint64_t uVar3;
    undefined4 *unaff_R12;
    int64_t in_FS_OFFSET;
    int64_t extraout_XMM0_Qa;
    double dVar4;
    undefined auStack64 [24];
    int64_t iStack40;
    uint64_t uStack32;
    
    uVar3 = (uint64_t)_reloc.c_token;
    if ((int32_t)_reloc.c_token < _reloc.num_tokens) {
        uStack32 = 0x8001aba;
        iVar1 = func_0x0801ad3d(_reloc.c_token, reloc..LC58);
        unaff_R12 = (undefined4 *)arg1;
        if (iVar1 != 0) {
            uVar3 = (uint64_t)_reloc.c_token;
            arg7 = extraout_XMM0_Qa;
            goto code_r0x08001afa;
        }
        _reloc.dummy_func = 0;
        uStack32 = 0x8001ace;
        uVar2 = func_0x0801ad3d();
        uStack32 = 0x8001ad9;
        func_0x0801ad3d(uVar2, arg1);
        if (reloc.undefined != (code)0x0) goto code_r0x08001b23;
        if (*(int32_t *)arg1 != 5) {
            return arg1;
        }
    } else {
code_r0x08001afa:
        uStack32 = 0x8001b0a;
        func_0x0801ad3d(arg7, uVar3, "constant expression required");
    }
    *unaff_R12 = 7;
    uStack32 = 0x8001b23;
    func_0x0801ad3d(0xffffffff, "const_express: unsupported array operation");
code_r0x08001b23:
    uStack32 = 0x8001b33;
    func_0x0801ad3d(uVar3, "undefined value");
    iStack40 = *(int64_t *)(in_FS_OFFSET + 0x28);
    uStack32 = uVar3;
    uVar2 = func_0x0801ad3d(auStack64);
    func_0x0801ad3d(uVar2);
    func_0x0801ad3d(auStack64);
    if (iStack40 == *(int64_t *)(in_FS_OFFSET + 0x28)) {
        return 0;
    }
    func_0x0801ad3d();
    dVar4 = (double)func_0x0801ad3d();
    return (int64_t)dVar4;
}


int64_t sym.const_string_express(int64_t arg1)
{
    reloc.string_result_only = (code)0x1;
    func_0x0801ad3d();
    reloc.string_result_only = (code)0x0;
    return arg1;
}


code * sym.string_or_express(int64_t arg1)
{
    int32_t iVar1;
    code *pcVar2;
    int32_t *piVar3;
    int64_t in_FS_OFFSET;
    int32_t aiStack40 [2];
    code *pcStack32;
    int64_t iStack16;
    
    iStack16 = *(int64_t *)(in_FS_OFFSET + 0x28);
    func_0x0801ad3d();
    _reloc..LC7 = (code *)0x0;
    _reloc.df_array = 0;
    if (arg1 != 0) {
        *(undefined8 *)arg1 = 0;
    }
    if ((_reloc.c_token < _reloc.num_tokens) && (iVar1 = func_0x0801ad3d(_reloc.c_token, reloc..LC58), iVar1 == 0)) {
        iVar1 = func_0x0801ad3d(_reloc.c_token, reloc..LC15);
        if (iVar1 == 0) {
            iVar1 = func_0x0801ad3d(_reloc.c_token, "keyentry");
            pcVar2 = (code *)0x0;
            if ((iVar1 == 0) &&
               ((iVar1 = func_0x0801ad3d(), iVar1 == 0 ||
                (pcVar2 = (code *)func_0x0801ad3d(), _reloc..LC7 = pcVar2, pcVar2 == (code *)0x0)))) {
                iVar1 = func_0x0801ad3d();
                if ((iVar1 == 5) && (iVar1 = func_0x0801ad3d(_reloc.c_token + 1, reloc..LC16), iVar1 == 0)) {
                    _reloc.c_token = _reloc.c_token + 1;
                    _reloc.df_array = func_0x0801ad3d();
                    pcVar2 = reloc..LC61;
                } else {
                    func_0x0801ad3d();
                    if (0 < *_obj.at) {
                        piVar3 = _obj.at + 2;
                        do {
                            pcVar2 = _reloc..LC7;
                            if ((*piVar3 - 2U < 3) || (*piVar3 == 8)) goto code_r0x08001d57;
                            piVar3 = piVar3 + 8;
                        } while (piVar3 != _obj.at + (uint64_t)(*_obj.at - 1) * 8 + 10);
                    }
                    func_0x0801ad3d(_obj.at, aiStack40);
                    pcVar2 = _reloc..LC7;
                    if (((reloc.undefined == (code)0x0) && (aiStack40[0] == 3)) &&
                       (pcVar2 = pcStack32, *pcStack32 == (code)0x0)) {
                        func_0x0801ad3d(pcStack32);
                        pcVar2 = (code *)func_0x0801ad3d(reloc..LC64);
                    }
code_r0x08001d57:
                    _reloc..LC7 = pcVar2;
                    pcVar2 = _reloc..LC7;
                    if (arg1 != 0) {
                        *(int32_t **)arg1 = _obj.at;
                    }
                }
            }
        } else {
            pcVar2 = (code *)func_0x0801ad3d();
        }
        if (iStack16 == *(int64_t *)(in_FS_OFFSET + 0x28)) {
            return pcVar2;
        }
    } else {
        func_0x0801ad3d(_reloc.c_token, "expression expected");
    }
    func_0x0801ad3d();
    func_0x0801ad3d();
    pcVar2 = (code *)func_0x0801ad3d(_obj.at, (int64_t)(*_obj.at + -0x96) * 0x20 + 0x12c8, "perm_at");
    _obj.at = (int32_t *)0x0;
    return pcVar2;
}








undefined8
sym.next_iteration(int64_t arg7, undefined8 placeholder_1, undefined8 placeholder_2, undefined8 placeholder_3,
                  undefined8 placeholder_4, undefined8 placeholder_5, undefined8 placeholder_6, undefined8 placeholder_7
                  , int64_t arg1)
{
    int64_t iVar1;
    int32_t iVar2;
    int32_t iVar3;
    int64_t iVar4;
    int64_t iVar5;
    int64_t iVar6;
    char cVar7;
    undefined4 uVar8;
    undefined8 uVar9;
    int64_t *piVar10;
    int64_t *piVar11;
    int64_t in_FS_OFFSET;
    double extraout_XMM0_Qa;
    double extraout_XMM0_Qa_00;
    int32_t aiStack56 [2];
    int64_t iStack48;
    int64_t iStack32;
    
    iStack32 = *(int64_t *)(in_FS_OFFSET + 0x28);
    piVar11 = (int64_t *)arg1;
    if (arg1 == 0) {
code_r0x080026d1:
        uVar9 = 0;
    } else {
        while( true ) {
            iVar2 = *(int32_t *)(arg1 + 0x34);
            iVar3 = *(int32_t *)(arg1 + 0x30);
            if (iVar3 < iVar2) {
                if (*(int32_t *)(arg1 + 0x38) < 0) goto code_r0x080026d1;
            } else {
                if ((*(int32_t *)(arg1 + 0x30) != iVar2 && iVar2 <= iVar3) && (0 < *(int32_t *)(arg1 + 0x38)))
                goto code_r0x080026d1;
            }
            piVar11 = *(int64_t **)arg1;
            uVar9 = func_0x0801ad3d();
            if ((char)uVar9 != '\0') break;
            if (*(int32_t *)(arg1 + 0x40) < 0) {
                *(undefined4 *)(arg1 + 0x40) = 0;
                piVar11 = (int64_t *)arg1;
                cVar7 = func_0x0801ad3d();
                if (cVar7 == '\0') goto code_r0x08002707;
            } else {
                *(int32_t *)(arg1 + 0x40) = *(int32_t *)(arg1 + 0x40) + 1;
                *(int32_t *)(arg1 + 0x3c) = *(int32_t *)(arg1 + 0x3c) + *(int32_t *)(arg1 + 0x38);
            }
            iVar1 = *(int64_t *)(arg1 + 8) + 0x10;
            if (*(int64_t *)(arg1 + 0x28) == 0) {
                func_0x0801ad3d(iVar1);
                piVar11 = (int64_t *)(*(int64_t *)(arg1 + 8) + 0x10);
                func_0x0801ad3d(piVar11, (int64_t)*(int32_t *)(arg1 + 0x3c));
            } else {
                func_0x0801ad3d(iVar1);
                uVar9 = func_0x0801ad3d(*(undefined8 *)(arg1 + 0x28), *(undefined4 *)(arg1 + 0x3c));
                piVar11 = (int64_t *)(*(int64_t *)(arg1 + 8) + 0x10);
                func_0x0801ad3d(piVar11, uVar9);
            }
            if (*(int32_t *)(arg1 + 0x38) < 1) {
                if ((*(int32_t *)(arg1 + 0x38) != 0) && (0 < *(int32_t *)(arg1 + 0x34) - *(int32_t *)(arg1 + 0x3c)))
                goto code_r0x080026d1;
            } else {
                if (*(int32_t *)(arg1 + 0x34) - *(int32_t *)(arg1 + 0x3c) < 0) goto code_r0x080026d1;
            }
            piVar10 = *(int64_t **)arg1;
            if (piVar10 == (int64_t *)0x0) goto code_r0x08002707;
            do {
                if (piVar10[9] != 0) {
                    func_0x0801ad3d(piVar10[9], aiStack56);
                    if (piVar10[5] == 0) {
                        func_0x0801ad3d(aiStack56);
                        *(int32_t *)(piVar10 + 6) = (int32_t)extraout_XMM0_Qa_00;
                    } else {
                        func_0x0801ad3d();
                        if (aiStack56[0] != 3) {
                            piVar11 = (int64_t *)0xffffffff;
                            func_0x0801ad3d(0xffffffff, "corrupt iteration string");
                            goto code_r0x08002776;
                        }
                        *(undefined4 *)(piVar10 + 6) = 1;
                        piVar10[5] = iStack48;
                        uVar8 = func_0x0801ad3d();
                        *(undefined4 *)((int64_t)piVar10 + 0x34) = uVar8;
                    }
                }
                if (piVar10[10] != 0) {
                    func_0x0801ad3d(piVar10[10], aiStack56);
                    func_0x0801ad3d(aiStack56);
                    *(int32_t *)((int64_t)piVar10 + 0x34) = (int32_t)extraout_XMM0_Qa;
                }
                *(undefined4 *)(piVar10 + 8) = 0xffffffff;
                *(undefined4 *)((int64_t)piVar10 + 0x3c) = *(undefined4 *)(piVar10 + 6);
                if (piVar10[5] == 0) {
                    func_0x0801ad3d(piVar10[1] + 0x10);
                    piVar11 = (int64_t *)(piVar10[1] + 0x10);
                    func_0x0801ad3d();
                } else {
                    func_0x0801ad3d(piVar10[1] + 0x10);
                    func_0x0801ad3d(piVar10[5], *(undefined4 *)((int64_t)piVar10 + 0x3c));
                    piVar11 = (int64_t *)(piVar10[1] + 0x10);
                    func_0x0801ad3d();
                }
                piVar10 = (int64_t *)*piVar10;
            } while (piVar10 != (int64_t *)0x0);
        }
        if (*(int32_t *)(arg1 + 0x40) < 0) {
            *(undefined4 *)(arg1 + 0x40) = 0;
            goto code_r0x080026d3;
        }
code_r0x08002707:
        uVar9 = 1;
    }
code_r0x080026d3:
    if (iStack32 == *(int64_t *)(in_FS_OFFSET + 0x28)) {
        return uVar9;
    }
code_r0x08002776:
    func_0x0801ad3d();
    if (piVar11 == (int64_t *)0x0) {
        return 0;
    }
    do {
        piVar10 = (int64_t *)*piVar11;
        func_0x0801ad3d(piVar11[1] + 0x10);
        iVar1 = piVar11[1];
        iVar5 = piVar11[2];
        iVar6 = piVar11[3];
        iVar4 = piVar11[5];
        *(int64_t *)(iVar1 + 0x20) = piVar11[4];
        *(int64_t *)(iVar1 + 0x10) = iVar5;
        *(int64_t *)(iVar1 + 0x18) = iVar6;
        func_0x0801ad3d(iVar5, iVar4);
        func_0x0801ad3d(piVar11[9]);
        piVar11[9] = 0;
        func_0x0801ad3d(piVar11[10]);
        func_0x0801ad3d(piVar11);
        piVar11 = piVar10;
    } while (piVar10 != (int64_t *)0x0);
    return 0;
}


bool sym.forever_iteration(uint32_t arg1)
{
    undefined4 in_RDI;
    bool bVar1;
    
    bVar1 = false;
    if (CONCAT44(in_RDI, arg1) != 0) {
        bVar1 = *(int32_t *)(CONCAT44(in_RDI, arg1) + 0x34) == 0x7fffffff;
    }
    return bVar1;
}


uint64_t sym.parse_expression.part.0(void)
{
    uint32_t uVar1;
    undefined8 uVar2;
    int32_t iVar3;
    uint32_t uVar4;
    undefined4 *puVar5;
    uint64_t uVar6;
    uint64_t unaff_RBX;
    undefined *puVar7;
    uint64_t unaff_RBP;
    uint64_t unaff_R12;
    int64_t in_FS_OFFSET;
    
    puVar7 = (undefined *)*(BADSPACEBASE **)0x20;
    do {
        *(uint64_t *)(puVar7 + -8) = unaff_RBP;
        *(uint64_t *)(puVar7 + -0x10) = unaff_RBX;
        _obj.parse_recursion_level = _obj.parse_recursion_level + 1;
        *(undefined8 *)(puVar7 + -0x20) = 0x8001609;
        sym.accept_AND_expression();
        *(undefined8 *)(puVar7 + -0x20) = 0x800160e;
        sym.parse_exclusive_OR_expression();
        *(undefined8 *)(puVar7 + -0x20) = 0x8001613;
        sym.parse_inclusive_OR_expression();
        *(undefined8 *)(puVar7 + -0x20) = 0x8001618;
        sym.parse_logical_AND_expression();
        while( true ) {
            *(undefined8 *)(puVar7 + -0x20) = 0x800167c;
            iVar3 = func_0x0801ad3d(_reloc.c_token, reloc..LC53);
            if (iVar3 == 0) break;
            _reloc.c_token = _reloc.c_token + 1;
            uVar4 = *_obj.at;
            unaff_RBX = (uint64_t)uVar4;
            *(undefined8 *)(puVar7 + -0x20) = 0x800163a;
            sym.add_action(0x2b, puVar7[-0x20]);
            *(undefined8 *)(puVar7 + -0x20) = 0x800163f;
            sym.accept_AND_expression();
            *(undefined8 *)(puVar7 + -0x20) = 0x8001644;
            sym.parse_exclusive_OR_expression();
            *(undefined8 *)(puVar7 + -0x20) = 0x8001649;
            sym.parse_inclusive_OR_expression();
            *(undefined8 *)(puVar7 + -0x20) = 0x800164e;
            sym.parse_logical_AND_expression();
            _obj.at[(int64_t)(int32_t)uVar4 * 8 + 4] = *_obj.at - uVar4;
            *(undefined8 *)(puVar7 + -0x20) = 0x800166e;
            sym.add_action(0x20, puVar7[-0x20]);
        }
        *(undefined8 *)(puVar7 + -0x20) = 0x8001692;
        iVar3 = func_0x0801ad3d(_reloc.c_token, reloc..LC54);
        if (iVar3 == 0) {
            _obj.parse_recursion_level = _obj.parse_recursion_level - 1;
            return (uint64_t)_obj.parse_recursion_level;
        }
        _obj.parse_recursion_level = _obj.parse_recursion_level - 1;
        _reloc.c_token = _reloc.c_token + 1;
        uVar4 = *_obj.at;
        unaff_RBP = (uint64_t)uVar4;
        *(undefined8 *)(puVar7 + -0x20) = 0x80016d1;
        sym.add_action(0x2c, puVar7[-0x20]);
        *(undefined8 *)(puVar7 + -0x20) = 0x80016d6;
        iVar3 = sym.parse_assignment_expression();
        if (iVar3 == 0) {
            *(undefined8 *)(puVar7 + -0x20) = 0x800175d;
            sym.parse_expression.part.0();
        }
        *(undefined8 *)(puVar7 + -0x20) = 0x80016ec;
        iVar3 = func_0x0801ad3d(_reloc.c_token, reloc..LC30);
        if (iVar3 != 0) {
            _reloc.c_token = _reloc.c_token + 1;
            uVar1 = *_obj.at;
            *(undefined8 *)(puVar7 + -0x20) = 0x800170a;
            sym.add_action(0x29, puVar7[-0x20]);
            _obj.at[(int64_t)(int32_t)uVar4 * 8 + 4] = *_obj.at - uVar4;
            *(undefined8 *)(puVar7 + -0x20) = 0x8001725;
            iVar3 = sym.parse_assignment_expression();
            if (iVar3 == 0) {
                *(undefined8 *)(puVar7 + -0x20) = 0x800176d;
                sym.parse_expression.part.0();
            }
            _obj.at[(int64_t)(int32_t)uVar1 * 8 + 4] = *_obj.at - uVar1;
            return (uint64_t)_obj.parse_recursion_level;
        }
        *(undefined8 *)(puVar7 + -0x20) = 0x8001781;
        func_0x0801ad3d(_reloc.c_token, reloc..LC55);
        *(uint64_t *)(puVar7 + -0x20) = unaff_R12;
        *(uint64_t *)(puVar7 + -0x28) = unaff_RBP;
        *(uint64_t *)(puVar7 + -0x30) = unaff_RBX;
        *(undefined8 *)(puVar7 + -0x38) = *(undefined8 *)(in_FS_OFFSET + 0x28);
        *(undefined8 *)(puVar7 + -0x48) = 0x80017b3;
        iVar3 = func_0x0801ad3d(_reloc.c_token);
        if (iVar3 == 0) {
code_r0x080017d4:
            *(undefined8 *)(puVar7 + -0x48) = 0x80017df;
            iVar3 = func_0x0801ad3d(_reloc.c_token);
            if (iVar3 != 0) {
                *(undefined8 *)(puVar7 + -0x48) = 0x8001825;
                iVar3 = func_0x0801ad3d(_reloc.c_token + 1, reloc..LC16);
                if (iVar3 != 0) {
                    *(undefined8 *)(puVar7 + -0x40) = 0;
                    *(undefined8 *)(puVar7 + -0x48) = 0x8001846;
                    iVar3 = func_0x0801ad3d(_reloc.c_token + 3, reloc..LC31);
                    if (iVar3 != 0) {
                        *(undefined8 *)(puVar7 + -0x48) = 0x800185f;
                        iVar3 = func_0x0801ad3d(_reloc.c_token + 4, reloc..LC29);
                        if (iVar3 == 0) goto code_r0x080017e3;
                    }
                    *(undefined8 *)(puVar7 + -0x48) = 0x8001878;
                    uVar4 = func_0x0801ad3d(_reloc.c_token + 3, reloc..LC30);
                    unaff_R12 = (uint64_t)uVar4;
                    if (uVar4 == 0) {
                        *(undefined8 *)(puVar7 + -0x48) = 0x800188e;
                        iVar3 = func_0x0801ad3d(_reloc.c_token);
                        uVar4 = _reloc.c_token;
                        if (iVar3 == 5) {
                            unaff_RBX = (uint64_t)_reloc.c_token;
                            uVar1 = *_obj.at;
                            unaff_RBP = (uint64_t)uVar1;
                            *(undefined8 *)(puVar7 + -0x48) = 0x80018b2;
                            func_0x0801ad3d(puVar7 + -0x40, _reloc.c_token, unaff_RBX);
                            *(undefined8 *)(puVar7 + -0x48) = 0x80018bc;
                            puVar5 = (undefined4 *)sym.add_action(1, puVar7[-0x48]);
                            *puVar5 = 3;
                            _reloc.c_token = _reloc.c_token + 2;
                            *(undefined8 *)(puVar5 + 2) = *(undefined8 *)(puVar7 + -0x40);
                            *(undefined8 *)(puVar7 + -0x48) = 0x80018d6;
                            iVar3 = sym.parse_assignment_expression();
                            if (iVar3 == 0) {
                                *(undefined8 *)(puVar7 + -0x48) = 0x80018df;
                                sym.parse_expression.part.0();
                            }
                            *(undefined8 *)(puVar7 + -0x48) = 0x80018f1;
                            iVar3 = func_0x0801ad3d(_reloc.c_token, reloc..LC31);
                            if (iVar3 != 0) {
                                *(undefined8 *)(puVar7 + -0x48) = 0x800190a;
                                iVar3 = func_0x0801ad3d(_reloc.c_token + 1, reloc..LC29);
                                if (iVar3 != 0) {
                                    _reloc.c_token = _reloc.c_token + 2;
                                    *(undefined8 *)(puVar7 + -0x48) = 0x80019a7;
                                    iVar3 = sym.parse_assignment_expression();
                                    goto joined_r0x080019a9;
                                }
                            }
                            uVar2 = *(undefined8 *)(puVar7 + -0x40);
                            _reloc.c_token = uVar4;
                            *_obj.at = uVar1;
                            *(undefined8 *)(puVar7 + -0x48) = 0x800192a;
                            func_0x0801ad3d(uVar2);
                            goto code_r0x080017e6;
                        }
                    }
                }
            }
code_r0x080017e3:
            unaff_R12 = 0;
        } else {
            *(undefined8 *)(puVar7 + -0x48) = 0x80017cc;
            iVar3 = func_0x0801ad3d(_reloc.c_token + 1, reloc..LC29);
            if (iVar3 == 0) goto code_r0x080017d4;
            *(undefined8 *)(puVar7 + -0x48) = 0x800193a;
            puVar5 = (undefined4 *)sym.add_action(1, puVar7[-0x48]);
            *(undefined8 *)(puVar7 + -0x40) = 0;
            *(undefined8 *)(puVar7 + -0x48) = 0x8001955;
            func_0x0801ad3d(puVar7 + -0x40, _reloc.c_token, _reloc.c_token);
            *puVar5 = 3;
            *(undefined8 *)(puVar5 + 2) = *(undefined8 *)(puVar7 + -0x40);
            *(undefined8 *)(puVar7 + -0x48) = 0x8001970;
            puVar5 = (undefined4 *)sym.add_action(1, puVar7[-0x48]);
            *puVar5 = 7;
            _reloc.c_token = _reloc.c_token + 2;
            *(undefined8 *)(puVar7 + -0x48) = 0x8001982;
            iVar3 = sym.parse_assignment_expression();
joined_r0x080019a9:
            if (iVar3 == 0) {
                *(undefined8 *)(puVar7 + -0x48) = 0x80019b5;
                sym.parse_expression.part.0();
            }
            unaff_R12 = 1;
            *(undefined8 *)(puVar7 + -0x48) = 0x8001996;
            sym.add_action(0x28, puVar7[-0x48]);
        }
code_r0x080017e6:
        if (*(int64_t *)(puVar7 + -0x38) == *(int64_t *)(in_FS_OFFSET + 0x28)) {
            return unaff_R12;
        }
        *(undefined8 *)(puVar7 + -0x48) = 0x80019bc;
        func_0x0801ad3d();
        *(undefined8 *)(puVar7 + -0x50) = 0x80019c9;
        uVar6 = sym.parse_assignment_expression();
        puVar7 = puVar7 + -0x40;
        if ((int32_t)uVar6 != 0) {
            return uVar6;
        }
    } while( true );
}


uint64_t sym.parse_expression.part.0(void)
{
    uint32_t uVar1;
    undefined8 uVar2;
    int32_t iVar3;
    uint32_t uVar4;
    undefined4 *puVar5;
    uint64_t uVar6;
    uint64_t unaff_RBX;
    undefined *puVar7;
    uint64_t unaff_RBP;
    uint64_t unaff_R12;
    int64_t in_FS_OFFSET;
    
    puVar7 = (undefined *)*(BADSPACEBASE **)0x20;
    do {
        *(uint64_t *)(puVar7 + -8) = unaff_RBP;
        *(uint64_t *)(puVar7 + -0x10) = unaff_RBX;
        _obj.parse_recursion_level = _obj.parse_recursion_level + 1;
        *(undefined8 *)(puVar7 + -0x20) = 0x8001609;
        sym.accept_AND_expression();
        *(undefined8 *)(puVar7 + -0x20) = 0x800160e;
        sym.parse_exclusive_OR_expression();
        *(undefined8 *)(puVar7 + -0x20) = 0x8001613;
        sym.parse_inclusive_OR_expression();
        *(undefined8 *)(puVar7 + -0x20) = 0x8001618;
        sym.parse_logical_AND_expression();
        while( true ) {
            *(undefined8 *)(puVar7 + -0x20) = 0x800167c;
            iVar3 = func_0x0801ad3d(_reloc.c_token, reloc..LC53);
            if (iVar3 == 0) break;
            _reloc.c_token = _reloc.c_token + 1;
            uVar4 = *_obj.at;
            unaff_RBX = (uint64_t)uVar4;
            *(undefined8 *)(puVar7 + -0x20) = 0x800163a;
            sym.add_action(0x2b, puVar7[-0x20]);
            *(undefined8 *)(puVar7 + -0x20) = 0x800163f;
            sym.accept_AND_expression();
            *(undefined8 *)(puVar7 + -0x20) = 0x8001644;
            sym.parse_exclusive_OR_expression();
            *(undefined8 *)(puVar7 + -0x20) = 0x8001649;
            sym.parse_inclusive_OR_expression();
            *(undefined8 *)(puVar7 + -0x20) = 0x800164e;
            sym.parse_logical_AND_expression();
            _obj.at[(int64_t)(int32_t)uVar4 * 8 + 4] = *_obj.at - uVar4;
            *(undefined8 *)(puVar7 + -0x20) = 0x800166e;
            sym.add_action(0x20, puVar7[-0x20]);
        }
        *(undefined8 *)(puVar7 + -0x20) = 0x8001692;
        iVar3 = func_0x0801ad3d(_reloc.c_token, reloc..LC54);
        if (iVar3 == 0) {
            _obj.parse_recursion_level = _obj.parse_recursion_level - 1;
            return (uint64_t)_obj.parse_recursion_level;
        }
        _obj.parse_recursion_level = _obj.parse_recursion_level - 1;
        _reloc.c_token = _reloc.c_token + 1;
        uVar4 = *_obj.at;
        unaff_RBP = (uint64_t)uVar4;
        *(undefined8 *)(puVar7 + -0x20) = 0x80016d1;
        sym.add_action(0x2c, puVar7[-0x20]);
        *(undefined8 *)(puVar7 + -0x20) = 0x80016d6;
        iVar3 = sym.parse_assignment_expression();
        if (iVar3 == 0) {
            *(undefined8 *)(puVar7 + -0x20) = 0x800175d;
            sym.parse_expression.part.0();
        }
        *(undefined8 *)(puVar7 + -0x20) = 0x80016ec;
        iVar3 = func_0x0801ad3d(_reloc.c_token, reloc..LC30);
        if (iVar3 != 0) {
            _reloc.c_token = _reloc.c_token + 1;
            uVar1 = *_obj.at;
            *(undefined8 *)(puVar7 + -0x20) = 0x800170a;
            sym.add_action(0x29, puVar7[-0x20]);
            _obj.at[(int64_t)(int32_t)uVar4 * 8 + 4] = *_obj.at - uVar4;
            *(undefined8 *)(puVar7 + -0x20) = 0x8001725;
            iVar3 = sym.parse_assignment_expression();
            if (iVar3 == 0) {
                *(undefined8 *)(puVar7 + -0x20) = 0x800176d;
                sym.parse_expression.part.0();
            }
            _obj.at[(int64_t)(int32_t)uVar1 * 8 + 4] = *_obj.at - uVar1;
            return (uint64_t)_obj.parse_recursion_level;
        }
        *(undefined8 *)(puVar7 + -0x20) = 0x8001781;
        func_0x0801ad3d(_reloc.c_token, reloc..LC55);
        *(uint64_t *)(puVar7 + -0x20) = unaff_R12;
        *(uint64_t *)(puVar7 + -0x28) = unaff_RBP;
        *(uint64_t *)(puVar7 + -0x30) = unaff_RBX;
        *(undefined8 *)(puVar7 + -0x38) = *(undefined8 *)(in_FS_OFFSET + 0x28);
        *(undefined8 *)(puVar7 + -0x48) = 0x80017b3;
        iVar3 = func_0x0801ad3d(_reloc.c_token);
        if (iVar3 == 0) {
code_r0x080017d4:
            *(undefined8 *)(puVar7 + -0x48) = 0x80017df;
            iVar3 = func_0x0801ad3d(_reloc.c_token);
            if (iVar3 != 0) {
                *(undefined8 *)(puVar7 + -0x48) = 0x8001825;
                iVar3 = func_0x0801ad3d(_reloc.c_token + 1, reloc..LC16);
                if (iVar3 != 0) {
                    *(undefined8 *)(puVar7 + -0x40) = 0;
                    *(undefined8 *)(puVar7 + -0x48) = 0x8001846;
                    iVar3 = func_0x0801ad3d(_reloc.c_token + 3, reloc..LC31);
                    if (iVar3 != 0) {
                        *(undefined8 *)(puVar7 + -0x48) = 0x800185f;
                        iVar3 = func_0x0801ad3d(_reloc.c_token + 4, reloc..LC29);
                        if (iVar3 == 0) goto code_r0x080017e3;
                    }
                    *(undefined8 *)(puVar7 + -0x48) = 0x8001878;
                    uVar4 = func_0x0801ad3d(_reloc.c_token + 3, reloc..LC30);
                    unaff_R12 = (uint64_t)uVar4;
                    if (uVar4 == 0) {
                        *(undefined8 *)(puVar7 + -0x48) = 0x800188e;
                        iVar3 = func_0x0801ad3d(_reloc.c_token);
                        uVar4 = _reloc.c_token;
                        if (iVar3 == 5) {
                            unaff_RBX = (uint64_t)_reloc.c_token;
                            uVar1 = *_obj.at;
                            unaff_RBP = (uint64_t)uVar1;
                            *(undefined8 *)(puVar7 + -0x48) = 0x80018b2;
                            func_0x0801ad3d(puVar7 + -0x40, _reloc.c_token, unaff_RBX);
                            *(undefined8 *)(puVar7 + -0x48) = 0x80018bc;
                            puVar5 = (undefined4 *)sym.add_action(1, puVar7[-0x48]);
                            *puVar5 = 3;
                            _reloc.c_token = _reloc.c_token + 2;
                            *(undefined8 *)(puVar5 + 2) = *(undefined8 *)(puVar7 + -0x40);
                            *(undefined8 *)(puVar7 + -0x48) = 0x80018d6;
                            iVar3 = sym.parse_assignment_expression();
                            if (iVar3 == 0) {
                                *(undefined8 *)(puVar7 + -0x48) = 0x80018df;
                                sym.parse_expression.part.0();
                            }
                            *(undefined8 *)(puVar7 + -0x48) = 0x80018f1;
                            iVar3 = func_0x0801ad3d(_reloc.c_token, reloc..LC31);
                            if (iVar3 != 0) {
                                *(undefined8 *)(puVar7 + -0x48) = 0x800190a;
                                iVar3 = func_0x0801ad3d(_reloc.c_token + 1, reloc..LC29);
                                if (iVar3 != 0) {
                                    _reloc.c_token = _reloc.c_token + 2;
                                    *(undefined8 *)(puVar7 + -0x48) = 0x80019a7;
                                    iVar3 = sym.parse_assignment_expression();
                                    goto joined_r0x080019a9;
                                }
                            }
                            uVar2 = *(undefined8 *)(puVar7 + -0x40);
                            _reloc.c_token = uVar4;
                            *_obj.at = uVar1;
                            *(undefined8 *)(puVar7 + -0x48) = 0x800192a;
                            func_0x0801ad3d(uVar2);
                            goto code_r0x080017e6;
                        }
                    }
                }
            }
code_r0x080017e3:
            unaff_R12 = 0;
        } else {
            *(undefined8 *)(puVar7 + -0x48) = 0x80017cc;
            iVar3 = func_0x0801ad3d(_reloc.c_token + 1, reloc..LC29);
            if (iVar3 == 0) goto code_r0x080017d4;
            *(undefined8 *)(puVar7 + -0x48) = 0x800193a;
            puVar5 = (undefined4 *)sym.add_action(1, puVar7[-0x48]);
            *(undefined8 *)(puVar7 + -0x40) = 0;
            *(undefined8 *)(puVar7 + -0x48) = 0x8001955;
            func_0x0801ad3d(puVar7 + -0x40, _reloc.c_token, _reloc.c_token);
            *puVar5 = 3;
            *(undefined8 *)(puVar5 + 2) = *(undefined8 *)(puVar7 + -0x40);
            *(undefined8 *)(puVar7 + -0x48) = 0x8001970;
            puVar5 = (undefined4 *)sym.add_action(1, puVar7[-0x48]);
            *puVar5 = 7;
            _reloc.c_token = _reloc.c_token + 2;
            *(undefined8 *)(puVar7 + -0x48) = 0x8001982;
            iVar3 = sym.parse_assignment_expression();
joined_r0x080019a9:
            if (iVar3 == 0) {
                *(undefined8 *)(puVar7 + -0x48) = 0x80019b5;
                sym.parse_expression.part.0();
            }
            unaff_R12 = 1;
            *(undefined8 *)(puVar7 + -0x48) = 0x8001996;
            sym.add_action(0x28, puVar7[-0x48]);
        }
code_r0x080017e6:
        if (*(int64_t *)(puVar7 + -0x38) == *(int64_t *)(in_FS_OFFSET + 0x28)) {
            return unaff_R12;
        }
        *(undefined8 *)(puVar7 + -0x48) = 0x80019bc;
        func_0x0801ad3d();
        *(undefined8 *)(puVar7 + -0x50) = 0x80019c9;
        uVar6 = sym.parse_assignment_expression();
        puVar7 = puVar7 + -0x40;
        if ((int32_t)uVar6 != 0) {
            return uVar6;
        }
    } while( true );
}


void sym.parse_multiplicative_expression
               (undefined8 param_1, undefined8 param_2, int64_t param_3, int64_t param_4, int64_t param_5)
{
    int32_t iVar1;
    undefined8 placeholder_0;
    undefined8 placeholder_0_00;
    undefined8 placeholder_0_01;
    
    while( true ) {
        while( true ) {
            while( true ) {
                iVar1 = func_0x0801ad3d(_reloc.c_token, reloc..LC34);
                if (iVar1 == 0) break;
                _reloc.c_token = _reloc.c_token + 1;
                sym.parse_unary_expression(placeholder_0, param_2, param_3, param_4, param_5);
                sym.add_action(0x1b);
            }
            iVar1 = func_0x0801ad3d(_reloc.c_token, reloc..LC37);
            if (iVar1 == 0) break;
            _reloc.c_token = _reloc.c_token + 1;
            sym.parse_unary_expression(placeholder_0_00, param_2, param_3, param_4, param_5);
            sym.add_action(0x1c);
        }
        iVar1 = func_0x0801ad3d(_reloc.c_token, reloc..LC38);
        if (iVar1 == 0) break;
        _reloc.c_token = _reloc.c_token + 1;
        sym.parse_unary_expression(placeholder_0_01, param_2, param_3, param_4, param_5);
        sym.add_action(0x1d);
    }
    return;
}


